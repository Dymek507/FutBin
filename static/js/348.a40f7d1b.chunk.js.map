{"version":3,"file":"static/js/348.a40f7d1b.chunk.js","mappings":"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","sources":["components/GridView.tsx","components/InfoScreen.tsx","hooks/useFetcherSWR.ts","hooks/useFetchImages.ts","store/app/manageMoney.ts","store/players-actions.ts","utils/generatePrice/generatePriceFunctions.ts","utils/generatePrice/generatePrice.ts","utils/generateStats/generateStats.ts","utils/generateStats/generateStatsFunctions.ts","utils/sortPlayers.ts"],"sourcesContent":["import { Grid } from '@mui/material'\r\nimport React, { lazy } from 'react'\r\nimport { Player } from '../types/modelTypes'\r\n// import Card from './Card';\r\n\r\ninterface GridViewProps {\r\n  playersArray: Player[] | null;\r\n  pickPlayer: (player: Player) => void;\r\n  pickedPlayers?: Player[];\r\n  cardSize?: string;\r\n  xxs?: number;\r\n  xs?: number;\r\n  sm?: number;\r\n  md?: number;\r\n  lg?: number;\r\n  xl?: number;\r\n}\r\n\r\nconst Card = lazy(() => import('./Card'))\r\n\r\nconst GridView = ({ playersArray, pickPlayer, pickedPlayers, cardSize = '12px', xxs = 12, xs = 6, sm = 4, md = 3, lg = 2, xl = 1.5, }: GridViewProps) => {\r\n  return (\r\n    <div className=\"mt-8\">\r\n      {playersArray &&\r\n        <Grid\r\n          sx={{ p: \"1rem\", width: \"94vw\" }}\r\n          container\r\n          alignItems=\"flex-start\"\r\n          rowSpacing={1}\r\n        >\r\n          {playersArray?.map((player) => (\r\n            <Grid\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n              key={player.id}\r\n              item\r\n              xxs={xxs}\r\n              xs={xs}\r\n              sm={sm}\r\n              md={md}\r\n              lg={lg}\r\n              xl={xl}\r\n            >\r\n\r\n\r\n              <Card\r\n                playerData={player}\r\n                sendPlayer={pickPlayer}\r\n                fontSize={cardSize}\r\n                pickedArray={pickedPlayers}\r\n              />\r\n\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GridView","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface InfoScreenProps {\r\n  text1: string;\r\n  text2: string;\r\n}\r\n\r\nconst InfoScreen = ({ text1, text2 }: InfoScreenProps) => {\r\n  return (\r\n    <div className=\"wh-full flex-center\">\r\n      <div className='w-4/6 p-6 h-4/6 bg-primary-main' >\r\n        <div className=\"flex-col gap-2 text-white border-2 border-white wh-full flex-center \">\r\n          <Typography variant={'h1'} fontSize='3em'>\r\n            {text1}\r\n          </Typography >\r\n          <Link to=\"/new-packs\">\r\n            <Typography variant='h4' >\r\n              {text2}\r\n            </Typography>\r\n          </Link>\r\n        </div >\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default InfoScreen","import { useState, useEffect } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport axios, { AxiosRequestConfig } from \"axios\";\r\n\r\nconst AuthToken = process.env.REACT_APP_FUT_DB_KEY;\r\n\r\nconst axiosFetchBlob: AxiosRequestConfig = {\r\n  responseType: \"blob\",\r\n  headers: {\r\n    Accept: \"image/png\",\r\n    \"X-Auth-Token\": AuthToken,\r\n  },\r\n};\r\n\r\nconst fetcher = (url: string) =>\r\n  axios.get(url, axiosFetchBlob).then((r) => r.data);\r\n\r\nexport const useFetcherSWR = (endPoint: string) => {\r\n  const [image, setImage] = useState<string>(\"\");\r\n  const [shouldFetch, setShouldFetch] = useState<boolean>(true);\r\n\r\n  const { data, error, isLoading } = useSWR(\r\n    shouldFetch ? `https://futdb.app/api/${endPoint}` : null,\r\n    fetcher,\r\n    { suspense: true }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const playerImage = URL.createObjectURL(data);\r\n      setImage(playerImage);\r\n      setShouldFetch(false);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    setShouldFetch(true);\r\n  }, [endPoint]);\r\n\r\n  return { image, error, isLoading };\r\n};\r\n","import { useSnackbar } from \"notistack\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useFetcherSWR } from \"./useFetcherSWR\";\r\n\r\ninterface IPlayerImages {\r\n  playerPhoto: string;\r\n  playerNation: string;\r\n  playerClub: string;\r\n}\r\n\r\nlet startLoading = true;\r\n\r\nexport const useFetchImages = (\r\n  id: number,\r\n  club: number,\r\n  nation: number\r\n): IPlayerImages => {\r\n  const [imagesLoaded, setImagesLoaded] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const {\r\n    image: playerPhoto,\r\n    error: errorPhoto,\r\n    isLoading: isLoadingPhoto,\r\n  } = useFetcherSWR(`players/${id}/image`);\r\n  const {\r\n    image: playerNation,\r\n    error: errorNation,\r\n    isLoading: isLoadingNation,\r\n  } = useFetcherSWR(`nations/${nation}/image`);\r\n  const {\r\n    image: playerClub,\r\n    error: errorClub,\r\n    isLoading: isLoadingClub,\r\n  } = useFetcherSWR(`clubs/${club}/image`);\r\n\r\n  // Check if every image is loaded\r\n  useEffect(() => {\r\n    if (isLoadingClub && isLoadingNation && isLoadingPhoto && startLoading) {\r\n      startLoading = false;\r\n      console.log(\"Fetching Players\");\r\n      enqueueSnackbar(\"Fetching Players\", {\r\n        variant: \"info\",\r\n      });\r\n    }\r\n    if (!isLoadingClub && !isLoadingNation && !isLoadingPhoto) {\r\n      setImagesLoaded(true);\r\n    }\r\n  }, [isLoadingClub, isLoadingNation, isLoadingPhoto, enqueueSnackbar]);\r\n\r\n  useEffect(() => {\r\n    if (errorClub || errorNation || errorPhoto) {\r\n      enqueueSnackbar(\"Błąd pobierania danych\", {\r\n        variant: \"error\",\r\n      });\r\n    }\r\n  }, [errorClub, errorNation, errorPhoto, enqueueSnackbar]);\r\n\r\n  return { playerPhoto, playerNation, playerClub };\r\n};\r\n","import React from \"react\";\r\nimport { doc, getDoc, updateDoc, increment } from \"@firebase/firestore\";\r\nimport { db } from \"../../firebaseConfig\";\r\n\r\nconst manageMoney = async (uId: string, amount: number) => {\r\n  if (uId !== null) {\r\n    const userDocRef = doc(db, `users/${uId}`);\r\n    try {\r\n      await updateDoc(userDocRef, {\r\n        money: increment(amount),\r\n      });\r\n    } catch (error) {\r\n      console.log(\"Error\" + error);\r\n    }\r\n  }\r\n};\r\n\r\nexport default manageMoney;\r\n","import { doc, getDoc, updateDoc } from \"@firebase/firestore\";\r\n\r\nimport { playersActions } from \"./players-slice\";\r\nimport { db } from \"../firebaseConfig\";\r\nimport { AnyAction, ThunkAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\nimport { ISlot } from \"../types/modelTypes\";\r\n\r\nexport const fetchPlayersData = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return async (dispatch, getState) => {\r\n    const uId = getState().ui.userData?.uId;\r\n\r\n    if (uId !== null) {\r\n      const userDocRef = doc(db, `users/${uId}`);\r\n      try {\r\n        const userDoc = await getDoc(userDocRef);\r\n        if (userDoc.data() !== undefined) {\r\n          const players = userDoc.data()?.playersData;\r\n          if (userDoc.data()?.playersData.length !== 0) {\r\n            dispatch(playersActions.replaceAllMyPlayers(players));\r\n          }\r\n        } else {\r\n        }\r\n      } catch (error) {\r\n        throw new Error(\"Błąd\" + error);\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const sendPlayersData = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return async (dispatch, getState) => {\r\n    const uId = getState().ui.userData.uId;\r\n    const myPlayers = getState().players.myPlayers;\r\n    if (uId !== null) {\r\n      const userDocRef = doc(db, `users/${uId}`);\r\n      try {\r\n        await updateDoc(userDocRef, {\r\n          playersData: myPlayers,\r\n        });\r\n      } catch (error) {\r\n        throw new Response(\r\n          JSON.stringify({ message: \"Could not fetch players\" }),\r\n          { status: 500 }\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"Nie jesteś zalogowany\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const deletePlayer = (\r\n  id: number\r\n): ThunkAction<void, RootState, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(playersActions.deleteFromMyPlayers(id));\r\n    const uId = getState().ui.userData.uId;\r\n    const myPlayers = getState().players.myPlayers;\r\n    const userDocRef = doc(db, `users/${uId}`);\r\n\r\n    try {\r\n      await updateDoc(userDocRef, { playersData: myPlayers });\r\n    } catch (error) {\r\n      console.log(`Błąd wysyłania ${error}`);\r\n    }\r\n  };\r\n};\r\n\r\nexport const addPlayerOnPosition = (\r\n  nr: number,\r\n  playerId: number\r\n): ThunkAction<void, RootState, unknown, AnyAction> => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(playersActions.updateMySquad({ nr, playerId }));\r\n    const uId = getState().ui.userData.uId;\r\n    const mySquad = getState().players.mySquad;\r\n    const userDocRef = doc(db, `users/${uId}`);\r\n\r\n    try {\r\n      await updateDoc(userDocRef, { squadData: mySquad });\r\n    } catch (error) {\r\n      console.log(`Błąd wysyłania ${error}`);\r\n    }\r\n  };\r\n};\r\nexport const fetchSquadData = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  unknown,\r\n  AnyAction\r\n> => {\r\n  return async (dispatch, getState) => {\r\n    const uId = getState().ui.userData.uId;\r\n    const userDocRef = doc(db, `users/${uId}`);\r\n    try {\r\n      const userDoc = await getDoc(userDocRef);\r\n\r\n      if (userDoc.data() !== undefined) {\r\n        const newMySquad: ISlot[] = userDoc.data()?.squadData;\r\n        if (userDoc.data()?.squadData.length !== 0) {\r\n          dispatch(playersActions.replaceMySquad(newMySquad));\r\n        }\r\n      } else {\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Błąd\" + error);\r\n    }\r\n  };\r\n};\r\n","import { Player } from \"../../types/modelTypes\";\r\n\r\n//Price part which depends on player rating\r\nexport const getPriceThreshold = (rating: number) => {\r\n  if (rating > 90) {\r\n    return rating ** 7 * 81;\r\n  } else if (rating > 80) {\r\n    return rating ** 7 * 27;\r\n  } else if (rating > 70) {\r\n    return rating ** 7 * 9;\r\n  } else if (rating > 60) {\r\n    return rating ** 7 * 3;\r\n  } else {\r\n    return rating ** 7;\r\n  }\r\n};\r\n\r\n// Price part which depends on player position\r\nenum Position {\r\n  CB = \"CB\",\r\n  LB = \"LB\",\r\n  RB = \"RB\",\r\n  RWB = \"RWB\",\r\n  LWB = \"LWB\",\r\n  CDM = \"CDM\",\r\n  CM = \"CM\",\r\n  CAM = \"CAM\",\r\n  LM = \"LM\",\r\n  RM = \"RM\",\r\n  CF = \"CF\",\r\n  LW = \"LW\",\r\n  RW = \"RW\",\r\n  ST = \"ST\",\r\n  RF = \"RF\",\r\n  LF = \"LF\",\r\n  GK = \"GK\",\r\n}\r\n\r\nexport const getPositionPrice = (position: string, playerData: Player) => {\r\n  const {\r\n    pace,\r\n    defending,\r\n    physicality,\r\n    passing,\r\n    dribbling,\r\n    shooting,\r\n    goalkeeperAttributes,\r\n  } = playerData;\r\n\r\n  const { diving, handling, kicking, positioning, reflexes, speed } =\r\n    playerData.goalkeeperAttributes;\r\n  // Determine the values of key attributes\r\n  if (\r\n    position === Position.CB ||\r\n    position === Position.LB ||\r\n    position === Position.RB ||\r\n    position === Position.RWB ||\r\n    position === Position.LWB\r\n  ) {\r\n    return pace + defending + physicality || 0;\r\n  } else if (\r\n    position === Position.CDM ||\r\n    position === Position.CM ||\r\n    position === Position.CAM\r\n  ) {\r\n    return passing + dribbling + shooting || 0;\r\n  } else if (\r\n    position === Position.LM ||\r\n    position === Position.RM ||\r\n    position === Position.CF\r\n  ) {\r\n    return pace + dribbling + passing || 0;\r\n  } else if (\r\n    position === Position.LW ||\r\n    position === Position.RW ||\r\n    position === Position.ST ||\r\n    position === Position.RF ||\r\n    position === Position.LF\r\n  ) {\r\n    return shooting + dribbling + pace || 0;\r\n  } else if (position === Position.GK && goalkeeperAttributes) {\r\n    const { diving, handling, kicking, positioning, reflexes, speed } =\r\n      goalkeeperAttributes;\r\n    return (\r\n      (diving! + handling! + kicking! + positioning! + reflexes! + speed!) /\r\n        2 || 0\r\n    );\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport const getColorAndRarityPrice = (color: string, rarity: number) => {\r\n  const playerRarity = rarity + 1;\r\n\r\n  const getColorPrice = (color: string) => {\r\n    switch (color) {\r\n      case \"bronze\":\r\n        return 1;\r\n      case \"silver\":\r\n        return 64;\r\n      case \"gold\":\r\n        return 512;\r\n      default:\r\n        return 1;\r\n    }\r\n  };\r\n  return playerRarity * getColorPrice(color);\r\n};\r\n\r\n//Price converter to string\r\nexport const getDisplayPrice = (playerPrice: number) => {\r\n  if (playerPrice > 999999) {\r\n    return (playerPrice / 100000).toFixed(0) + \"m\";\r\n  } else if (playerPrice > 999) {\r\n    return (playerPrice / 1000).toFixed(1) + \"k\";\r\n  } else {\r\n    return playerPrice.toString();\r\n  }\r\n};\r\n","import { Player } from \"../../types/modelTypes\";\r\nimport {\r\n  getPriceThreshold,\r\n  getPositionPrice,\r\n  getColorAndRarityPrice,\r\n  getDisplayPrice,\r\n} from \"./generatePriceFunctions\";\r\n\r\nconst generatePrice = (playerData: Player) => {\r\n  // Function which determines player price base on various stats\r\n  const {\r\n    position,\r\n    color,\r\n    rarity,\r\n    skillMoves,\r\n    weakFoot,\r\n    totalStatsInGame,\r\n    rating,\r\n  } = playerData;\r\n\r\n  //Multipliers\r\n  const mapMulti = {\r\n    skillFoot: 5000,\r\n    totalStats: 10,\r\n    rating: 0.0000001,\r\n    position: 100,\r\n    color: 20000,\r\n  };\r\n\r\n  //Price part which depends on skill moves and weak foot\r\n  const skillFootPrice = (skillMoves + weakFoot) * mapMulti.skillFoot;\r\n\r\n  //Price part which depends on total stats\r\n  const totalStatsPrice = totalStatsInGame * mapMulti.totalStats;\r\n\r\n  //Price part which depends on player rating\r\n  const ratingPrice = getPriceThreshold(rating) * mapMulti.rating;\r\n\r\n  // Price part which depends on player position\r\n  const positionPrice =\r\n    getPositionPrice(position, playerData) * mapMulti.position;\r\n\r\n  // Price part which depends on player color and rarity\r\n  const colorAndRarityPrice = getColorAndRarityPrice(color, rarity);\r\n\r\n  const playerPrice = Math.floor(\r\n    (skillFootPrice +\r\n      totalStatsPrice +\r\n      ratingPrice +\r\n      positionPrice +\r\n      colorAndRarityPrice) /\r\n      10000\r\n  );\r\n  // console.log(\r\n  //   skillFootPrice,\r\n  //   totalStatsPrice,\r\n  //   ratingPrice,\r\n  //   positionPrice,\r\n  //   colorPrice()\r\n  // );\r\n\r\n  const displayPrice = getDisplayPrice(playerPrice);\r\n  return { playerPrice, displayPrice };\r\n};\r\n\r\nexport default generatePrice;\r\n","import { Player } from \"../../types/modelTypes\";\r\nimport generatePrice from \"../generatePrice/generatePrice\";\r\nimport { changeToGkStats, choseBackground } from \"./generateStatsFunctions\";\r\n\r\nconst generateStats = (playerData: Player, type: string) => {\r\n  // Start data and player stats destructuring\r\n  let { commonName = \"????\", position = \"??\", rating = \"??\" } = playerData;\r\n\r\n  //Change display stats for goalkeepers\r\n  let {\r\n    defending = \"??\",\r\n    dribbling = \"??\",\r\n    shooting = \"??\",\r\n    pace = \"??\",\r\n    passing = \"??\",\r\n    physicality = \"??\",\r\n  } = changeToGkStats(playerData) ?? playerData;\r\n\r\n  //Change background color depending on player rarity\r\n  const cardBackground = choseBackground(\r\n    playerData.rarity,\r\n    playerData.color,\r\n    type as \"card\" | \"line\"\r\n  );\r\n\r\n  const { playerPrice, displayPrice } = generatePrice(playerData);\r\n\r\n  return {\r\n    cardBackground,\r\n    commonName,\r\n    rating,\r\n    position,\r\n    defending,\r\n    pace,\r\n    dribbling,\r\n    shooting,\r\n    passing,\r\n    physicality,\r\n    playerPrice,\r\n    displayPrice,\r\n  };\r\n};\r\n\r\nexport default generateStats;\r\n","import {\r\n  goldN,\r\n  goldR,\r\n  silverN,\r\n  silverR,\r\n  bronzeN,\r\n  bronzeR,\r\n} from \"../../assets/CardBackgrounds\";\r\nimport { Player } from \"../../types/modelTypes\";\r\n\r\nexport const choseBackground = (\r\n  rarity: number,\r\n  color: \"bronze\" | \"silver\" | \"gold\",\r\n  type: \"card\" | \"line\"\r\n): string => {\r\n  const gradients: Record<\r\n    string,\r\n    Record<number, Record<\"bronze\" | \"silver\" | \"gold\", string>>\r\n  > = {\r\n    card: {\r\n      0: { bronze: bronzeN, silver: silverN, gold: goldN },\r\n      1: { bronze: bronzeR, silver: silverR, gold: goldR },\r\n    },\r\n    line: {\r\n      0: {\r\n        bronze:\r\n          \"linear-gradient(90deg, rgba(79,38,1,1) 0%, rgba(101,49,0,1) 39%, rgba(130,63,0,1) 100%)\",\r\n        silver:\r\n          \"linear-gradient(90deg, rgba(80,80,80,1) 0%, rgba(96,96,96,1) 39%, rgba(112,112,112,1) 100%)\",\r\n        gold: \"linear-gradient(90deg, rgba(171,154,0,1) 0%, rgba(185,167,0,1) 39%, rgba(204,183,0,1) 100%)\",\r\n      },\r\n      1: {\r\n        bronze:\r\n          \"linear-gradient(90deg, rgba(79,38,1,1) 0%, rgba(101,49,0,1) 39%, rgba(130,63,0,1) 100%)\",\r\n        silver:\r\n          \"linear-gradient(90deg, rgba(80,80,80,1) 0%, rgba(96,96,96,1) 39%, rgba(112,112,112,1) 100%)\",\r\n        gold: \"linear-gradient(90deg, rgba(171,154,0,1) 0%, rgba(185,167,0,1) 39%, rgba(204,183,0,1) 100%)\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return gradients[type][rarity][color];\r\n};\r\n\r\nexport const changeToGkStats = (playerData: Player) => {\r\n  const { diving, handling, kicking, positioning, reflexes, speed } =\r\n    playerData.goalkeeperAttributes;\r\n\r\n  if (playerData.position === \"GK\") {\r\n    return {\r\n      defending: speed?.toString() ?? \"0\",\r\n      pace: diving?.toString() ?? \"0\",\r\n      dribbling: reflexes?.toString() ?? \"0\",\r\n      shooting: handling?.toString() ?? \"0\",\r\n      passing: kicking?.toString() ?? \"0\",\r\n      physicality: positioning?.toString() ?? \"0\",\r\n    };\r\n  } else {\r\n    return;\r\n  }\r\n};\r\n","import type { Player } from \"../types/modelTypes\";\r\n\r\nexport enum SortingVariants {\r\n  rat = \"rating\",\r\n  pac = \"pace\",\r\n  sho = \"shooting\",\r\n  pas = \"passing\",\r\n  dri = \"dribbling\",\r\n  def = \"defending\",\r\n  phy = \"physicality\",\r\n}\r\n\r\nconst sortPlayers = (\r\n  playersArray: Player[],\r\n  sortingAtr: SortingVariants,\r\n  sortingDir: boolean\r\n): Player[] => {\r\n  const newArray = [...playersArray];\r\n  //Sorting by attribute\r\n  newArray.sort((a, b) => {\r\n    return a[sortingAtr] - b[sortingAtr];\r\n  });\r\n\r\n  //Sorting by direction\r\n  if (sortingDir) {\r\n    newArray.reverse();\r\n  }\r\n\r\n  return newArray;\r\n};\r\n\r\nexport default sortPlayers;\r\n"],"names":["Card","lazy","playersArray","pickPlayer","pickedPlayers","cardSize","xxs","xs","sm","md","lg","xl","className","sx","p","width","container","alignItems","rowSpacing","map","player","display","justifyContent","item","playerData","sendPlayer","fontSize","pickedArray","id","text1","text2","variant","to","axiosFetchBlob","responseType","headers","Accept","process","fetcher","url","axios","then","r","data","useFetcherSWR","endPoint","useState","image","setImage","shouldFetch","setShouldFetch","useSWR","suspense","error","isLoading","useEffect","playerImage","URL","createObjectURL","startLoading","useFetchImages","club","nation","setImagesLoaded","enqueueSnackbar","useSnackbar","playerPhoto","errorPhoto","isLoadingPhoto","playerNation","errorNation","isLoadingNation","playerClub","errorClub","isLoadingClub","console","log","manageMoney","uId","amount","userDocRef","doc","db","updateDoc","money","increment","fetchPlayersData","dispatch","getState","ui","userData","getDoc","undefined","userDoc","players","playersData","length","playersActions","Error","sendPlayersData","myPlayers","Response","JSON","stringify","message","status","alert","deletePlayer","addPlayerOnPosition","nr","playerId","mySquad","squadData","fetchSquadData","newMySquad","Position","position","color","rarity","mapMulti","skillFootPrice","skillMoves","weakFoot","totalStatsPrice","totalStatsInGame","ratingPrice","rating","getPriceThreshold","positionPrice","pace","defending","physicality","passing","dribbling","shooting","goalkeeperAttributes","diving","handling","kicking","positioning","reflexes","speed","CB","LB","RB","RWB","LWB","CDM","CM","CAM","LM","RM","CF","LW","RW","ST","RF","LF","GK","getPositionPrice","colorAndRarityPrice","getColorPrice","getColorAndRarityPrice","playerPrice","Math","floor","displayPrice","toFixed","toString","getDisplayPrice","type","commonName","changeToGkStats","cardBackground","card","bronze","bronzeN","silver","silverN","gold","goldN","bronzeR","silverR","goldR","line","choseBackground","generatePrice","SortingVariants","sortingAtr","sortingDir","newArray","sort","a","b","reverse"],"sourceRoot":""}