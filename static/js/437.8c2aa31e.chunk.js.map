{"version":3,"file":"static/js/437.8c2aa31e.chunk.js","mappings":"gKAAA,IAAIA,EAAU,WAAc,EACxBC,EAAY,WAAc,C,qECAf,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,GAAS,OAA6BJ,EAAQC,GAElD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GACpD,IAAKG,EAAI,EAAGA,EAAII,EAAiBC,OAAQL,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASQ,QAAQP,IAAQ,GACxBG,OAAOK,UAAUC,qBAAqBC,KAAKZ,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CACA,OAAOE,CACT,C,0FCfMS,GACO,E,iDCEPC,EAAS,SAACC,GAAC,OAAKA,EAAIA,CAAC,EACrBC,GAAUC,EAAAA,EAAAA,GAAcH,GACxBI,GAAYC,EAAAA,EAAAA,GAAaL,G,8BCJ/B,SAASM,EAASL,EAAGM,EAAGC,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDP,EAAc,GAATM,EAAIN,GAASO,EACzBA,EAAI,GACGD,EACPC,EAAI,EAAI,EACDP,GAAKM,EAAIN,IAAM,EAAI,EAAIO,GAAK,EAChCP,CACX,C,kCCHMQ,EAAiB,SAACC,EAAMC,EAAIC,GAC9B,IAAMC,EAAWH,EAAOA,EACxB,OAAOI,KAAKC,KAAKD,KAAKE,IAAI,EAAGJ,GAAKD,EAAKA,EAAKE,GAAYA,GAC5D,EACMI,EAAa,CAACC,EAAAA,EAAKC,EAAAA,EAAMC,EAAAA,GAE/B,SAASC,EAAOC,GACZ,IAFkBV,EAEZW,GAFYX,EAEQU,EAFFL,EAAWO,MAAK,SAACD,GAAI,OAAKA,EAAKE,KAAKb,EAAE,MAG9D5B,EAAAA,EAAAA,GAAU0C,QAAQH,GAAO,IAAF,OAAMD,EAAK,yEAClC,IAAIK,EAAQJ,EAAKK,MAAMN,GAKvB,OAJIC,IAASH,EAAAA,IAETO,EDRR,SAAoB,GAAuC,IAArCE,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAC9CH,GAAO,IAEPE,GAAa,IACb,IAAIE,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAL,GAAc,IAQT,CACD,IAAMvB,EAAIwB,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC7B,EAAI,EAAI8B,EAAYxB,EAC1B0B,EAAM3B,EAASL,EAAGM,EAAGsB,EAAM,EAAI,GAC/BK,EAAQ5B,EAASL,EAAGM,EAAGsB,GACvBM,EAAO7B,EAASL,EAAGM,EAAGsB,EAAM,EAAI,EACpC,MAVII,EAAMC,EAAQC,EAAOJ,EAWzB,MAAO,CACHE,IAAKnB,KAAKsB,MAAY,IAANH,GAChBC,MAAOpB,KAAKsB,MAAc,IAARF,GAClBC,KAAMrB,KAAKsB,MAAa,IAAPD,GACjBH,MAAAA,EAER,CCjBgBK,CAAWV,IAEhBA,CACX,CACA,IAAMW,EAAW,SAAC5B,EAAMC,GACpB,IAAM4B,EAAWlB,EAAOX,GAClB8B,EAASnB,EAAOV,GAChB8B,GAAU,UAAKF,GACrB,OAAO,SAAC3B,GAKJ,OAJA6B,EAAQR,IAAMxB,EAAe8B,EAASN,IAAKO,EAAOP,IAAKrB,GACvD6B,EAAQP,MAAQzB,EAAe8B,EAASL,MAAOM,EAAON,MAAOtB,GAC7D6B,EAAQN,KAAO1B,EAAe8B,EAASJ,KAAMK,EAAOL,KAAMvB,GAC1D6B,EAAQT,OAAQU,EAAAA,EAAAA,GAAIH,EAASP,MAAOQ,EAAOR,MAAOpB,GAC3CO,EAAAA,EAAAA,UAAesB,EAC1B,CACJ,E,oBC9BA,SAASE,EAASC,EAAQtD,GACtB,MAAsB,kBAAXsD,EACA,SAAChC,GAAC,OAAK8B,EAAAA,EAAAA,GAAIE,EAAQtD,EAAQsB,EAAE,EAE/BU,EAAAA,EAAAA,KAAWsB,GACTN,EAASM,EAAQtD,GAGjBuD,EAAWD,EAAQtD,EAElC,CACA,IAAMwD,EAAW,SAACpC,EAAMC,GACpB,IAAMoC,GAAS,OAAIrC,GACbsC,EAAYD,EAAOrD,OACnBuD,EAAavC,EAAKwC,KAAI,SAACC,EAAU9D,GAAC,OAAKsD,EAASQ,EAAUxC,EAAGtB,GAAG,IACtE,OAAO,SAACuB,GACJ,IAAK,IAAIvB,EAAI,EAAGA,EAAI2D,EAAW3D,IAC3B0D,EAAO1D,GAAK4D,EAAW5D,GAAGuB,GAE9B,OAAOmC,CACX,CACJ,EACMK,EAAY,SAACR,EAAQtD,GACvB,IAAMyD,GAAS,kBAAKH,GAAWtD,GACzB2D,EAAa,CAAC,EACpB,IAAK,IAAM7D,KAAO2D,OACMM,IAAhBT,EAAOxD,SAAsCiE,IAAhB/D,EAAOF,KACpC6D,EAAW7D,GAAOuD,EAASC,EAAOxD,GAAME,EAAOF,KAGvD,OAAO,SAACwB,GACJ,IAAK,IAAMxB,KAAO6D,EACdF,EAAO3D,GAAO6D,EAAW7D,GAAKwB,GAElC,OAAOmC,CACX,CACJ,EACMF,EAAa,SAACD,EAAQtD,GACxB,IAAMgE,EAAWC,EAAAA,EAAAA,kBAA0BjE,GACrCkE,GAAcC,EAAAA,EAAAA,GAAoBb,GAClCc,GAAcD,EAAAA,EAAAA,GAAoBnE,GAGxC,OAFuBkE,EAAYG,YAAcD,EAAYC,WACzDH,EAAYI,YAAcF,EAAYE,YAE/BC,EAAAA,EAAAA,GAAKf,EAASU,EAAYM,OAAQJ,EAAYI,QAASR,KAG9DvE,EAAAA,EAAAA,IAAQ,EAAM,mBAAF,OAAqB6D,EAAM,kBAAUtD,EAAM,6KAChD,SAACW,GAAC,gBAAQA,EAAI,EAAIX,EAASsD,EAAM,EAEhD,E,UChDMmB,EAAY,SAACrD,EAAMC,GAAE,OAAK,SAACV,GAAC,OAAKyC,EAAAA,EAAAA,GAAIhC,EAAMC,EAAIV,EAAE,GAqBvD,SAAS+D,EAAajB,EAAQkB,EAAMC,GAIhC,IAHA,IArBwBtD,EAqBlBuD,EAAS,GACTC,EAAeF,IArBJ,kBADOtD,EAsB+BmC,EAAO,IApBnDgB,EAEW,kBAANnD,EACRU,EAAAA,EAAAA,KAAWV,GACJ0B,EAGAO,EAGNwB,MAAMC,QAAQ1D,GACZkC,EAEW,kBAANlC,EACLwC,EAEJW,GAKDQ,EAAYxB,EAAOrD,OAAS,EACzBL,EAAI,EAAGA,EAAIkF,EAAWlF,IAAK,CAChC,IAAImF,EAAQJ,EAAarB,EAAO1D,GAAI0D,EAAO1D,EAAI,IAC/C,GAAI4E,EAAM,CACN,IAAMQ,EAAiBJ,MAAMC,QAAQL,GAAQA,EAAK5E,GAAK4E,EACvDO,GAAQX,EAAAA,EAAAA,GAAKY,EAAgBD,EACjC,CACAL,EAAOO,KAAKF,EAChB,CACA,OAAOL,CACX,CAoBA,SAASQ,EAAYC,EAAO7B,GAAqD,6DAAJ,CAAC,EAAC,IAAzC8B,MAAOC,OAAO,IAAG,GAAI,EAAEb,EAAI,EAAJA,KAAMO,EAAK,EAALA,MACzDO,EAAcH,EAAMlF,QAC1BV,EAAAA,EAAAA,GAAU+F,IAAgBhC,EAAOrD,OAAQ,yDACzCV,EAAAA,EAAAA,IAAWiF,IAASI,MAAMC,QAAQL,IAASA,EAAKvE,SAAWqF,EAAc,EAAG,oIAExEH,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,GAAQ,OAAIA,GAAOI,UACnBjC,GAAS,OAAIA,GAAQiC,WAEzB,IAAMb,EAASH,EAAajB,EAAQkB,EAAMO,GACpCD,EAAYJ,EAAOzE,OACnBuF,EAAe,SAACrE,GAClB,IAAIvB,EAAI,EACR,GAAIkF,EAAY,EACZ,KAAOlF,EAAIuF,EAAMlF,OAAS,KAClBkB,EAAIgE,EAAMvF,EAAI,IADOA,KAKjC,IAAM6F,GAAkBC,EAAAA,EAAAA,GAASP,EAAMvF,GAAIuF,EAAMvF,EAAI,GAAIuB,GACzD,OAAOuD,EAAO9E,GAAG6F,EACrB,EACA,OAAOJ,EACD,SAAClE,GAAC,OAAKqE,GAAaJ,EAAAA,EAAAA,GAAMD,EAAM,GAAIA,EAAMG,EAAc,GAAInE,GAAG,EAC/DqE,CACV,C,wBCpEMG,EAAa,SAAC5E,EAAG6E,EAAIC,GAAE,SAAQ,EAAM,EAAMA,EAAK,EAAMD,GAAM7E,GAAK,EAAM8E,EAAK,EAAMD,IAAO7E,EAAI,EAAM6E,GACrG7E,CAAC,EAoBL,SAAS+E,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOC,EAAAA,EACX,IAAMC,EAAW,SAACC,GAAE,OArBxB,SAAyBC,EAAGC,EAAYC,EAAYT,EAAKE,GACrD,IAAIQ,EACAC,EACA9G,EAAI,EACR,IAEI6G,EAAWd,EADXe,EAAWH,GAAcC,EAAaD,GAAc,EACpBR,EAAKE,GAAOK,GAC7B,EACXE,EAAaE,EAGbH,EAAaG,QAEZrF,KAAKsF,IAAIF,GAfO,QAgBnB7G,EAfuB,IAgB7B,OAAO8G,CACX,CAK6BE,CAAgBP,EAAI,EAAG,EAAGN,EAAKE,EAAI,EAE5D,OAAO,SAAClF,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAI4E,EAAWS,EAASrF,GAAIiF,EAAKE,EAAI,CAC5E,C,cC5CMW,EAAUf,EAAY,IAAM,KAAM,IAAM,KACxCgB,GAASpG,EAAAA,EAAAA,GAAcmG,GACvBE,GAAYnG,EAAAA,EAAAA,GAAakG,GCEzBE,EAAe,CACjBC,OAAQd,EAAAA,EACR5F,OAAAA,EACAI,UAAAA,EACAF,QAAAA,EACAyG,OAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACAC,QAAAA,EAAAA,GACAN,OAAAA,EACAC,UAAAA,EACAF,QAAAA,EACAQ,WCjBe,SAAC7G,GAAC,OAAMA,GAAK,GAAK,EAAI,GAAMsG,EAAOtG,GAAK,IAAO,EAAIa,KAAKiG,IAAI,GAAI,IAAM9G,EAAI,IAAI,GDmB3F+G,EAA6B,SAACC,GAChC,GAAI5C,MAAMC,QAAQ2C,GAAa,EAE3BjI,EAAAA,EAAAA,GAAgC,IAAtBiI,EAAWvH,OAAc,2DACnC,cAAyBuH,EAAU,GACnC,OAAO1B,EADE,KAAI,KAAI,KAAI,KAEzB,CACK,MAA0B,kBAAf0B,IAEZjI,EAAAA,EAAAA,QAAuCqE,IAA7BoD,EAAaQ,GAA2B,wBAAF,OAA0BA,EAAU,MAC7ER,EAAaQ,IAEjBA,CACX,EEpBA,SAASC,EAAU,GAAyE,IAA5DC,EAAc,EAAzBD,UAAS,IAAkBjD,KAAAA,OAAI,IAAG,EAAA7D,EAAS,EAAEgH,EAAK,EAALA,MAAK,IAAEC,SAAAA,OAAQ,IAAG,MAAG,EACnFF,GAAiB,OAAIA,GAKrB,IAAMG,EFeY,SAACrD,GACnB,OAAOI,MAAMC,QAAQL,IAA4B,kBAAZA,EAAK,EAC9C,CEjB4BsD,CAActD,GAChCA,EAAKf,IAAI8D,GACTA,EAA2B/C,GAK3BuD,EAAQ,CACVC,MAAM,EACNC,MAAOP,EAAe,IAKpBQ,EAvBV,SAA8BC,EAAQP,GAClC,OAAOO,EAAO1E,KAAI,SAAC2E,GAAC,OAAKA,EAAIR,CAAQ,GACzC,CAqB0BS,CAGtBV,GAASA,EAAM1H,SAAWyH,EAAezH,OACnC0H,EA/BV,SAAuBtD,GACnB,IAAMd,EAAYc,EAAOpE,OACzB,OAAOoE,EAAOZ,KAAI,SAAC6E,EAAQ1I,GAAC,OAAW,IAANA,EAAUA,GAAK2D,EAAY,GAAK,CAAC,GACtE,CA6BUgF,CAAcb,GAAiBE,GACrC,SAASY,IACL,OAAOtD,EAAYgD,EAAeR,EAAgB,CAC9ClD,KAAMI,MAAMC,QAAQgD,GACdA,GAvCKxD,EAwCSqD,EAxCDe,EAwCiBZ,EAvCrCxD,EAAOZ,KAAI,kBAAMgF,GAAU9H,CAAS,IAAE+H,OAAO,EAAGrE,EAAOpE,OAAS,MAD3E,IAAuBoE,EAAQoE,CA0C3B,CACA,IAAIjD,EAAegD,IACnB,MAAO,CACHG,KAAM,SAAC5H,GAGH,OAFAgH,EAAME,MAAQzC,EAAazE,GAC3BgH,EAAMC,KAAOjH,GAAK6G,EACXG,CACX,EACAa,WAAY,WACRlB,EAAenC,UACfC,EAAegD,GACnB,EAER,CCxDA,IAAMK,EAAU,KAKhB,SAASC,EAAW,GAA4D,IACxEC,EACAC,EAFwE,IAA1DpB,SAAAA,OAAQ,IAAG,MAAG,MAAEqB,OAAAA,OAAM,IAAG,MAAI,MAAEC,SAAAA,OAAQ,IAAG,IAAC,MAAEC,KAAAA,OAAI,IAAG,IAAC,GAGvE7J,EAAAA,EAAAA,GAAQsI,GAAYwB,IAAoB,8CACxC,IAAIC,EAAe,EAAIJ,EAIvBI,GAAejE,EAAAA,EAAAA,GAVA,IACA,EAS8BiE,GAC7CzB,GAAWxC,EAAAA,EAAAA,GAbK,IACA,GAY2BwC,EAAW,KAClDyB,EAAe,GAIfN,EAAW,SAACO,GACR,IAAMC,EAAmBD,EAAeD,EAClCG,EAAQD,EAAmB3B,EAC3B6B,EAAIF,EAAmBL,EACvBQ,EAAIC,EAAgBL,EAAcD,GAClCO,EAAIvI,KAAKwI,KAAKL,GACpB,OAAOX,EAAWY,EAAIC,EAAKE,CAC/B,EACAZ,EAAa,SAACM,GACV,IACME,EADmBF,EAAeD,EACPzB,EAC3BkC,EAAIN,EAAQN,EAAWA,EACvBa,EAAI1I,KAAKiG,IAAI+B,EAAc,GAAKhI,KAAKiG,IAAIgC,EAAc,GAAK1B,EAC5DoC,EAAI3I,KAAKwI,KAAKL,GACdS,EAAIN,EAAgBtI,KAAKiG,IAAIgC,EAAc,GAAID,GAErD,QADgBN,EAASO,GAAgBT,EAAU,GAAK,EAAI,KACzCiB,EAAIC,GAAKC,GAAMC,CACtC,IAMAlB,EAAW,SAACO,GAGR,OAFUjI,KAAKwI,KAAKP,EAAe1B,KACxB0B,EAAeJ,GAAYtB,EAAW,GAC1C,IACX,EACAoB,EAAa,SAACM,GAGV,OAFUjI,KAAKwI,KAAKP,EAAe1B,IACIA,EAAWA,GAAvCsB,EAAWI,GAE1B,GAEJ,IACMA,EAmBV,SAAyBP,EAAUC,EAAYkB,GAE3C,IADA,IAAIC,EAASD,EACJtK,EAAI,EAAGA,EAHG,GAGiBA,IAChCuK,GAAkBpB,EAASoB,GAAUnB,EAAWmB,GAEpD,OAAOA,CACX,CAzByBC,CAAgBrB,EAAUC,EAD1B,EAAIpB,GAGzB,GADAA,GAAsB,IAClByC,MAAMf,GACN,MAAO,CACHgB,UAAW,IACXC,QAAS,GACT3C,SAAAA,GAIJ,IAAM0C,EAAYjJ,KAAKiG,IAAIgC,EAAc,GAAKH,EAC9C,MAAO,CACHmB,UAAAA,EACAC,QAAwB,EAAflB,EAAmBhI,KAAKC,KAAK6H,EAAOmB,GAC7C1C,SAAAA,EAGZ,CASA,SAAS+B,EAAgBL,EAAcD,GACnC,OAAOC,EAAejI,KAAKC,KAAK,EAAI+H,EAAeA,EACvD,C,qDClFMmB,EAAe,CAAC,WAAY,UAC5BC,EAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAaC,EAASC,GAC3B,OAAOA,EAAKC,MAAK,SAAClL,GAAG,YAAsBiE,IAAjB+G,EAAQhL,EAAkB,GACxD,CA4BA,SAASmL,GAAO,GAAiD,IAA/CrD,EAAS,EAATA,UAAWsD,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAcL,GAAO,YACrDxH,EAASsE,EAAU,GACnB5H,EAAS4H,EAAUA,EAAUxH,OAAS,GAKpC8H,EAAQ,CAAEC,MAAM,EAAOC,MAAO9E,GACpC,EAnCJ,SAA0BwH,GACtB,IAAIM,GAAgB,QAChB/B,SAAU,EACVoB,UAAW,IACXC,QAAS,GACTpB,KAAM,EACN+B,wBAAwB,GACrBP,GAGP,IAAKD,GAAaC,EAASF,IACvBC,GAAaC,EAASH,GAAe,CACrC,IAAMW,EAAUrC,EAAW6B,IAC3BM,GAAgB,0BACTA,GACAE,GAAO,IACVjC,SAAU,EACVC,KAAM,KAEI+B,wBAAyB,CAC3C,CACA,OAAOD,CACX,CAasFG,CAAiBT,GAA3FL,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASpB,EAAI,EAAJA,KAAMD,EAAQ,EAARA,SAAUtB,EAAQ,EAARA,SAAUsD,EAAsB,EAAtBA,uBAClDG,EAAgBC,GAChBC,EAAkBrC,GAAaA,EAAW,IAAQ,EAChDG,EAAekB,GAAW,EAAIlJ,KAAKC,KAAKgJ,EAAYnB,IAC1D,SAASqC,IACL,IAAMC,EAAe5L,EAASsD,EACxBuI,EAAsBrK,KAAKC,KAAKgJ,EAAYnB,GAAQ,IAQpDwC,EAAkBtK,KAAKsF,IAAI8E,GAAgB,EAGjD,GAFAT,IAAcA,EAAYW,EAAkB,IAAO,GACnDZ,IAAcA,EAAYY,EAAkB,KAAQ,IAChDtC,EAAe,EAAG,CAClB,IAAMuC,EAAcjC,EAAgB+B,EAAqBrC,GAEzDgC,EAAgB,SAACtK,GACb,IAAMgI,EAAW1H,KAAKwI,KAAKR,EAAeqC,EAAsB3K,GAChE,OAAQlB,EACJkJ,IACOwC,EACClC,EAAeqC,EAAsBD,GACrCG,EACAvK,KAAKwK,IAAID,EAAc7K,GACvB0K,EAAepK,KAAKyK,IAAIF,EAAc7K,GACtD,CACJ,MACK,GAAqB,IAAjBsI,EAELgC,EAAgB,SAACtK,GAAC,OAAKlB,EACnBwB,KAAKwI,KAAK6B,EAAsB3K,IAC3B0K,GACIF,EAAkBG,EAAsBD,GACrC1K,EAAE,MAEjB,CAED,IAAMgL,EAAoBL,EAAsBrK,KAAKC,KAAK+H,EAAeA,EAAe,GACxFgC,EAAgB,SAACtK,GACb,IAAMgI,EAAW1H,KAAKwI,KAAKR,EAAeqC,EAAsB3K,GAE1DiL,EAAW3K,KAAK4K,IAAIF,EAAoBhL,EAAG,KACjD,OAAQlB,EACHkJ,IACKwC,EACElC,EAAeqC,EAAsBD,GACrCpK,KAAK6K,KAAKF,GACVD,EACIN,EACApK,KAAK8K,KAAKH,IAClBD,CACZ,CACJ,CACJ,CAEA,OADAP,IACO,CACH7C,KAAM,SAAC5H,GACH,IAAMqL,EAAUf,EAActK,GAC9B,GAAKmK,EAsBDnD,EAAMC,KAAOjH,GAAK6G,MAtBO,CACzB,IAAIyE,EAAkBd,EACtB,GAAU,IAANxK,EAMA,GAAIsI,EAAe,EAAG,CAClB,IAAMiD,EAAQjL,KAAKE,IAAI,EAAGR,EAnFnB,GAoFPsL,GAAkBE,EAAAA,EAAAA,GAAkBH,EAAUf,EAAciB,GAAQvL,EAAIuL,EAC5E,MAEID,EAAkB,EAG1B,IAAMG,EAA2BnL,KAAKsF,IAAI0F,IAAoBrB,EACxDyB,EAA+BpL,KAAKsF,IAAI9G,EAASuM,IAAYrB,EACnEhD,EAAMC,KACFwE,GAA4BC,CACpC,CAKA,OADA1E,EAAME,MAAQF,EAAMC,KAAOnI,EAASuM,EAC7BrE,CACX,EACAa,WAAY,WACR2C,GAAmBA,EAAgB,MAChB,CAAC1L,EAAQsD,GAA3BA,EAAM,KAAEtD,EAAM,KACf2L,GACJ,EAER,CACAV,GAAO4B,mBAAqB,SAACjD,EAAGC,GAAC,MAAkB,kBAAND,GAA+B,kBAANC,CAAc,EACpF,IAAM4B,GAAO,SAACqB,GAAE,OAAK,CAAC,E,8JCtIhBC,GAAQ,CACVC,MCPJ,SAAe,GAMmF,QAAlGpF,UAAAA,OAAS,IAAG,GAAC,GAAE,MAAEyB,SAAAA,OAAQ,IAAG,IAAC,MAAE4D,MAAAA,OAAK,IAAG,KAAG,MAAEC,aAAAA,OAAY,IAAG,MAAG,MAAEhC,UAAAA,OAAS,IAAG,KAAG,EAAEiC,EAAY,EAAZA,aACvE7J,EAASsE,EAAU,GAKnBM,EAAQ,CAAEC,MAAM,EAAOC,MAAO9E,GAChC8J,EAAYH,EAAQ5D,EAClBgE,EAAQ/J,EAAS8J,EACjBpN,OAA0B+D,IAAjBoJ,EAA6BE,EAAQF,EAAaE,GAOjE,OAFIrN,IAAWqN,IACXD,EAAYpN,EAASsD,GAClB,CACHwF,KAAM,SAAC5H,GACH,IAAMyI,GAASyD,EAAY5L,KAAKwI,KAAK9I,EAAIgM,GAGzC,OAFAhF,EAAMC,OAASwB,EAAQuB,GAAavB,GAASuB,GAC7ChD,EAAME,MAAQF,EAAMC,KAAOnI,EAASA,EAAS2J,EACtCzB,CACX,EACAa,WAAY,WAAQ,EAE5B,EDvBInB,UAAWA,EACX0F,MAAO1F,EACPqD,OAAAA,IAEJ,SAASsC,GAAYC,EAASzF,GAAqB,IAAX0F,EAAQ,UAAH,6CAAG,EAC5C,OAAOD,EAAUzF,EAAW0F,CAChC,CASA,IAAMC,GAAY,SAACC,GACf,IAAMC,EAAgB,SAAH,OAAMjE,EAAK,EAALA,MAAK,OAAOgE,EAAOhE,EAAM,EAClD,MAAO,CACHkE,MAAO,kBAAMC,EAAAA,GAAAA,OAAYF,GAAe,EAAK,EAC7CG,KAAM,kBAAMC,EAAAA,GAAAA,OAAkBJ,EAAc,EAEpD,EACA,SAASK,GAAQ,GAAqO,IAC9OC,EAAIC,EAEJC,EAKAC,EARWtG,EAAQ,EAARA,SAAQ,IAAEuG,OAAAA,OAAM,IAAG,EAAAZ,GAAS,MAAEF,QAAAA,OAAO,IAAG,IAAC,MAAEe,OAAQC,OAAS,IAAG,IAAC,MAAEC,WAAAA,OAAU,IAAG,SAAM,MAAEC,YAAAA,OAAW,IAAG,IAAC,EAAaC,EAAW,EAAtB/G,UAAS,IAAegH,SAAAA,OAAQ,IAAG,GAAI,EAAEC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAQ,IAAEhN,KAAAA,OAAI,IAAG,cAAW,EAAK6I,GAAO,aAExOoE,EAAiB1B,EAEnB2B,EAAc,EACdC,EAAmBrH,EACnBsH,GAAa,EACbC,GAAoB,EAElBC,EAAWxC,GAAM4B,EAAYvO,OAAS,EAAI,YAAc6B,IAAS2F,EACjEtE,EAASqL,EAAY,GACrB3O,EAAS2O,EAAYA,EAAYvO,OAAS,GAC5C8H,EAAQ,CAAEC,MAAM,EAAOC,MAAO9E,IACgB,QAA7C6K,GAAMD,EAAKqB,GAAU1C,0BAAuC,IAAPsB,OAAgB,EAASA,EAAG3N,KAAK0N,EAAI5K,EAAQtD,MACnGqO,EAAwBhJ,EAAY,CAAC,EAAG,KAAM,CAAC/B,EAAQtD,GAAS,CAC5DuF,OAAO,IAEXoJ,EAAc,CAAC,EAAG,MAEtB,IAAMa,EAAYD,GAAS,kBACpBzE,GAAO,IACV/C,SAAAA,EACAH,UAAW+G,KAEf,SAASJ,IACLY,IACmB,YAAfV,EAEAjB,EA3CZ,SAAwBA,GAA4D,IAAnDzF,EAAW,UAAH,6CAAG,EAAG0F,EAAQ,UAAH,6CAAG,EAAG6B,IAAoB,UAAH,+CACvE,OAAOA,EACD/B,GAAYxF,GAAYyF,EAASzF,EAAU0F,GAC3C1F,GAAYyF,EAAUzF,GAAY0F,CAC5C,CAuCsBgC,CAAejC,EAAS4B,EAAkBV,EADpDY,EAAoBH,EAAc,IAAM,IAIxC3B,EAAUD,GAAYC,EAAS4B,EAAkBV,GAC9B,WAAfD,GACAe,EAAUzG,cAElBsG,GAAa,EACbL,GAAYA,GAChB,CAKA,SAASrB,EAAOhE,GACP2F,IACD3F,GAASA,GACb6D,GAAW7D,EACN0F,IACDnH,EAAQsH,EAAU1G,KAAKtH,KAAKE,IAAI,EAAG8L,IAC/Ba,IACAnG,EAAME,MAAQiG,EAAsBnG,EAAME,QAC9CiH,EAAaC,EAAoBpH,EAAMC,KAAOqF,GAAW,GAE7DyB,GAAYA,EAAS/G,EAAME,OACvBiH,IACoB,IAAhBF,IACAC,OACyBrL,IAArBqL,EAAiCA,EAAmB5B,GAExD2B,EAAcX,EApE9B,SAA+BhB,EAASzF,EAAU0F,EAAO6B,GACrD,OAAOA,EAAoB9B,GAAWzF,EAAW0F,EAAQD,IAAYC,CACzE,CAmEgBiC,CAAsBlC,EAAS4B,EAAkBV,EAAaY,IAAsBf,KApB5FH,GAAkBA,EAAeL,OACjCgB,GAAcA,KAyBlB,CAOA,OADAH,IAJIC,GAAUA,KACVT,EAAiBE,EAAOX,IACTE,SAGZ,CACHE,KAAM,WACFe,GAAUA,IACVV,GAAkBA,EAAeL,MACrC,EAgBI4B,gBAAYzO,GACZsM,EAAU0B,EACVvB,EAAOzM,EACX,EAMA0O,OAAQ,SAAC1O,GACLsM,EAAU0B,EACV,IAAMW,EAAmB9H,GAAgC,kBAAbA,EACtCvG,KAAKE,IAAe,GAAXqG,EAAgB,IACzB,GACF+H,EAAgB,EAEpB,IADAnC,EAAO,GACAmC,GAAiB5O,GAAG,CACvB,IAAM6O,EAAY7O,EAAI4O,EACtBnC,EAAOnM,KAAK4K,IAAI2D,EAAWF,IAC3BC,GAAiBD,CACrB,CACA,OAAO3H,CACX,EAER,C,eE7IA,IAAM8H,GAAsB,SAAH,sBAAKpG,EAAC,KAAEC,EAAC,KAAEE,EAAC,KAAEE,EAAC,kCAAsBL,EAAC,aAAKC,EAAC,aAAKE,EAAC,aAAKE,EAAC,MAC3EgG,GAAuB,CACzB7I,OAAQ,SACRzC,KAAM,OACNjE,OAAQ,UACRE,QAAS,WACTE,UAAW,cACXuG,OAAQ2I,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CzI,QAASyI,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1C/I,OAAQ+I,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDhJ,QAASgJ,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASE,GAAwBtH,GAC7B,GAAKA,EAEL,OAAO7D,MAAMC,QAAQ4D,GACfoH,GAAoBpH,GACpBqH,GAAqBrH,EAC/B,CCvBA,IAAMuH,GAAe,CACjBC,MAAO,kBAAMnQ,OAAOoQ,eAAe7P,KAAK8P,QAAQhQ,UAAW,UAAU,GAEnEiQ,GAAU,CAAC,EACXC,GAAW,CAAC,EAClB,eAIIA,GAAS1Q,GAAO,WAGZ,YAFqBiE,IAAjBwM,GAAQzQ,KACRyQ,GAAQzQ,GAAOqQ,GAAarQ,MACzByQ,GAAQzQ,EACnB,CACJ,EANA,IAAK,IAAMA,MAAOqQ,GAAY,O,iCCExBM,GAAoB,IAAIC,IAAI,CAAC,YAOnC,SAASC,GAA2BvI,EAAOwI,EAAW,GAAU,EAAR3B,SAAoC,IAA1BF,EAAU,EAAVA,WAAejE,GAAO,aAMpF,KAL+B0F,GAASJ,SACpCK,GAAkBI,IAAID,KACrB9F,EAAQ4D,aACc,WAAvB5D,EAAQ2D,YACY,IAApB3D,EAAQJ,SAER,OAAO,EACX,IFzB4B9B,EEyBtBhB,EAAiDkD,EAAjDlD,UAAS,EAAwCkD,EAAtC/C,SAAAA,OAAQ,IAAG,MAAG,IAAwB+C,EAAtB0C,QAAAA,OAAO,IAAG,IAAC,EAAE7I,EAASmG,EAATnG,KAI9C,GAAqB,WAAjBmG,EAAQ7I,UF7BgB2G,EE6B6BkC,EAAQnG,OF3B7DI,MAAMC,QAAQ4D,IACK,kBAAXA,GAAuBqH,GAAqBrH,IE0BgB,CAKpE,GAAIkC,EAAQyD,SAAWuC,IACnB,OASJ,IARA,IAAMC,EAAkB9C,IAAQ,kBAAKnD,GAAO,IAAE0C,QAAS,KACnDtF,EAAQ,CAAEC,MAAM,EAAOC,MAAOR,EAAU,IACtCoJ,EAAwB,GAK1B9P,EAAI,GACAgH,EAAMC,MAAQjH,EAAI,KACtBgH,EAAQ6I,EAAgBnB,OAAO1O,GAC/B8P,EAAsB5L,KAAK8C,EAAME,OACjClH,GA/BQ,GAiCZ0G,EAAYoJ,EACZjJ,EAAW7G,EAlCC,GAmCZyD,EAAO,QACX,CACA,IAAM6K,ECnDV,SAAsByB,EAASL,EAAWhJ,GAAwF,+DAAJ,CAAC,EAAC,IAAzE6F,MAAAA,OAAK,IAAG,IAAC,EAAE1F,EAAQ,EAARA,SAAQ,IAAEwG,OAAAA,OAAM,IAAG,IAAC,MAAEE,WAAAA,OAAU,IAAG,SAAM,EAAE9J,EAAI,EAAJA,KAAMmD,EAAK,EAALA,MAC/G,OAAOmJ,EAAQhD,SAAO,gBAAI2C,EAAYhJ,IAAS,mBAAUE,GAAK,GAAI,CAC9D2F,MAAAA,EACA1F,SAAAA,EACAa,OAAQsH,GAAwBvL,GAChCuM,KAAM,OACNC,WAAY5C,EAAS,EACrB6C,UAA0B,YAAf3C,EAA2B,YAAc,UAE5D,CD0CsB4C,CAAajJ,EAAMkJ,MAAM/E,QAASqE,EAAWhJ,GAAW,kBACnEkD,GAAO,IACV2C,OAAQD,EACRzF,SAAAA,EASApD,KAAMA,KAkBV,OARA6K,EAAU+B,SAAW,WACjBnJ,EAAMoJ,IE5Ed,SAA0B5J,EAAW,GAAiC,IAA/B2G,EAAM,EAANA,OAAM,IAAEE,WAI3C,OAAO7G,EAHO2G,GAAyB,eADc,IAAG,SAAM,IACbA,EAAS,IAAM,EAC1D,EACA3G,EAAUxH,OAAS,EAE7B,CFuEkBqR,CAAiB7J,EAAWkD,IACtCgD,EAAAA,GAAAA,QAAY,kBAAM0B,EAAUkC,QAAQ,IACpC3C,GAAcA,GAClB,EAIO,CACCY,kBACA,OAAOH,EAAUG,aAAe,CACpC,EACIA,gBAAYzO,GACZsO,EAAUG,YAAczO,CAC5B,EACA6M,KAAM,WASF,IAAQ4B,EAAgBH,EAAhBG,YACR,GAAIA,EAAa,CACb,IAAMoB,EAAkB9C,IAAQ,kBAAKnD,GAAO,IAAE8D,UAAU,KACxDxG,EAAMuJ,gBAAgBZ,EAAgBnB,OAAOD,EAtFzC,IAsFoEvH,MAAO2I,EAAgBnB,OAAOD,GAAavH,MAtF/G,GAuFR,CACA0F,EAAAA,GAAAA,QAAY,kBAAM0B,EAAUkC,QAAQ,GACxC,EAER,C,eGzGA,SAASE,GAAuB,GAA+C,IAA7ChK,EAAS,EAATA,UAAW4F,EAAO,EAAPA,QAASyB,EAAQ,EAARA,SAAUF,EAAU,EAAVA,WACtD8C,EAAW,WACb5C,GAAYA,EAASrH,EAAUA,EAAUxH,OAAS,IAClD2O,GAAcA,GAClB,EACA,OAAOvB,EAAU,CAAEO,MAAMN,EAAAA,GAAAA,GAAMoE,GAAWrE,IAAaqE,GAC3D,C,eCJA,SAASC,GAAQ,GAAuL,IAEhMC,EAFWnK,EAAS,EAATA,UAAS,IAAEyB,SAAAA,OAAQ,IAAG,IAAC,EAAE+C,EAAG,EAAHA,IAAK1K,EAAG,EAAHA,IAAG,IAAEuL,MAAAA,OAAK,IAAG,KAAG,MAAEC,aAAAA,OAAY,IAAG,MAAG,MAAE8E,gBAAAA,OAAe,IAAG,MAAG,MAAEC,cAAAA,OAAa,IAAG,KAAE,MAAE/G,UAAAA,OAAS,IAAG,IAAC,EAAEiC,EAAY,EAAZA,aAAcmB,EAAM,EAANA,OAAQW,EAAQ,EAARA,SAAUF,EAAU,EAAVA,WAAYD,EAAM,EAANA,OACnLxL,EAASsE,EAAU,GAEzB,SAASsK,EAAc5Q,GACnB,YAAgByC,IAARqI,GAAqB9K,EAAI8K,QAAiBrI,IAARrC,GAAqBJ,EAAII,CACvE,CACA,SAASyQ,EAAoB7Q,GACzB,YAAYyC,IAARqI,EACO1K,OACCqC,IAARrC,GAEGF,KAAKsF,IAAIsF,EAAM9K,GAAKE,KAAKsF,IAAIpF,EAAMJ,GAD/B8K,EAC0C1K,CACzD,CACA,SAAS0Q,EAAetH,GACC,OAArBiH,QAAkD,IAArBA,GAAuCA,EAAiBhE,OACrFgE,EAAmB9D,IAAQ,gBACvBrG,UAAW,CAAC,EAAG,GACfyB,SAAU,GACPyB,GAAO,IACVwD,OAAAA,EACAW,SAAU,SAAC3N,GACP,IAAI4M,EACS,OAAbe,QAAkC,IAAbA,GAA+BA,EAAS3N,GACjC,QAA3B4M,EAAKpD,EAAQmE,gBAA6B,IAAPf,GAAyBA,EAAG1N,KAAKsK,EAASxJ,EAClF,EACAyN,WAAAA,EACAD,OAAAA,IAER,CACA,SAASuD,EAAYvH,GACjBsH,GAAe,QACXnQ,KAAM,SACNwI,UAAWuH,EACXtH,QAASuH,EACT/G,UAAAA,GACGJ,GAEX,CACA,GAAIoH,EAAc5O,GAEd+O,EAAY,CACRhJ,SAAAA,EACAzB,UAAW,CAACtE,EAAQ6O,EAAoB7O,UAG3C,CASD,IAAItD,EAASiN,EAAQ5D,EAAW/F,EACJ,qBAAjB6J,IACPnN,EAASmN,EAAanN,IAC1B,IAEIsS,EACA/F,EAHEgG,EAAWJ,EAAoBnS,GAC/BwS,EAAUD,IAAanG,GAAO,EAAI,EAYxCgG,EAAe,CACXnQ,KAAM,QACN2F,UAAW,CAACtE,EAAQ,GACpB+F,SAAAA,EACA6D,aAAAA,EACAD,MAAAA,EACA/B,UAAAA,EACAiC,aAAAA,EACA8B,SAAUiD,EAAclS,GAjBN,SAACsB,GACnBgR,EAAO/F,EACPA,EAAUjL,EACV+H,GAAWqD,EAAAA,EAAAA,GAAkBpL,EAAIgR,EAAMG,GAAAA,EAAAA,QACtB,IAAZD,GAAiBlR,EAAIiR,IACR,IAAbC,GAAkBlR,EAAIiR,IACvBF,EAAY,CAAEzK,UAAW,CAACtG,EAAGiR,GAAWlJ,SAAAA,GAEhD,OASsDtF,GAE1D,CACA,MAAO,CACHgK,KAAM,kBAA2B,OAArBgE,QAAkD,IAArBA,OAA8B,EAASA,EAAiBhE,MAAM,EAE/G,CCxFA,IAAM2E,GAAoB,WAAH,MAAU,CAC7BzQ,KAAM,SACNwI,UAAW,IACXC,QAAS,GACTS,UAAW,GACd,EACKwH,GAAyB,SAAC3S,GAAM,MAAM,CACxCiC,KAAM,SACNwI,UAAW,IACXC,QAAoB,IAAX1K,EAAe,EAAIwB,KAAKC,KAAK,KAAO,GAC7C0J,UAAW,GACd,EACKyH,GAAc,WAAH,MAAU,CACvB3Q,KAAM,YACN0C,KAAM,SACNoD,SAAU,GACb,EACK8K,GAAsB,CACxB5Q,KAAM,YACN8F,SAAU,IAER+K,GAAqB,CACvBrM,EAAGiM,GACHK,EAAGL,GACHM,EAAGN,GACHO,OAAQP,GACRQ,QAASR,GACTS,QAAST,GACTU,QAASV,GACTW,OAAQV,GACRW,OAAQX,GACRY,MAAOZ,GACPa,QAASZ,GACTa,gBAAiBb,GACjB5Q,MAAO4Q,GACPc,QAASf,IAEPgB,GAAuB,SAACC,EAAU,GAAkB,IAAhBhM,EAAS,EAATA,UACtC,OAAIA,EAAUxH,OAAS,EACZyS,IAGSC,GAAmBc,IAAad,GAAmBY,SACpD9L,EAAU,GAEjC,EClCMiM,GAAe,SAAC/T,EAAKsI,GAEvB,MAAY,WAARtI,MAKiB,kBAAVsI,IAAsBrD,MAAMC,QAAQoD,OAE1B,kBAAVA,IACPnE,EAAAA,EAAAA,KAAamE,IACZA,EAAM0L,WAAW,SAK1B,E,sBCvBA,SAASC,GAAa3L,EAAOwI,EAAW5Q,EAAQgU,GAC5C,IAAMC,EAAqBJ,GAAajD,EAAW5Q,GAC/CsD,OAA6BS,IAApBiQ,EAAW5S,KAAqB4S,EAAW5S,KAAOgH,EAAM8L,MAmBrE,MAlBe,SAAX5Q,GAAqB2Q,GAAwC,kBAAXjU,EAKlDsD,GAAS6Q,EAAAA,GAAAA,GAAkBvD,EAAW5Q,IAEjCoU,EAAAA,GAAAA,IAAO9Q,IAA6B,kBAAXtD,EAC9BsD,GAAS+Q,EAAAA,GAAAA,IAAYrU,IAEf+E,MAAMC,QAAQhF,KACpBoU,EAAAA,GAAAA,IAAOpU,IACW,kBAAXsD,IACPtD,GAASqU,EAAAA,GAAAA,IAAY/Q,IAKrByB,MAAMC,QAAQhF,IAKI,OAAdA,EAAO,KACPA,EAAO,GAAKsD,GAETtD,GAGA,CAACsD,EAAQtD,EAExB,CC1BA,IAAMsU,GAA6B,SAAC1D,EAAWxI,EAAOpI,GAA4B,IAApBgU,EAAa,UAAH,6CAAG,CAAC,EACxE,OAAO,SAACjF,GACJ,IAAMwF,GAAkBC,EAAAA,GAAAA,IAAmBR,EAAYpD,IAAc,CAAC,EAMhEnD,EAAQ8G,EAAgB9G,OAASuG,EAAWvG,OAAS,EAK3D,EAAsBuG,EAAhBxG,QAAAA,OAAO,IAAG,IAAC,EACjBA,IAAoBiH,EAAAA,EAAAA,GAAsBhH,GAC1C,IAAM7F,EAAYmM,GAAa3L,EAAOwI,EAAW5Q,EAAQuU,GAMnDG,EAAiB9M,EAAU,GAC3B+M,EAAiB/M,EAAUA,EAAUxH,OAAS,GAC9CwU,EAAqBf,GAAajD,EAAW8D,GAC7CT,EAAqBJ,GAAajD,EAAW+D,IACnDlV,EAAAA,EAAAA,GAAQmV,IAAuBX,EAAoB,6BAAF,OAA+BrD,EAAS,kBAAU8D,EAAc,iBAASC,EAAc,cAAMD,EAAc,sEAA8DA,EAAc,qCAA6BC,EAAc,+BACnR,IAAI7J,GAAU,gBACVlD,UAAAA,EACAyB,SAAUjB,EAAMyM,eACbN,GAAe,IAClB/G,QAAAA,EACAyB,SAAU,SAAC3N,GACP8G,EAAMoJ,IAAIlQ,GACViT,EAAgBtF,UAAYsF,EAAgBtF,SAAS3N,EACzD,EACAyN,WAAY,WACRA,IACAwF,EAAgBxF,YAAcwF,EAAgBxF,YAClD,IAEJ,IAAK6F,IACAX,GACDxT,IACyB,IAAzB8T,EAAgBtS,KAKhB,OAAO2P,GAAuB9G,GAE7B,GAA6B,YAAzByJ,EAAgBtS,KAKrB,OAAO6P,GAAQhH,IAMdgK,EAAAA,GAAAA,IAAoBP,KACrBzJ,GAAU,kBACHA,GACA6I,GAAqB/C,EAAW9F,KAQvCA,EAAQ/C,WACR+C,EAAQ/C,UAAW0M,EAAAA,EAAAA,GAAsB3J,EAAQ/C,WAEjD+C,EAAQ4D,cACR5D,EAAQ4D,aAAc+F,EAAAA,EAAAA,GAAsB3J,EAAQ4D,cAExD,IAAMqG,EAAgB3M,EAAMkJ,MACtBL,EAAU8D,GAAiBA,EAAcxI,QAI/C,GAAIwI,GACA9D,aAAmB+D,eACC,OAAlBD,QAA4C,IAAlBA,OAA2B,EAASA,EAAcE,WAAWhG,UAAW,CACpG,IAAMiG,EAAuBvE,GAA2BvI,EAAOwI,EAAW9F,GAC1E,GAAIoK,EACA,OAAOA,CACf,CAIA,OAAOjH,GAAQnD,EACnB,CACJ,C,uDC3GA,IAAMqK,EAAoB,SAAC7T,GACvB,OAAOyD,MAAMC,QAAQ1D,EACzB,C,qRCKA,SAASwT,EAAoB,GAAM,EAAJM,KAAmB,EAAb3H,MAA4B,EAAb4H,cAA8B,EAAfC,gBAAiC,EAAhBC,iBAAwB,EAANhH,OAAkB,EAAVE,WAAuB,EAAXC,YAAiB,EAAJtN,KAAa,EAAPoM,QAA0B,IAAdwG,GAAU,YAC/J,QAAS/T,OAAO8K,KAAKiJ,GAAY5T,MACrC,CACA,SAASgU,EAAOhM,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtBoN,WAAWpN,KACa,IAAxBA,EAAM/H,QAAQ,IAC1B,CACA,SAASgU,EAAYoB,GACjB,MAAoC,kBAAtBA,EACR,GACAtB,EAAAA,EAAAA,GAAkB,GAAIsB,EAChC,CACA,SAASjB,EAAmBR,EAAYlU,GACpC,OAAOkU,EAAWlU,IAAQkU,EAAoB,SAAKA,CACvD,C,iLChBM0B,EAAe,qGAkBhB,OAlBgB,+CACjB,SAAwBC,GACpB,IAAM1E,EAAU2E,KAAKC,MAAMC,SAASvJ,QACpC,GAAI0E,GAAW0E,EAAUI,YAAcH,KAAKC,MAAME,UAAW,CACzD,IAAMC,EAAOJ,KAAKC,MAAMI,QAAQ1J,QAChCyJ,EAAKE,OAASjF,EAAQkF,cAAgB,EACtCH,EAAKI,MAAQnF,EAAQoF,aAAe,EACpCL,EAAKM,IAAMrF,EAAQsF,UACnBP,EAAKQ,KAAOvF,EAAQwF,UACxB,CACA,OAAO,IACX,GACA,gCAGA,WAAuB,GAAC,oBACxB,WACI,OAAOb,KAAKC,MAAMa,QACtB,KAAC,EAlBgB,CAASC,EAAAA,WAoB9B,SAASC,EAAS,GAAyB,IAAvBF,EAAQ,EAARA,SAAUX,EAAS,EAATA,UACpBc,GAAKC,EAAAA,EAAAA,SACLC,GAAMC,EAAAA,EAAAA,QAAO,MACbhB,GAAOgB,EAAAA,EAAAA,QAAO,CAChBZ,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,IAiCV,OAtBAS,EAAAA,EAAAA,qBAAmB,WACf,MAAqCjB,EAAKzJ,QAAlC6J,EAAK,EAALA,MAAOF,EAAM,EAANA,OAAQI,EAAG,EAAHA,IAAKE,EAAI,EAAJA,KAC5B,IAAIT,GAAcgB,EAAIxK,SAAY6J,GAAUF,EAA5C,CAEAa,EAAIxK,QAAQ2K,QAAQC,YAAcN,EAClC,IAAMO,EAAQC,SAASC,cAAc,SAarC,OAZAD,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCAAD,OACDb,EAAE,gFAEdT,EAAK,+CACJF,EAAM,4CACTI,EAAG,6CACFE,EAAI,0CAIT,WACHa,SAASE,KAAKI,YAAYP,EAC9B,CAjBU,CAkBd,GAAG,CAACrB,IACIY,EAAAA,cAAoBjB,EAAiB,CAAEK,UAAWA,EAAWD,SAAUiB,EAAKd,QAASD,GAAQW,EAAAA,aAAmBD,EAAU,CAAEK,IAAAA,IACxI,CC9DA,IAAMa,EAAgB,SAAH,GAA+F,IAAzFlB,EAAQ,EAARA,SAAUmB,EAAO,EAAPA,QAAS9B,EAAS,EAATA,UAAW+B,EAAc,EAAdA,eAAgBC,EAAM,EAANA,OAAQC,EAAqB,EAArBA,sBAAuBC,EAAI,EAAJA,KAC5FC,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/BvB,GAAKC,EAAAA,EAAAA,SACLuB,GAAUC,EAAAA,EAAAA,UAAQ,iBAAO,CAC3BzB,GAAAA,EACAgB,QAAAA,EACA9B,UAAAA,EACAgC,OAAAA,EACAD,eAAgB,SAACS,GACbL,EAAiB1G,IAAI+G,GAAS,GAAM,IACc,EADd,UACXL,EAAiB1T,UAAQ,IAAlD,IAAK,EAAL,qBAAoD,CAChD,IADiB,QAEb,MACR,CAAC,+BACDsT,GAAkBA,GACtB,EACAU,SAAU,SAACD,GAEP,OADAL,EAAiB1G,IAAI+G,GAAS,GACvB,kBAAML,EAAiBO,OAAOF,EAAQ,CACjD,EACH,GAMDP,OAAwBjU,EAAY,CAACgS,IAiBrC,OAhBAuC,EAAAA,EAAAA,UAAQ,WACJJ,EAAiBQ,SAAQ,SAACC,EAAG7Y,GAAG,OAAKoY,EAAiB1G,IAAI1R,GAAK,EAAM,GACzE,GAAG,CAACiW,IAKJY,EAAAA,WAAgB,YACXZ,IACImC,EAAiBlC,MAClB8B,GACAA,GACR,GAAG,CAAC/B,IACS,cAATkC,IACAvB,EAAWC,EAAAA,cAAoBC,EAAU,CAAEb,UAAWA,GAAaW,IAE/DC,EAAAA,cAAoBiC,EAAAA,EAAAA,SAA0B,CAAExQ,MAAOiQ,GAAW3B,EAC9E,EACA,SAAS0B,IACL,OAAO,IAAIS,GACf,C,kCC3CMC,EAAc,SAACC,GAAK,OAAKA,EAAMjZ,KAAO,EAAE,EAiD9C,IAAMkZ,EAAkB,SAAH,GAA4H,IAAtHtC,EAAQ,EAARA,SAAUqB,EAAM,EAANA,OAAM,IAAEF,QAAAA,OAAO,IAAG,GAAI,EAAEC,EAAc,EAAdA,eAAgBmB,EAAe,EAAfA,gBAAe,IAAEjB,sBAAAA,OAAqB,IAAG,GAAI,MAAEC,KAAAA,OAAI,IAAG,SAAM,EAEjIgB,IACAhB,EAAO,QAOX,OAAoBiB,EAAAA,EAAAA,KAAfC,GAA+B,YAApB,GACVC,GAAyBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAoBH,YAC1DC,IACAD,EAAcC,GAClB,IAAMG,GAAYC,EAAAA,EAAAA,KAEZC,EA1DV,SAAsB/C,GAClB,IAAMgD,EAAW,GAMjB,OAJAC,EAAAA,SAAAA,QAAiBjD,GAAU,SAACqC,IACpBa,EAAAA,EAAAA,gBAAeb,IACfW,EAAStU,KAAK2T,EACtB,IACOW,CACX,CAkD6BG,CAAanD,GAClCoD,EAAmBL,EACjBM,EAAU,IAAIrJ,IAGdsJ,GAAkBhD,EAAAA,EAAAA,QAAO8C,GAEzBG,GAAcjD,EAAAA,EAAAA,QAAO,IAAI6B,KAAOtM,QAGhC2N,GAAkBlD,EAAAA,EAAAA,SAAO,GAW/B,IAVAmD,EAAAA,EAAAA,IAA0B,WACtBD,EAAgB3N,SAAU,EA5ElC,SAA2BmK,EAAUuD,GACjCvD,EAASgC,SAAQ,SAACK,GACd,IAAMjZ,EAAMgZ,EAAYC,GACxBkB,EAAYzI,IAAI1R,EAAKiZ,EACzB,GACJ,CAwEQqB,CAAkBX,EAAkBQ,GACpCD,EAAgBzN,QAAUuN,CAC9B,KACAO,EAAAA,EAAAA,IAAiB,WACbH,EAAgB3N,SAAU,EAC1B0N,EAAYK,QACZP,EAAQO,OACZ,IACIJ,EAAgB3N,QAChB,OAAQoK,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMmD,EAAiBlW,KAAI,SAACmV,GAAK,OAAMpC,EAAAA,cAAoBiB,EAAe,CAAE9X,IAAKgZ,EAAYC,GAAQhD,WAAW,EAAM8B,UAASA,QAAU9T,EAAmBiU,sBAAuBA,EAAuBC,KAAMA,GAAQc,EAAM,KAG9Qe,GAAmB,OAAIA,GAOvB,IAJA,IAAMS,EAAcP,EAAgBzN,QAAQ3I,IAAIkV,GAC1C0B,EAAaf,EAAiB7V,IAAIkV,GAElC2B,EAAaF,EAAYna,OACtBL,EAAI,EAAGA,EAAI0a,EAAY1a,IAAK,CACjC,IAAMD,EAAMya,EAAYxa,IACS,IAA7Bya,EAAWna,QAAQP,IACnBia,EAAQW,IAAI5a,EAEpB,CA4CA,MAzCa,SAATmY,GAAmB8B,EAAQ/D,OAC3B8D,EAAmB,IAIvBC,EAAQrB,SAAQ,SAAC5Y,GAEb,IAAiC,IAA7B0a,EAAWna,QAAQP,GAAvB,CAEA,IAAMiZ,EAAQkB,EAAY/F,IAAIpU,GAC9B,GAAKiZ,EAAL,CAEA,IAAM4B,EAAiBJ,EAAYla,QAAQP,GAgB3Cga,EAAiBjR,OAAO8R,EAAgB,EAAGhE,EAAAA,cAAoBiB,EAAe,CAAE9X,IAAKgZ,EAAYC,GAAQhD,WAAW,EAAO+B,eAf5G,WACXmC,EAAYxB,OAAO3Y,GACnBia,EAAQtB,OAAO3Y,GAEf,IAAM8a,EAAcZ,EAAgBzN,QAAQsO,WAAU,SAACC,GAAY,OAAKA,EAAahb,MAAQA,CAAG,IAGhG,GAFAka,EAAgBzN,QAAQ1D,OAAO+R,EAAa,IAEvCb,EAAQ/D,KAAM,CAEf,GADAgE,EAAgBzN,QAAUkN,GACA,IAAtBF,EAAUhN,QACV,OACJ4M,IACArB,GAAkBA,GACtB,CACJ,EACmJC,OAAQA,EAAQC,sBAAuBA,EAAuBC,KAAMA,GAAQc,GAjBrN,CAHA,CAqBd,IAGAe,EAAmBA,EAAiBlW,KAAI,SAACmV,GACrC,IAAMjZ,EAAMiZ,EAAMjZ,IAClB,OAAOia,EAAQlJ,IAAI/Q,GAAQiZ,EAAUpC,EAAAA,cAAoBiB,EAAe,CAAE9X,IAAKgZ,EAAYC,GAAQhD,WAAW,EAAMiC,sBAAuBA,EAAuBC,KAAMA,GAAQc,EACpL,IAMQpC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMoD,EAAQ/D,KACpD8D,EACAA,EAAiBlW,KAAI,SAACmV,GAAK,OAAKgC,EAAAA,EAAAA,cAAahC,EAAM,IAC7D,C,2DC7JMO,GAAqB0B,E,QAAAA,eAAc,CAAC,E,0DCGpCpC,GAAkBoC,E,QAAAA,eAAc,K,+HCFhC3T,EAAS,SAAC1G,GAAC,OAAK,EAAIa,KAAKwK,IAAIxK,KAAKyZ,KAAKta,GAAG,EAC1C4G,GAAU1G,EAAAA,EAAAA,GAAcwG,GACxBC,GAAYvG,EAAAA,EAAAA,GAAawG,E,sDCH/B,IAAMxG,EAAe,SAAC6H,GAAM,OAAK,SAACjI,GAAC,OAAKA,GAAK,GAAMiI,EAAO,EAAIjI,GAAK,GAAK,EAAIiI,EAAO,GAAK,EAAIjI,KAAO,CAAC,E,uDCApG,IAAME,EAAgB,SAAC+H,GAAM,OAAK,SAACjI,GAAC,OAAK,EAAIiI,EAAO,EAAIjI,EAAE,E,uDCF1D,IAAM8R,EAAY,CACd9I,MAAO,EACPuR,UAAW,E,wGCCf,IAAMC,EAAmB,EAAI,GAAM,IAC7BC,EAAwC,qBAAhBC,YACxB,kBAAMA,YAAYC,KAAK,EACvB,kBAAMC,KAAKD,KAAK,EAChBE,EAAgC,qBAAXC,OACrB,SAACC,GAAQ,OAAKD,OAAOE,sBAAsBD,EAAS,EACpD,SAACA,GAAQ,OAAKE,YAAW,kBAAMF,EAASN,IAAiB,GAAED,EAAgB,E,cCJ7EU,GAAoB,EACpBC,GAAe,EACfC,GAAe,EACbC,EAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,EAAQD,EAAWE,QAAO,SAACC,EAAKrc,GAElC,OADAqc,EAAIrc,GChBR,SAA0Bgc,GAKtB,IAAIM,EAAQ,GACRC,EAAiB,GAIjBC,EAAW,EAKXP,GAAe,EACfQ,GAAiB,EAIfC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAACjB,GAAmD,IACpDkB,EAD0C,UAAH,+CACNb,EACjCc,EAASD,EAAoBR,EAAQC,EAU3C,OAZ6B,UAAH,+CAItBG,EAAY9B,IAAIgB,IAEc,IAA9BmB,EAAOxc,QAAQqb,KACfmB,EAAOzX,KAAKsW,GAERkB,GAAqBb,IACrBO,EAAWF,EAAMhc,SAElBsb,CACX,EAIAhK,OAAQ,SAACgK,GACL,IAAMoB,EAAQT,EAAehc,QAAQqb,IACtB,IAAXoB,GACAT,EAAexT,OAAOiU,EAAO,GACjCN,EAAY/D,OAAOiD,EACvB,EAIAqB,QAAS,SAACtK,GAMN,GAAIsJ,EACAQ,GAAiB,MADrB,CAIAR,GAAe,EAAK,MACM,CAACM,EAAgBD,GAK3C,GALCA,EAAK,MAAEC,EAAc,MAEPjc,OAAS,EAExBkc,EAAWF,EAAMhc,OAEb,IAAK,IAAIL,EAAI,EAAGA,EAAIuc,EAAUvc,IAAK,CAC/B,IAAM2b,EAAWU,EAAMrc,GACvB2b,EAASjJ,GACL+J,EAAY3L,IAAI6K,KAChBgB,EAAKC,SAASjB,GACdI,IAER,CAEJC,GAAe,EACXQ,IACAA,GAAiB,EACjBG,EAAKK,QAAQtK,GApBjB,CAsBJ,GAEJ,OAAOiK,CACX,CDrEeM,EAAiB,kBAAOlB,GAAe,CAAI,IAC/CK,CACX,GAAG,CAAC,GACErO,EAAOkO,EAAWE,QAAO,SAACC,EAAKrc,GACjC,IAAM4c,EAAOT,EAAMnc,GAMnB,OALAqc,EAAIrc,GAAO,SAACid,GAAkD,IAAzCE,EAAY,UAAH,8CAAUC,EAAY,UAAH,8CAG7C,OAFKpB,GACDqB,IACGT,EAAKC,SAASI,EAASE,EAAWC,EAC7C,EACOf,CACX,GAAG,CAAC,GACEnO,EAAagO,EAAWE,QAAO,SAACC,EAAKrc,GAEvC,OADAqc,EAAIrc,GAAOmc,EAAMnc,GAAK4R,OACfyK,CACX,GAAG,CAAC,GACEiB,EAAYpB,EAAWE,QAAO,SAACC,EAAKrc,GAEtC,OADAqc,EAAIrc,GAAO,kBAAMmc,EAAMnc,GAAKid,QAAQtK,EAAAA,EAAU,EACvC0J,CACX,GAAG,CAAC,GACEkB,EAAc,SAACC,GAAM,OAAKrB,EAAMqB,GAAQP,QAAQtK,EAAAA,EAAU,EAC1D8K,EAAe,SAAfA,EAAgBrC,GAClBY,GAAe,EACfrJ,EAAAA,EAAAA,MAAkBoJ,EACZV,EACA3Z,KAAKE,IAAIF,KAAK4K,IAAI8O,EAAYzI,EAAAA,EAAAA,UArCrB,IAqCuD,GACtEA,EAAAA,EAAAA,UAAsByI,EACtBa,GAAe,EACfC,EAAWtD,QAAQ2E,GACnBtB,GAAe,EACXD,IACAD,GAAoB,EACpBL,EAAY+B,GAEpB,EACMJ,EAAY,WACdrB,GAAe,EACfD,GAAoB,EACfE,GACDP,EAAY+B,EACpB,C,gFEnDMC,GAAsBxC,EAAAA,EAAAA,eAAc,CACtCyC,mBAAoB,SAAC9c,GAAC,OAAKA,CAAC,EAC5B+c,UAAU,EACVC,cAAe,UCNbC,GAAgB5C,EAAAA,EAAAA,eAAc,CAAC,G,uBCA/B6C,GAAc7C,EAAAA,EAAAA,eAAc,CAAE8C,QAAQ,ICK5C,SAASC,EAAiBC,EAAWC,EAAapI,EAAOqI,GACrD,IAAMC,GFJC9E,EAAAA,EAAAA,YAAWuE,GAAe7I,cEK3BqJ,GAAc/E,EAAAA,EAAAA,YAAWwE,GACzBQ,GAAkBhF,EAAAA,EAAAA,YAAWT,EAAAA,GAC7B0F,GAAsBjF,EAAAA,EAAAA,YAAWmE,GAAqBG,cACtDY,GAAmBvH,EAAAA,EAAAA,UAIzBkH,EAAsBA,GAAuBE,EAAYI,UACpDD,EAAiBhS,SAAW2R,IAC7BK,EAAiBhS,QAAU2R,EAAoBF,EAAW,CACtDC,YAAAA,EACAE,OAAAA,EACAtI,MAAAA,EACA4I,WAAYJ,EAAkBA,EAAgBxH,QAAK9S,EACnD2a,wBAAuBL,IACW,IAA5BA,EAAgBxG,QAEtByG,oBAAAA,KAGR,IAAMvJ,EAAgBwJ,EAAiBhS,QAsBvC,OArBA4N,EAAAA,EAAAA,IAA0B,WACtBpF,GAAiBA,EAAc4J,QACnC,KAWgClD,OAAOmD,wBACjCzE,EAAAA,EACA0E,EAAAA,YACkB,WAChB9J,GAAiBA,EAAc+J,gBAC/B/J,EAAc+J,eAAeC,gBAErC,IACOhK,CACX,CCpDA,SAASiK,EAAYjI,GACjB,MAAuB,kBAARA,GACX9W,OAAOK,UAAU+P,eAAe7P,KAAKuW,EAAK,UAClD,CCAA,SAASkI,EAAe3d,GACpB,MAAoB,kBAANA,GAAkByD,MAAMC,QAAQ1D,EAClD,CCLA,SAAS4d,EAAoB5d,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEuM,KAC7C,CCCA,IAAMsR,EAAe,CACjB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,eAEJ,SAASC,EAAsBvJ,GAC3B,OAAQqJ,EAAoBrJ,EAAM5H,UAC9BkR,EAAanU,MAAK,SAACqU,GAAI,OAAKJ,EAAepJ,EAAMwJ,GAAM,GAC/D,CACA,SAASC,EAAczJ,GACnB,OAAOzT,QAAQgd,EAAsBvJ,IAAUA,EAAM0J,SACzD,CCfA,SAASC,EAAuB3J,GAC5B,MCFJ,SAAgCA,EAAOwC,GACnC,GAAI+G,EAAsBvJ,GAAQ,CAC9B,IAAQgC,EAAqBhC,EAArBgC,QAAS5J,EAAY4H,EAAZ5H,QACjB,MAAO,CACH4J,SAAqB,IAAZA,GAAqBoH,EAAepH,GACvCA,OACA9T,EACNkK,QAASgR,EAAehR,GAAWA,OAAUlK,EAErD,CACA,OAAyB,IAAlB8R,EAAM4J,QAAoBpH,EAAU,CAAC,CAChD,CDTiCqH,CAAuB7J,GAAOwD,EAAAA,EAAAA,YAAWuE,IAA9D/F,EAAO,EAAPA,QAAS5J,EAAO,EAAPA,QACjB,OAAOqK,EAAAA,EAAAA,UAAQ,iBAAO,CAAET,QAAAA,EAAS5J,QAAAA,EAAS,GAAG,CAAC0R,EAA0B9H,GAAU8H,EAA0B1R,IAChH,CACA,SAAS0R,EAA0BC,GAC/B,OAAO7a,MAAMC,QAAQ4a,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,IAAME,EAAmB,SAACC,GAAS,MAAM,CACrCC,UAAW,SAACnK,GAAK,OAAKkK,EAAU/U,MAAK,SAACqU,GAAI,QAAOxJ,EAAMwJ,EAAK,GAAC,EAChE,EACKY,EAAqB,CACvBC,cAAeJ,EAAiB,CAAC,SAAU,WAAY,SACvDtQ,UAAWsQ,EAAiB,CACxB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,gBAEJK,KAAML,EAAiB,CAAC,SACxBM,KAAMN,EAAiB,CAAC,OAAQ,iBAChCO,MAAOP,EAAiB,CAAC,eACzBQ,MAAOR,EAAiB,CAAC,aAAc,eAAgB,eACvDS,IAAKT,EAAiB,CAAC,WAAY,QAAS,aAAc,gBAC1DU,IAAKV,EAAiB,CAClB,QACA,aACA,oBACA,aAEJW,OAAQX,EAAiB,CACrB,cACA,kBACA,qB,wBCxBFY,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZhB/J,EAAK,E,qDCDHgK,EAAoB,qGAarB,OAbqB,+CAItB,WACI,MAAiCjL,KAAKC,MAA9Bd,EAAa,EAAbA,cAAec,EAAK,EAALA,MAGvB,OAFId,GACAA,EAAc+L,SAASjL,GACpB,IACX,GAAC,gCACD,WAAuB,GAAC,oBACxB,WACI,OAAOD,KAAKC,MAAMa,QACtB,KAAC,EAbqB,CAASqK,EAAAA,WCG7BC,GAA2BhG,EAAAA,EAAAA,eAAc,CAAC,GCL1CiG,EAAwBC,OAAOC,IAAI,yBC0BzC,SAASC,EAAsB,GAA8G,IAA5GC,EAAiB,EAAjBA,kBAAmBnD,EAAmB,EAAnBA,oBAAqBoD,EAAyB,EAAzBA,0BAA2BC,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAAgBxD,EAAS,EAATA,UAC3HqD,GCzBJ,SAAsBI,GAClB,IAAK,IAAM3hB,KAAO2hB,EACF,8BAAR3hB,EACAmgB,EAAmBqB,0BAA4BG,EAAS3hB,GAGxDmgB,EAAmBngB,GAAKke,UAAYyD,EAAS3hB,EAGzD,CDgByB4hB,CAAaL,GAuDlC,IAAMM,GAAsBC,EAAAA,EAAAA,aAtD5B,SAAyB/L,EAAOgM,GAC5B,IAAMC,GAAiB,2BAChBzI,EAAAA,EAAAA,YAAWmE,IACX3H,GAAK,IACRkM,SAAUC,EAAYnM,KAElB6H,EAAaoE,EAAbpE,SACJ+D,EAAW,KACTpJ,EAAUmH,EAAuB3J,GAYjCoM,EAAevE,OAAW3Z,GJ3C7BoU,EAAAA,EAAAA,IAAY,WACf,GAAIuI,EAAsBE,eACtB,OAAO/J,GAEf,II2CUoH,EAAcuD,EAAe3L,EAAO6H,GAC1C,IAAKA,GAAYwE,EAAAA,EAAW,CAOxB7J,EAAQtD,cAAgBgJ,EAAiBC,EAAWC,EAAa6D,EAAgB5D,GAKjF,IAAMiE,GAAiB9I,EAAAA,EAAAA,YAAWwE,GAAaC,OACzCsE,GAA2B/I,EAAAA,EAAAA,YAAW2H,GACxC3I,EAAQtD,gBACR0M,EAAWpJ,EAAQtD,cAAc2M,aAEjCI,EAAgBK,EAAgBd,EAAmBY,EAAcX,GAC7DrB,EAAmBqB,0BAA2Bc,GAE1D,CAKA,OAAQzL,EAAAA,cAAoBkK,EAAsB,CAAE9L,cAAesD,EAAQtD,cAAec,MAAOiM,GAC7FL,EACA9K,EAAAA,cAAoBiH,EAAcyE,SAAU,CAAEja,MAAOiQ,GAAWkJ,EAAUvD,EAAWnI,EAAOoM,EEzExG,SAAsBhE,EAAalJ,EAAe8M,GAC9C,OAAOS,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAYtE,EAAYuE,OAASvE,EAAYuE,MAAMD,GAC/CxN,IACAwN,EACMxN,EAAcyN,MAAMD,GACpBxN,EAAc0N,WAEpBZ,IAC2B,oBAAhBA,EACPA,EAAYU,GAEPvD,EAAY6C,KACjBA,EAAYtV,QAAUgW,GAGlC,GAMA,CAACxN,GACL,CFkDsH2N,CAAazE,EAAa5F,EAAQtD,cAAe8M,GAAc5D,EAAaP,EAAUrF,EAAQtD,gBAChN,IAGA,OADA4M,EAAoBV,GAAyBjD,EACtC2D,CACX,CACA,SAASK,EAAY,GAAc,IAAZD,EAAQ,EAARA,SACbY,GAAgBtJ,EAAAA,EAAAA,YAAWC,EAAAA,GAAoBzC,GACrD,OAAO8L,QAA8B5e,IAAbge,EAClBY,EAAgB,IAAMZ,EACtBA,CACV,CG3EA,SAASa,EAAkBC,GACvB,SAAS9K,EAAOiG,GAA6C,IAAlC8E,EAA8B,UAAH,6CAAG,CAAC,EACtD,OAAO1B,EAAsByB,EAAa7E,EAAW8E,GACzD,CACA,GAAqB,qBAAVC,MACP,OAAOhL,EAMX,IAAMiL,EAAiB,IAAInK,IAC3B,OAAO,IAAIkK,MAAMhL,EAAQ,CAMrB7D,IAAK,SAAC+O,EAASnjB,GAOX,OAHKkjB,EAAenS,IAAI/Q,IACpBkjB,EAAexR,IAAI1R,EAAKiY,EAAOjY,IAE5BkjB,EAAe9O,IAAIpU,EAC9B,GAER,CCxCA,IAAMojB,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAenF,GACpB,MAKqB,kBAAdA,IAIHA,EAAUoF,SAAS,SAOvBF,EAAqB7iB,QAAQ2d,IAAc,GAIvC,QAAQ7b,KAAK6b,GAIrB,CC3BA,IAAMqF,EAAkB,CAAC,E,cCGzB,SAASC,EAAoBxjB,EAAK,GAAsB,IAApByjB,EAAM,EAANA,OAAQxB,EAAQ,EAARA,SACxC,OAAQyB,EAAAA,EAAAA,IAAmB1jB,IACvBA,EAAIgU,WAAW,YACbyP,QAAuBxf,IAAbge,OACLsB,EAAgBvjB,IAAgB,YAARA,EACvC,C,wBCNM2jB,EAAiB,CACnBhd,EAAG,aACHsM,EAAG,aACHC,EAAG,aACH0Q,qBAAsB,eAKpBC,EAAqB,SAAC/Z,EAAGC,GAAC,OAAK+Z,EAAAA,EAAAA,QAA2Bha,GAAKga,EAAAA,EAAAA,QAA2B/Z,EAAE,ECRlG,SAASga,EAAc/jB,GACnB,OAAOA,EAAIgU,WAAW,KAC1B,CCFA,IAAMgQ,EAAiB,SAAC1b,EAAOnG,GAC3B,OAAOA,GAAyB,kBAAVmG,EAChBnG,EAAK8hB,UAAU3b,GACfA,CACV,E,UCDA,SAAS4b,EAAgB9b,EAAO+b,EAAcnZ,EAASoZ,GACnD,IAAQ9M,EAA2DlP,EAA3DkP,MAAO+M,EAAoDjc,EAApDic,KAAMJ,EAA8C7b,EAA9C6b,UAAWK,EAAmClc,EAAnCkc,cAAeC,EAAoBnc,EAApBmc,gBAC/CD,EAAchkB,OAAS,EAEvB,IAAIkkB,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAM1kB,KAAOmkB,EAAc,CAC5B,IAAM7b,EAAQ6b,EAAankB,GAI3B,GAAI+jB,EAAc/jB,GACdqkB,EAAKrkB,GAAOsI,MADhB,CAKA,IAAMqc,EAAYC,EAAAA,EAAiB5kB,GAC7B6kB,EAAcb,EAAe1b,EAAOqc,GAC1C,GAAIjB,EAAAA,EAAAA,IAAmB1jB,GAAM,CAMzB,GAJAwkB,GAAe,EACfP,EAAUjkB,GAAO6kB,EACjBP,EAAchf,KAAKtF,IAEd0kB,EACD,SAEApc,KAAWqc,EAAU/Q,SAAW,KAChC8Q,GAAkB,EAC1B,MACS1kB,EAAIgU,WAAW,WAEpByQ,GAAqB,EACrBF,EAAgBvkB,GAAO6kB,GAGvBvN,EAAMtX,GAAO6kB,CAtBjB,CAwBJ,CAiBA,GAhBKV,EAAaF,YACVO,GAAgBJ,EAChB9M,EAAM2M,UHrClB,SAAwB,EAAD,EAAmGa,EAAoBV,GAAmB,IAAvIH,EAAS,EAATA,UAAWK,EAAa,EAAbA,cAAa,IAAOS,2BAAAA,OAA0B,IAAG,GAAI,MAAEC,mBAAAA,OAAkB,IAAG,GAAI,EAE7GC,EAAkB,GAEtBX,EAAcY,KAAKrB,GACnB,IAC+B,EAD/B,UACkBS,GAAa,IAA/B,IAAK,EAAL,qBAAiC,KAAtBtkB,EAAG,QACVilB,GAAmB,GAAJ,OAAOtB,EAAe3jB,IAAQA,EAAG,YAAIikB,EAAUjkB,GAAI,KACtE,CAAC,+BAaD,OAZI+kB,IAA+Bd,EAAU/Q,IACzC+R,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9Bf,EACAa,EAAkBb,EAAkBH,EAAWa,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACX,CGe8BG,CAAehd,EAAO4C,EAAS0Z,EAAiBN,GAE7D9M,EAAM2M,YAKX3M,EAAM2M,UAAY,SAOtBQ,EAAoB,CACpB,MAA2DF,EAAnDc,QAAAA,OAAO,IAAG,QAAK,IAAoCd,EAAlCe,QAAAA,OAAO,IAAG,QAAK,IAAmBf,EAAjBgB,QAAAA,OAAO,IAAG,IAAC,EACrDjO,EAAMiN,gBAAkB,GAAH,OAAMc,EAAO,YAAIC,EAAO,YAAIC,EACrD,CACJ,CCzEA,IAAMC,EAAwB,WAAH,MAAU,CACjClO,MAAO,CAAC,EACR2M,UAAW,CAAC,EACZK,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,EACV,ECAD,SAASoB,EAAkBvlB,EAAQJ,EAAQiW,GACvC,IAAK,IAAM/V,KAAOF,GACT4lB,EAAAA,EAAAA,GAAc5lB,EAAOE,KAAUwjB,EAAoBxjB,EAAK+V,KACzD7V,EAAOF,GAAOF,EAAOE,GAGjC,CAQA,SAAS2lB,EAAS5P,EAAOoI,EAAaP,GAClC,IACMtG,EAAQ,CAAC,EAMf,OAFAmO,EAAkBnO,EALAvB,EAAMuB,OAAS,CAAC,EAKEvB,GACpC5V,OAAOylB,OAAOtO,EAdlB,SAAgC,EAAuB6G,EAAaP,GAAU,IAA5CwG,EAAiB,EAAjBA,kBAC9B,OAAO5L,EAAAA,EAAAA,UAAQ,WACX,IAAMpQ,EDfuB,CACjCkP,MAAO,CAAC,EACR2M,UAAW,CAAC,EACZK,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,GCYH,OADAH,EAAgB9b,EAAO+V,EAAa,CAAE4G,4BAA6BnH,GAAYwG,GACxEjkB,OAAOylB,OAAO,CAAC,EAAGxd,EAAMic,KAAMjc,EAAMkP,MAC/C,GAAG,CAAC6G,GACR,CAQyB0H,CAAuB9P,EAAOoI,EAAaP,IACzD7H,EAAM+P,gBAAkB/P,EAAM+P,gBAAgBxO,GAASA,CAClE,CACA,SAASyO,EAAahQ,EAAOoI,EAAaP,GAEtC,IAAMoI,EAAY,CAAC,EACb1O,EAAQqO,EAAS5P,EAAOoI,EAAaP,GAgB3C,OAfI7H,EAAMuK,OAA+B,IAAvBvK,EAAMkQ,eAEpBD,EAAUE,WAAY,EAEtB5O,EAAM6O,WACF7O,EAAM8O,iBACF9O,EAAM+O,mBACF,OAEZ/O,EAAMgP,aACa,IAAfvQ,EAAMuK,KACA,OAAM,cACgB,MAAfvK,EAAMuK,KAAe,IAAM,MAEhD0F,EAAU1O,MAAQA,EACX0O,CACX,CC5CA,IAAMO,EAAmB,IAAI3V,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,aAUJ,SAAS4V,GAAkBxmB,GACvB,OAAQA,EAAIgU,WAAW,UAClBhU,EAAIgU,WAAW,SAAmB,cAARhU,GAC3BA,EAAIgU,WAAW,WACfhU,EAAIgU,WAAW,UACfhU,EAAIgU,WAAW,UACfuS,EAAiBxV,IAAI/Q,EAC7B,CCrDA,IACiCymB,GAD7BC,GAAgB,SAAC1mB,GAAG,OAAMwmB,GAAkBxmB,EAAI,EAoBpD,KAnBiCymB,GAyBLE,QAAQ,0BAA0B/S,WArB1D8S,GAAgB,SAAC1mB,GAAG,OAAKA,EAAIgU,WAAW,OAASwS,GAAkBxmB,GAAOymB,GAAYzmB,EAAI,EAwB1F,CADJ,MAAOoO,IACH,CAEJ,SAASwY,GAAY7Q,EAAO8Q,EAAOC,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAM/mB,KAAO+V,EAQF,WAAR/V,GAA4C,kBAAjB+V,EAAMrR,SAEjCgiB,GAAc1mB,KACU,IAAvB8mB,GAA+BN,GAAkBxmB,KAChD6mB,IAAUL,GAAkBxmB,IAE7B+V,EAAiB,WAAK/V,EAAIgU,WAAW,aACtC+S,EAAc/mB,GAAO+V,EAAM/V,IAGnC,OAAO+mB,CACX,C,0BCpDA,SAASC,GAAWxjB,EAAQgF,EAAQ0N,GAChC,MAAyB,kBAAX1S,EACRA,EACAyjB,GAAAA,GAAAA,UAAaze,EAAS0N,EAAO1S,EACvC,CCJA,IAAM0jB,GAAW,CACb1e,OAAQ,oBACR2e,MAAO,oBAELC,GAAY,CACd5e,OAAQ,mBACR2e,MAAO,mB,qFCDX,SAASE,GAAcjf,EAAO,EAEjB4C,EAASsc,EAAUlD,GAAmB,IAFnBmD,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOnC,EAAO,EAAPA,QAASC,EAAO,EAAPA,QAASmC,EAAU,EAAVA,WAAU,IAAEC,YAAAA,OAAW,IAAG,IAAC,MAAEC,WAAAA,OAAU,IAAG,IAAC,EAQvG,GALAzD,EAAgB9b,GADX,cAC0B4C,EAASoZ,GAKpCkD,EACIlf,EAAMkP,MAAMsQ,UACZxf,EAAMyf,MAAMD,QAAUxf,EAAMkP,MAAMsQ,aAF1C,CAMAxf,EAAMyf,MAAQzf,EAAMkP,MACpBlP,EAAMkP,MAAQ,CAAC,EACf,IAAQuQ,EAA6Bzf,EAA7Byf,MAAOvQ,EAAsBlP,EAAtBkP,MAAOwQ,EAAe1f,EAAf0f,WAKlBD,EAAM5D,YACF6D,IACAxQ,EAAM2M,UAAY4D,EAAM5D,kBACrB4D,EAAM5D,WAGb6D,SACa7jB,IAAZohB,QAAqCphB,IAAZqhB,GAAyBhO,EAAM2M,aACzD3M,EAAMiN,gBFzBd,SAAgCuD,EAAYzC,EAASC,GACjD,IAAMyC,EAAYf,GAAW3B,EAASyC,EAAWnhB,EAAGmhB,EAAWxR,OACzD0R,EAAYhB,GAAW1B,EAASwC,EAAW7U,EAAG6U,EAAW1R,QAC/D,MAAO,GAAP,OAAU2R,EAAS,YAAIC,EAC3B,CEqBgCC,CAAuBH,OAAwB7jB,IAAZohB,EAAwBA,EAAU,QAAiBphB,IAAZqhB,EAAwBA,EAAU,UAG1HrhB,IAAVsjB,IACAM,EAAMlhB,EAAI4gB,QACAtjB,IAAVujB,IACAK,EAAM5U,EAAIuU,QAEKvjB,IAAfwjB,GD3BR,SAAsBI,EAAOvnB,GAAqD,IAA7C4nB,EAAU,UAAH,6CAAG,EAAG1f,EAAS,UAAH,6CAAG,EAAG2f,IAAc,UAAH,+CAErEN,EAAMJ,WAAa,EAGnB,IAAMxc,EAAOkd,EAAcjB,GAAWE,GAEtCS,EAAM5c,EAAKzC,QAAUye,GAAAA,GAAAA,WAAcze,GAEnC,IAAMif,EAAaR,GAAAA,GAAAA,UAAa3mB,GAC1BonB,EAAcT,GAAAA,GAAAA,UAAaiB,GACjCL,EAAM5c,EAAKkc,OAAS,GAAH,OAAMM,EAAU,YAAIC,EACzC,CCgBQU,CAAaP,EAAOJ,EAAYC,EAAaC,GAAY,EAzB7D,CA2BJ,CC7CA,IAAMU,GAAuB,WAAH,yBPFW,CACjC/Q,MAAO,CAAC,EACR2M,UAAW,CAAC,EACZK,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,IOFmB,IAC1BwD,MAAO,CAAC,GAAC,ECJPP,GAAW,SAACgB,GAAG,MAAoB,kBAARA,GAA0C,QAAtBA,EAAIC,aAAuB,ECMhF,SAASC,GAAYzS,EAAOoI,EAAasK,EAAWvK,GAChD,IAAMwK,GAAclQ,EAAAA,EAAAA,UAAQ,WACxB,IAAMpQ,EAAQigB,KAEd,OADAhB,GAAcjf,EAAO+V,EAAa,CAAE4G,4BAA4B,GAASuC,GAASpJ,GAAYnI,EAAMqO,oBAC7F,kBACAhc,EAAMyf,OAAK,IACdvQ,OAAO,UAAKlP,EAAMkP,QAE1B,GAAG,CAAC6G,IACJ,GAAIpI,EAAMuB,MAAO,CACb,IAAMqR,EAAY,CAAC,EACnBlD,EAAkBkD,EAAW5S,EAAMuB,MAAOvB,GAC1C2S,EAAYpR,OAAQ,kBAAKqR,GAAcD,EAAYpR,MACvD,CACA,OAAOoR,CACX,CCdA,SAASE,KAA4C,IAA5B9B,EAAqB,UAAH,8CACjCrF,EAAY,SAACvD,EAAWnI,EAAOoM,EAAclL,EAAK,EAAkB2G,GAAa,IAA7BuG,EAAY,EAAZA,aAIhDuE,GAHiBrF,EAAenF,GAChCsK,GACAzC,GAC6BhQ,EAAOoO,EAAcvG,EAAUM,GAC5D6I,EAAgBH,GAAY7Q,EAA4B,kBAAdmI,EAAwB4I,GAClE+B,GAAe,0BACd9B,GACA2B,GAAW,IACdzR,IAAAA,IAOIL,EAAab,EAAba,SACFkS,GAAmBtQ,EAAAA,EAAAA,UAAQ,kBAAOkN,EAAAA,EAAAA,GAAc9O,GAAYA,EAASxC,MAAQwC,CAAQ,GAAG,CAACA,IAI/F,OAHIuL,IACA0G,EAAa,sBAAwB1G,IAElC3K,EAAAA,EAAAA,eAAc0G,GAAW,kBACzB2K,GAAY,IACfjS,SAAUkS,IAElB,EACA,OAAOrH,CACX,C,eCnCA,SAASsH,GAAW5X,EAAS,EAAiB6X,EAAWC,GAAY,IAAtC3R,EAAK,EAALA,MAAO+M,EAAI,EAAJA,KAGlC,IAAK,IAAMrkB,KAFXG,OAAOylB,OAAOzU,EAAQmG,MAAOA,EAAO2R,GAAcA,EAAWC,oBAAoBF,IAE/D3E,EACdlT,EAAQmG,MAAM6R,YAAYnpB,EAAKqkB,EAAKrkB,GAE5C,CCHA,IAAMopB,GAAsB,IAAIxY,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASyY,GAAUlY,EAASmY,EAAaC,EAAYN,GAEjD,IAAK,IAAMjpB,KADX+oB,GAAW5X,EAASmY,OAAarlB,EAAWglB,GAC1BK,EAAYzB,MAC1B1W,EAAQqY,aAAcJ,GAAoBrY,IAAI/Q,GAA0BA,GAAnBypB,EAAAA,GAAAA,GAAYzpB,GAAYspB,EAAYzB,MAAM7nB,GAEvG,CCNA,SAAS0pB,GAA4B3T,EAAOF,GACxC,IAAQyB,EAAUvB,EAAVuB,MACFqS,EAAY,CAAC,EACnB,IAAK,IAAM3pB,KAAOsX,IACVoO,EAAAA,EAAAA,GAAcpO,EAAMtX,KACnB6V,EAAUyB,QAASoO,EAAAA,EAAAA,GAAc7P,EAAUyB,MAAMtX,KAClDwjB,EAAoBxjB,EAAK+V,MACzB4T,EAAU3pB,GAAOsX,EAAMtX,IAG/B,OAAO2pB,CACX,CCXA,SAASD,GAA4B3T,EAAOF,GACxC,IAAM8T,EAAYC,GAA8B7T,EAAOF,GACvD,IAAK,IAAM7V,KAAO+V,EAAO,CACrB,IAAI2P,EAAAA,EAAAA,GAAc3P,EAAM/V,MAAS0lB,EAAAA,EAAAA,GAAc7P,EAAU7V,IAErD2pB,EAD0B,MAAR3pB,GAAuB,MAARA,EAAc,OAASA,EAAI6pB,cAAgB7pB,GACrD+V,EAAM/V,EAErC,CACA,OAAO2pB,CACX,C,0BCJA,SAASG,GAAmBxhB,GACxB,IAAMyhB,GAAiBrE,EAAAA,EAAAA,GAAcpd,GAASA,EAAM8L,MAAQ9L,EAC5D,OAAO0hB,EAAAA,GAAAA,GAAcD,GACfA,EAAeE,UACfF,CACV,C,sCCMA,IAAMG,GAAqB,SAACC,GAAM,OAAK,SAACpU,EAAO6H,GAC3C,IAAMrF,GAAUgB,EAAAA,EAAAA,YAAWuE,GACrBS,GAAkBhF,EAAAA,EAAAA,YAAWT,EAAAA,GAC7BsR,EAAO,WAAH,OAbd,SAAmB,EAA8DrU,EAAOwC,EAASgG,GAAiB,IAA7FmL,EAA2B,EAA3BA,4BAA6BW,EAAiB,EAAjBA,kBAAmBC,EAAO,EAAPA,QAC3DliB,EAAQ,CACV+b,aAAcoG,GAAiBxU,EAAOwC,EAASgG,EAAiBmL,GAChEJ,YAAae,KAKjB,OAHIC,IACAliB,EAAMsa,MAAQ,SAACD,GAAQ,OAAK6H,EAAQvU,EAAO0M,EAAUra,EAAM,GAExDA,CACX,CAIuBoiB,CAAUL,EAAQpU,EAAOwC,EAASgG,EAAgB,EACrE,OAAOX,EAAWwM,KAAS/R,EAAAA,EAAAA,GAAY+R,EAC3C,CAAC,EACD,SAASG,GAAiBxU,EAAOwC,EAASgG,EAAiBkM,GACvD,IAAM/lB,EAAS,CAAC,EACVgmB,EAAeD,EAAmB1U,EAAO,CAAC,GAChD,IAAK,IAAM/V,KAAO0qB,EACdhmB,EAAO1E,GAAO8pB,GAAmBY,EAAa1qB,IAElD,IAAM+X,EAAqBhC,EAArBgC,QAAS5J,EAAY4H,EAAZ5H,QACTwc,EAA0BrL,EAAsBvJ,GAChD6U,EAAkBpL,EAAczJ,GAClCwC,GACAqS,IACCD,IACiB,IAAlB5U,EAAM4J,eACU1b,IAAZ8T,IACAA,EAAUQ,EAAQR,cACN9T,IAAZkK,IACAA,EAAUoK,EAAQpK,UAE1B,IAAI0c,IAA4BtM,IACE,IAA5BA,EAAgBxG,QAGhB+S,GADND,EAA4BA,IAAyC,IAAZ9S,GACR5J,EAAU4J,EACvD+S,GACwB,mBAAjBA,IACN1L,EAAoB0L,KACR7lB,MAAMC,QAAQ4lB,GAAgBA,EAAe,CAACA,IACtDlS,SAAQ,SAAC/Q,GACV,IAAMkjB,GAAWC,EAAAA,GAAAA,GAAwBjV,EAAOlO,GAChD,GAAKkjB,EAAL,CAEA,IAAQE,EAAyCF,EAAzCE,cAA8B/qB,GAAW6qB,EAA1B7W,YAAqB,QAAK6W,EAAQ,KACzD,IAAK,IAAM/qB,KAAOE,EAAQ,CACtB,IAAIgrB,EAAchrB,EAAOF,GACzB,GAAIiF,MAAMC,QAAQgmB,GAQdA,EAAcA,EAHAL,EACRK,EAAY5qB,OAAS,EACrB,GAGU,OAAhB4qB,IACAxmB,EAAO1E,GAAOkrB,EAEtB,CACA,IAAK,IAAMlrB,KAAOirB,EACdvmB,EAAO1E,GAAOirB,EAAcjrB,EAnBtB,CAoBd,IAEJ,OAAO0E,CACX,CCvEA,ICPIymB,GDOEC,GAAkB,CACpB1J,eAAgBwI,GAAmB,CAC/BR,4BAA6BA,GAC7BW,kBAAmBhC,GACnBiC,QAAS,SAACvU,EAAO0M,EAAU,GAAkC,IAAhC6G,EAAW,EAAXA,YAAanF,EAAY,EAAZA,aACtC,IACImF,EAAYxB,WAEJ,oBADGrF,EAAS4I,QAEV5I,EAAS4I,UACT5I,EAAS6I,uBAUvB,CARA,MAAOlhB,GAEHkf,EAAYxB,WAAa,CACrBnhB,EAAG,EACHsM,EAAG,EACHqD,MAAO,EACPF,OAAQ,EAEhB,CACAiR,GAAciC,EAAanF,EAAc,CAAEY,4BAA4B,GAASuC,GAAS7E,EAAS8I,SAAUxV,EAAMqO,mBAClHiF,GAAU5G,EAAU6G,EACxB,KE1BFkC,GAAmB,CACrB9J,eAAgBwI,GAAmB,CAC/BR,4BAAAA,GACAW,kBAAmB7E,KCL3B,SAASiG,GAAYvrB,EAAQwrB,EAAWC,GAAsC,IAA7B3gB,EAAU,UAAH,6CAAG,CAAE4gB,SAAS,GAElE,OADA1rB,EAAO2rB,iBAAiBH,EAAWC,EAAS3gB,GACrC,kBAAM9K,EAAO4rB,oBAAoBJ,EAAWC,EAAQ,CAC/D,CAsBA,SAASI,GAAY9U,EAAKyU,EAAWC,EAAS3gB,IAC1C+T,EAAAA,EAAAA,YAAU,WACN,IAAM5N,EAAU8F,EAAIxK,QACpB,GAAIkf,GAAWxa,EACX,OAAOsa,GAAYta,EAASua,EAAWC,EAAS3gB,EAExD,GAAG,CAACiM,EAAKyU,EAAWC,EAAS3gB,GACjC,EFjCA,SAAWmgB,GACPA,EAAuB,QAAI,UAC3BA,EAAqB,MAAI,aACzBA,EAAmB,IAAI,WACvBA,EAAoB,KAAI,YACxBA,EAAqB,MAAI,aACzBA,EAAsB,OAAI,cAC1BA,EAAoB,KAAI,MAC3B,CARD,CAQGA,KAAkBA,GAAgB,CAAC,IGTtC,IAAMa,GAAmB,SAACC,GACtB,MAA0B,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,SAErB,ECbA,SAASC,GAAiBJ,GAA2B,IAApBK,EAAY,UAAH,6CAAG,OACzC,MAAO,CACHC,MAAO,CACH5lB,EAAGslB,EAAMK,EAAY,KACrBrZ,EAAGgZ,EAAMK,EAAY,MAGjC,CACA,IAAME,GAAiB,SAACb,GACpB,OAAO,SAACM,GAAK,OAAKD,GAAiBC,IAAUN,EAAQM,EAAOI,GAAiBJ,GAAO,CACxF,ECTA,SAASQ,GAAgBvsB,EAAQwrB,EAAWC,EAAS3gB,GACjD,OAAOygB,GAAYvrB,EAAQwrB,EAAWc,GAAeb,GAAU3gB,EACnE,CACA,SAAS0hB,GAAgBzV,EAAKyU,EAAWC,EAAS3gB,GAC9C,OAAO+gB,GAAY9U,EAAKyU,EAAWC,GAAWa,GAAeb,GAAU3gB,EAC3E,CCRA,SAAS2hB,GAAWpN,GAChB,IAAIqN,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAOrN,EAJM,WACbqN,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAczM,GACnB,IAAIsM,GAAO,EACX,GAAa,MAATtM,EACAsM,EAAOE,UAEN,GAAa,MAATxM,EACLsM,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOL,CACX,CACA,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CC7CA,SAASC,GAAiBnY,EAAeoY,EAAUC,EAAe1R,GAC9D,OAAO,SAACqQ,EAAOsB,GACQ,UAAftB,EAAM9pB,MAAoB+qB,OAK1BI,GAAiBrY,EAAc+J,gBAC/B/J,EAAc+J,eAAewO,UAAUrC,GAAcsC,MAAOJ,GAEhEzR,GAAYA,EAASqQ,EAAOsB,GAChC,CACJ,CCVA,IAAMG,GAAgB,SAAhBA,EAAiBrP,EAAQpF,GAC3B,QAAKA,IAGIoF,IAAWpF,GAITyU,EAAcrP,EAAQpF,EAAM0U,eAE3C,E,yGCZMC,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMpS,EAAWgS,GAAkBxZ,IAAI4Z,EAAM9tB,QAC7C0b,GAAYA,EAASoS,EACzB,EACMC,GAA2B,SAACC,GAC9BA,EAAQtV,QAAQmV,GACpB,EAoBA,SAASI,GAAoBhd,EAASnG,EAAS4Q,GAC3C,IAAMwS,EApBV,SAAkC,GAAsB,IAApBC,EAAI,EAAJA,KAASrjB,GAAO,cAC1CsjB,EAAaD,GAAQ9W,SAItBuW,GAAU/c,IAAIud,IACfR,GAAUpc,IAAI4c,EAAY,CAAC,GAE/B,IAAMC,EAAgBT,GAAU1Z,IAAIka,GAC9BtuB,EAAMwuB,KAAKC,UAAUzjB,GAQ3B,OAHKujB,EAAcvuB,KACfuuB,EAAcvuB,GAAO,IAAI0uB,qBAAqBT,IAA0B,QAAEI,KAAAA,GAASrjB,KAEhFujB,EAAcvuB,EACzB,CAEsC2uB,CAAyB3jB,GAG3D,OAFA4iB,GAAkBlc,IAAIP,EAASyK,GAC/BwS,EAA0BQ,QAAQzd,GAC3B,WACHyc,GAAkBjV,OAAOxH,GACzBid,EAA0BS,UAAU1d,EACxC,CACJ,CC5BA,IAAM2d,GAAiB,CACnB5jB,KAAM,EACN6jB,IAAK,GAET,SAASC,GAAwBC,EAAe7mB,EAAO6M,EAAe,GAAqD,IAAnDoZ,EAAI,EAAJA,KAAca,EAAU,EAAlBC,OAAM,IAAcC,OAAAA,OAAM,IAAG,SAAM,EAAEC,EAAI,EAAJA,MAC/GtQ,EAAAA,EAAAA,YAAU,WACN,GAAKkQ,GAAkBha,EAAcxI,QAArC,CAEA,IAAMzB,EAAU,CACZqjB,KAAe,OAATA,QAA0B,IAATA,OAAkB,EAASA,EAAK5hB,QACvDyiB,WAAAA,EACAI,UAA6B,kBAAXF,EAAsBA,EAASN,GAAeM,IAiCpE,OAAOjB,GAAoBlZ,EAAcxI,QAASzB,GA/BrB,SAACgjB,GAC1B,IAAQuB,EAAmBvB,EAAnBuB,eAIR,GAAInnB,EAAMonB,WAAaD,IAEvBnnB,EAAMonB,SAAWD,GAKbF,GAASE,IAAkBnnB,EAAMqnB,gBAArC,CAGSF,IACLnnB,EAAMqnB,gBAAiB,GAEvBxa,EAAc+J,gBACd/J,EAAc+J,eAAewO,UAAUrC,GAAcuE,OAAQH,GAMjE,IAAMxZ,EAAQd,EAAcE,WACtByG,EAAW2T,EACXxZ,EAAM4Z,gBACN5Z,EAAM6Z,gBACZhU,GAAYA,EAASoS,EAZrB,CAaJ,GApCU,CAsCd,GAAG,CAACiB,EAAeZ,EAAMa,EAAYE,GACzC,CAMA,SAASS,GAA+BZ,EAAe7mB,EAAO6M,EAAe,GAAqB,QAAnB6a,SAAAA,OAAQ,IAAG,GAAI,GAC1F/Q,EAAAA,EAAAA,YAAU,WACDkQ,GAAkBa,GAavBjU,uBAAsB,WAClBzT,EAAMqnB,gBAAiB,EACvB,IAAQE,EAAoB1a,EAAcE,WAAlCwa,gBACRA,GAAmBA,EAAgB,MAC/B1a,EAAc+J,gBACd/J,EAAc+J,eAAewO,UAAUrC,GAAcuE,QAAQ,EAErE,GACJ,GAAG,CAACT,GACR,CC9FA,IAAMc,GAA0B,SAACC,GAAI,OAAK,SAACja,GAEvC,OADAia,EAAKja,GACE,IACX,CAAC,ECGKka,GAAoB,CACtBtP,OAAQoP,IFFZ,SAAqB,GAAkF,IAAhF9a,EAAa,EAAbA,cAAeib,EAAW,EAAXA,YAAaP,EAAe,EAAfA,gBAAiBC,EAAe,EAAfA,gBAAe,IAAEO,SAAAA,OAAQ,IAAG,GAAC,EAAC,EACxF/nB,GAAQ8O,EAAAA,EAAAA,QAAO,CACjBuY,gBAAgB,EAChBD,UAAU,IAEVP,EAAgB3sB,QAAQ4tB,GAAeP,GAAmBC,GAC1DO,EAASd,MAAQjnB,EAAMqE,QAAQgjB,iBAC/BR,GAAgB,IACgC,qBAAzBP,qBACrBmB,GACAb,IACMC,EAAe7mB,EAAMqE,QAASwI,EAAekb,EAC7D,IETI1P,IAAKsP,ICIT,SAAuB,GAAuE,IAArEK,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYC,EAAW,EAAXA,YAAaC,EAAQ,EAARA,SAAUtb,EAAa,EAAbA,cAAkBc,GAAK,cAChFya,EAAoBJ,GAASC,GAAcC,GAAeC,EAC1DE,GAAavZ,EAAAA,EAAAA,SAAO,GACpBwZ,GAA4BxZ,EAAAA,EAAAA,QAAO,MAInCyZ,EAAe,CACjB/E,UAAWyE,GACPD,GACAE,GACAva,EAAqB,gBAE7B,SAAS6a,IACLF,EAA0BjkB,SAAWikB,EAA0BjkB,UAC/DikB,EAA0BjkB,QAAU,IACxC,CACA,SAASokB,IAOL,OANAD,IACAH,EAAWhkB,SAAU,EACDwI,EAAcE,WAClBob,UAAYtb,EAAc+J,gBACtC/J,EAAc+J,eAAewO,UAAUrC,GAAc2F,KAAK,IAEtD5D,IACZ,CACA,SAAS6D,EAAY9E,EAAOsB,GACxB,IAAInf,EAAIC,EAAI2iB,EAAIC,EACXJ,MAMJnD,GAAczY,EAAcxI,QAASwf,EAAM/rB,QAEW,QAAhD+wB,GAAMD,EAAK/b,EAAcE,YAAYib,aAA0B,IAAPa,GAAyBA,EAAGvwB,KAAKswB,EAAI/E,EAAOsB,GAD9C,QAAtDlf,GAAMD,EAAK6G,EAAcE,YAAYmb,mBAAgC,IAAPjiB,GAAyBA,EAAG3N,KAAK0N,EAAI6d,EAAOsB,GAErH,CACA,SAAS2D,EAAgBjF,EAAOsB,GAC5B,IAAInf,EAAIC,EACHwiB,MAEkD,QAAtDxiB,GAAMD,EAAK6G,EAAcE,YAAYmb,mBAAgC,IAAPjiB,GAAyBA,EAAG3N,KAAK0N,EAAI6d,EAAOsB,GAC/G,CACA,IAAM4D,GAAa3O,EAAAA,EAAAA,cAAY,SAACyJ,EAAOsB,GACnC,IAAInf,EAEJ,GADAwiB,KACIH,EAAWhkB,QAAf,CAEAgkB,EAAWhkB,SAAU,EACrBikB,EAA0BjkB,SAAUhI,EAAAA,GAAAA,GAAKgoB,GAAgB9Q,OAAQ,YAAaoV,EAAaJ,GAAelE,GAAgB9Q,OAAQ,gBAAiBuV,EAAiBP,IACpK,IAAMS,EAAcnc,EAAcE,WAI9Bic,EAAYb,UAAYtb,EAAc+J,gBACtC/J,EAAc+J,eAAewO,UAAUrC,GAAc2F,KAAK,GAE5B,QAAjC1iB,EAAKgjB,EAAYf,kBAA+B,IAAPjiB,GAAyBA,EAAG1N,KAAK0wB,EAAanF,EAAOsB,EAVrF,CAWd,GAAG,CAACjrB,QAAQ+tB,GAAapb,IACzByX,GAAgBzX,EAAe,cAAeub,EAAoBW,OAAaltB,EAAW0sB,IAC1FpW,EAAAA,GAAAA,GAAiBqW,EACrB,IDjEIrQ,MAAOwP,IECX,SAAyB,GAAgC,IAA9BsB,EAAU,EAAVA,WAAYpc,EAAa,EAAbA,cAC3B+J,EAAmB/J,EAAnB+J,eACFsS,GAAU9O,EAAAA,EAAAA,cAAY,WACxBxD,GAAkBA,EAAewO,UAAUrC,GAAcoG,OAAO,EACpE,GAAG,CAACvS,IACEwS,GAAShP,EAAAA,EAAAA,cAAY,WACvBxD,GAAkBA,EAAewO,UAAUrC,GAAcoG,OAAO,EACpE,GAAG,CAACvS,IACJ+M,GAAY9W,EAAe,QAASoc,EAAaC,OAAUrtB,GAC3D8nB,GAAY9W,EAAe,OAAQoc,EAAaG,OAASvtB,EAC7D,IFVIuc,MAAOuP,ILQX,SAAyB,GAA0D,IAAxD0B,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAAYC,EAAU,EAAVA,WAAY1c,EAAa,EAAbA,cAC7DyX,GAAgBzX,EAAe,gBAAgBuD,EAAAA,EAAAA,UAAQ,WACnD,OAAOiZ,GAAgBE,EACjBvE,GAAiBnY,GAAe,EAAM3S,QAAQqvB,GAAaF,QAC3DxtB,CACV,GAAG,CAACwtB,EAAcnvB,QAAQqvB,GAAa1c,IAAiB,CAAE2W,SAAU6F,IACpE/E,GAAgBzX,EAAe,gBAAgBuD,EAAAA,EAAAA,UAAQ,WACnD,OAAOkZ,GAAcC,EACfvE,GAAiBnY,GAAe,EAAO3S,QAAQqvB,GAAaD,QAC5DztB,CACV,GAAG,CAACwtB,EAAcnvB,QAAQqvB,GAAa1c,IAAiB,CAAE2W,SAAU8F,GACxE,K,WQHA,SAASE,KACL,IAAMrZ,GAAUgB,EAAAA,EAAAA,YAAWT,EAAAA,GAC3B,GAAgB,OAAZP,EACA,MAAO,EAAC,EAAM,MAClB,IAAQtC,EAAwCsC,EAAxCtC,UAAW+B,EAA6BO,EAA7BP,eAAgBU,EAAaH,EAAbG,SAI7B3B,GAAKC,EAAAA,EAAAA,UACX+H,EAAAA,EAAAA,YAAU,kBAAMrG,EAAS3B,EAAG,GAAE,IAE9B,OAAQd,GAAa+B,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAejB,EAAG,GACD,EAAC,EACnE,C,qCCtCA,SAAS8a,GAAe7oB,EAAMwJ,GAC1B,IAAKvN,MAAMC,QAAQsN,GACf,OAAO,EACX,IAAMsf,EAAatf,EAAKlS,OACxB,GAAIwxB,IAAe9oB,EAAK1I,OACpB,OAAO,EACX,IAAK,IAAIL,EAAI,EAAGA,EAAI6xB,EAAY7xB,IAC5B,GAAIuS,EAAKvS,KAAO+I,EAAK/I,GACjB,OAAO,EAEf,OAAO,CACX,C,4DCHM8xB,GAAuB,CACzB5G,GAAc6G,QACd7G,GAAcuE,OACdvE,GAAcoG,MACdpG,GAAcsC,MACdtC,GAAc2F,IACd3F,GAAc8G,KACd9G,GAAc+G,MAEZC,GAAuB,UAAIJ,IAAsBnsB,UACjDwsB,GAAoBL,GAAqBzxB,OAI/C,SAAS+xB,GAAqBpd,GAC1B,IAAI9G,EAJR,SAAqB8G,GACjB,OAAO,SAACqd,GAAU,OAAKC,QAAQxD,IAAIuD,EAAWxuB,KAAI,gBAAG4L,EAAS,EAATA,UAAW1E,EAAO,EAAPA,QAAO,OAAOwnB,EAAAA,GAAAA,IAAqBvd,EAAevF,EAAW1E,EAAQ,IAAE,CAC3I,CAEkBynB,CAAYxd,GACpB7M,EAmSV,WAAuB,MACnB,OAAO,EAAP,cACK+iB,GAAc6G,QAAUU,IAAgB,KAAK,UAC7CvH,GAAcuE,OAASgD,OAAiB,UACxCvH,GAAcsC,MAAQiF,OAAiB,UACvCvH,GAAc2F,IAAM4B,OAAiB,UACrCvH,GAAc8G,KAAOS,OAAiB,UACtCvH,GAAcoG,MAAQmB,OAAiB,UACvCvH,GAAc+G,KAAOQ,MAAiB,CAE/C,CA7SkBC,GACVvY,GAAkB,EAKhBwY,EAA0B,SAACvW,EAAKxU,GAClC,IAAMkjB,GAAW8H,EAAAA,GAAAA,GAAe5d,EAAepN,GAC/C,GAAIkjB,EAAU,CACuCA,EAAzC7W,WAAR,IAAoB+W,EAA6BF,EAA7BE,cAAkB/qB,GAAM,QAAK6qB,EAAQ,IACzD1O,GAAM,0BAAKA,GAAQnc,GAAW+qB,EAClC,CACA,OAAO5O,CACX,EAkBA,SAAS4C,EAAejU,EAAS8nB,GA8B7B,IA7BA,IAAM/c,EAAQd,EAAcE,WACtBoD,EAAUtD,EAAc8d,mBAAkB,IAAS,CAAC,EAKpDT,EAAa,GAKbU,EAAc,IAAIpiB,IAMpBqiB,EAAkB,CAAC,EAKnBC,EAAsBliB,IAC1B,aAOI,IAAM7O,EAAOgwB,GAAqBlyB,GAC5BkzB,EAAY/qB,EAAMjG,GAClB2d,OAAuB7b,IAAhB8R,EAAM5T,GAAsB4T,EAAM5T,GAAQoW,EAAQpW,GACzDixB,EAAgBjU,EAAeW,GAK/BuT,EAAclxB,IAAS2wB,EAAoBK,EAAU9F,SAAW,MAClD,IAAhBgG,IACAH,EAAsBjzB,GAO1B,IAAIqzB,EAAcxT,IAASvH,EAAQpW,IAAS2d,IAAS/J,EAAM5T,IAASixB,EAepE,GAXIE,GACAlZ,GACAnF,EAAcse,yBACdD,GAAc,GAMlBH,EAAUK,eAAgB,UAAKP,IAI7BE,EAAU9F,UAA4B,OAAhBgG,IAElBvT,IAASqT,EAAUM,UAErBrU,EAAoBU,IACJ,mBAATA,EAAoB,iBAQ/B,IAAM4T,EAqKlB,SAAgClhB,EAAMxJ,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASwJ,EAEf,GAAIvN,MAAMC,QAAQ8D,GACnB,OAAQ6oB,GAAe7oB,EAAMwJ,GAEjC,OAAO,CACX,CA7KqCmhB,CAAuBR,EAAUM,SAAU3T,GAChE8T,EAAoBF,GAEnBvxB,IAAS2wB,GACNK,EAAU9F,WACTiG,GACDF,GAEHnzB,EAAIizB,GAAuBE,EAK1BS,EAAiB5uB,MAAMC,QAAQ4a,GAAQA,EAAO,CAACA,GAKjDgU,EAAiBD,EAAezX,OAAOwW,EAAyB,CAAC,IACjD,IAAhBS,IACAS,EAAiB,CAAC,GAUtB,MAAoCX,EAA5BY,mBAAAA,OAAkB,IAAG,GAAC,EAAC,EACzBC,GAAU,kBACTD,GACAD,GAEDG,EAAgB,SAACj0B,GACnB4zB,GAAoB,EACpBZ,EAAYra,OAAO3Y,GACnBmzB,EAAUe,eAAel0B,IAAO,CACpC,EACA,IAAK,IAAMA,KAAOg0B,EAAS,CACvB,IAAMhrB,EAAO8qB,EAAe9zB,GACtBwS,EAAOuhB,EAAmB/zB,GAE5BizB,EAAgB1iB,eAAevQ,KAK/BgJ,IAASwJ,GAKL6C,EAAAA,GAAAA,GAAkBrM,KAASqM,EAAAA,GAAAA,GAAkB7C,IACxCqf,GAAe7oB,EAAMwJ,IAASkhB,EAC/BO,EAAcj0B,GAOdmzB,EAAUK,cAAcxzB,IAAO,OAGrBiE,IAAT+E,EAELirB,EAAcj0B,GAIdgzB,EAAYpY,IAAI5a,QAGNiE,IAAT+E,GAAsBgqB,EAAYjiB,IAAI/Q,GAK3Ci0B,EAAcj0B,GAOdmzB,EAAUK,cAAcxzB,IAAO,EAEvC,CAKAmzB,EAAUM,SAAW3T,EACrBqT,EAAUY,mBAAqBD,EAI3BX,EAAU9F,WACV4F,GAAkB,kBAAKA,GAAoBa,IAE3C1Z,GAAmBnF,EAAc2J,wBACjCgV,GAAoB,GAOpBA,IAAsBN,GACtBhB,EAAWhtB,KAAI,MAAfgtB,GAAU,QAASuB,EAAe/vB,KAAI,SAAC4L,GAAS,MAAM,CAClDA,UAAWA,EACX1E,SAAS,QAAE7I,KAAAA,GAAS6I,GACvB,KAET,EApKS/K,EAAI,EAAGA,EAAImyB,GAAmBnyB,IAAG,IA0K1C,GAAI+yB,EAAY9c,KAAM,CAClB,IAAMie,EAAoB,CAAC,EAC3BnB,EAAYpa,SAAQ,SAAC5Y,GACjB,IAAMo0B,EAAiBnf,EAAcof,cAAcr0B,QAC5BiE,IAAnBmwB,IACAD,EAAkBn0B,GAAOo0B,EAEjC,IACA9B,EAAWhtB,KAAK,CAAEoK,UAAWykB,GACjC,CACA,IAAIG,EAAgBhyB,QAAQgwB,EAAWhyB,QAOvC,OANI8Z,IACkB,IAAlBrE,EAAMgC,UACL9C,EAAcse,yBACfe,GAAgB,GAEpBla,GAAkB,EACXka,EAAgBnmB,EAAQmkB,GAAcC,QAAQgC,SACzD,CAkBA,MAAO,CACHtV,eAAAA,EACAuO,UAhBJ,SAAmBrrB,EAAMkrB,EAAUriB,GAC/B,IAAIoD,EAEJ,GAAIhG,EAAMjG,GAAMkrB,WAAaA,EACzB,OAAOkF,QAAQgC,UAEsB,QAAxCnmB,EAAK6G,EAAcuf,uBAAoC,IAAPpmB,GAAyBA,EAAGwK,SAAQ,SAACK,GAAY,IAAI7K,EAAI,OAAuC,QAA/BA,EAAK6K,EAAM+F,sBAAmC,IAAP5Q,OAAgB,EAASA,EAAGof,UAAUrrB,EAAMkrB,EAAW,IAChNjlB,EAAMjG,GAAMkrB,SAAWA,EACvB,IAAMiF,EAAarT,EAAejU,EAAS7I,GAC3C,IAAK,IAAMnC,KAAOoI,EACdA,EAAMpI,GAAKwzB,cAAgB,CAAC,EAEhC,OAAOlB,CACX,EAIImC,mBA5PJ,SAA4BC,GACxBvmB,EAAUumB,EAAazf,EAC3B,EA2PI0f,SAAU,kBAAMvsB,CAAK,EAE7B,CAUA,SAASsqB,KAAkC,IAAlBrF,EAAW,UAAH,8CAC7B,MAAO,CACHA,SAAAA,EACAmG,cAAe,CAAC,EAChBU,eAAgB,CAAC,EACjBH,mBAAoB,CAAC,EAE7B,CClTA,IAAMzB,GAAa,CACf5iB,UAAWqgB,IAAwB,YAAgC,IAA7B9a,EAAa,EAAbA,cAAe9G,EAAO,EAAPA,QAMjD8G,EAAc+J,iBAAmB/J,EAAc+J,eAAiBqT,GAAqBpd,IAIjFmK,EAAoBjR,KACpB4Q,EAAAA,EAAAA,YAAU,kBAAM5Q,EAAQymB,UAAU3f,EAAc,GAAE,CAAC9G,GAE3D,IACAkS,KAAM0P,IAAwB,SAACha,GAC3B,IAAQkC,EAA0BlC,EAA1BkC,OAAQhD,EAAkBc,EAAlBd,cAChB,EAAkC2c,KAAa,gBAAxC3b,EAAS,KAAE4e,EAAY,KACxBtW,GAAkBhF,EAAAA,EAAAA,YAAWT,EAAAA,IACnCiG,EAAAA,EAAAA,YAAU,WACN9J,EAAcgB,UAAYA,EAC1B,IAAMvG,EAAYuF,EAAc+J,gBAC5B/J,EAAc+J,eAAewO,UAAUrC,GAAc+G,MAAOjc,EAAW,CACnEgC,OAASsG,GAAmBA,EAAgBtG,QACxCA,IAERvI,IAAcuG,GACdvG,EAAUolB,KAAKD,EAEvB,GAAG,CAAC5e,GACR,K,iCCtCE8e,GAAW,SAACjrB,EAAGC,GAAC,OAAKrI,KAAKsF,IAAI8C,EAAIC,EAAE,EAC1C,SAASirB,GAAWlrB,EAAGC,GAEnB,IAAMkrB,EAASF,GAASjrB,EAAEnD,EAAGoD,EAAEpD,GACzBuuB,EAASH,GAASjrB,EAAEmJ,EAAGlJ,EAAEkJ,GAC/B,OAAOvR,KAAKC,KAAK,SAAAszB,EAAU,GAAC,SAAGC,EAAU,GAC7C,C,eCMMC,GAAU,WACZ,WAAYlJ,EAAOmJ,GAAuC,oEAAJ,CAAC,EAAxBzX,EAAkB,EAAlBA,mBA0D3B,IA1D6C,eAI7C7H,KAAKuf,WAAa,KAIlBvf,KAAKwf,cAAgB,KAIrBxf,KAAKyf,kBAAoB,KAIzBzf,KAAKsf,SAAW,CAAC,EACjBtf,KAAK0f,YAAc,WACf,GAAM,EAAKF,eAAiB,EAAKC,kBAAjC,CAEA,IAAMhI,EAAOkI,GAAW,EAAKF,kBAAmB,EAAKG,SAC/CC,EAAmC,OAApB,EAAKN,WAIpBO,EAA0BZ,GAAWzH,EAAK/kB,OAAQ,CAAE7B,EAAG,EAAGsM,EAAG,KAAQ,EAC3E,GAAK0iB,GAAiBC,EAAtB,CAEA,IAAQrJ,EAAUgB,EAAVhB,MACAnR,EAAczI,GAAAA,EAAAA,UACtB,EAAK+iB,QAAQpwB,MAAK,kBAAKinB,GAAK,IAAEnR,UAAAA,KAC9B,MAA4B,EAAKga,SAAzBS,EAAO,EAAPA,QAASC,EAAM,EAANA,OACZH,IACDE,GAAWA,EAAQ,EAAKP,cAAe/H,GACvC,EAAK8H,WAAa,EAAKC,eAE3BQ,GAAUA,EAAO,EAAKR,cAAe/H,EAT3B,CARA,CAkBd,EACAzX,KAAKigB,kBAAoB,SAAC9J,EAAOsB,GAC7B,EAAK+H,cAAgBrJ,EACrB,EAAKsJ,kBAAoBS,GAAezI,EAAM,EAAK5P,oBAEnD3P,GAAAA,GAAAA,OAAY,EAAKwnB,aAAa,EAClC,EACA1f,KAAKmgB,gBAAkB,SAAChK,EAAOsB,GAE3B,GADA,EAAK2I,MACC,EAAKZ,eAAiB,EAAKC,kBAAjC,CAEA,MAAgC,EAAKH,SAA7Be,EAAK,EAALA,MAAOC,EAAY,EAAZA,aACTC,EAAUZ,GAA0B,kBAAfxJ,EAAM9pB,KAC3B,EAAKozB,kBACLS,GAAezI,EAAM,EAAK5P,oBAAqB,EAAK+X,SACtD,EAAKL,YAAcc,GACnBA,EAAMlK,EAAOoK,GAEjBD,GAAgBA,EAAanK,EAAOoK,EAR1B,CASd,EAEKrK,GAAiBC,GAAtB,CAEAnW,KAAKsf,SAAWA,EAChBtf,KAAK6H,mBAAqBA,EAC1B,IAAM4P,EAAOlB,GAAiBJ,GACxBqK,EAAcN,GAAezI,EAAMzX,KAAK6H,oBACtC4O,EAAU+J,EAAV/J,MACAnR,EAAczI,GAAAA,EAAAA,UACtBmD,KAAK4f,QAAU,EAAC,kBAAKnJ,GAAK,IAAEnR,UAAAA,KAC5B,IAAQmb,EAAmBnB,EAAnBmB,eACRA,GACIA,EAAetK,EAAOwJ,GAAWa,EAAaxgB,KAAK4f,UACvD5f,KAAK0gB,iBAAkB/xB,EAAAA,GAAAA,GAAKgoB,GAAgB9Q,OAAQ,cAAe7F,KAAKigB,mBAAoBtJ,GAAgB9Q,OAAQ,YAAa7F,KAAKmgB,iBAAkBxJ,GAAgB9Q,OAAQ,gBAAiB7F,KAAKmgB,iBAX5L,CAYd,CAOC,OAPA,sCACD,SAAeb,GACXtf,KAAKsf,SAAWA,CACpB,GAAC,iBACD,WACItf,KAAK0gB,iBAAmB1gB,KAAK0gB,kBAC7BtoB,GAAAA,GAAAA,OAAkB4H,KAAK0f,YAC3B,KAAC,EA/EW,GAiFhB,SAASQ,GAAezI,EAAM5P,GAC1B,OAAOA,EAAqB,CAAE4O,MAAO5O,EAAmB4P,EAAKhB,QAAWgB,CAC5E,CACA,SAASkJ,GAAc3sB,EAAGC,GACtB,MAAO,CAAEpD,EAAGmD,EAAEnD,EAAIoD,EAAEpD,EAAGsM,EAAGnJ,EAAEmJ,EAAIlJ,EAAEkJ,EACtC,CACA,SAASwiB,GAAW,EAAWC,GAAS,IAAlBnJ,EAAK,EAALA,MAClB,MAAO,CACHA,MAAAA,EACA1iB,MAAO4sB,GAAclK,EAAOmK,GAAgBhB,IAC5CltB,OAAQiuB,GAAclK,EAAOoK,GAAiBjB,IAC9CnsB,SAAUwL,GAAY2gB,EAAS,IAEvC,CACA,SAASiB,GAAiBjB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASgB,GAAgBhB,GACrB,OAAOA,EAAQA,EAAQp1B,OAAS,EACpC,CACA,SAASyU,GAAY2gB,EAASkB,GAC1B,GAAIlB,EAAQp1B,OAAS,EACjB,MAAO,CAAEqG,EAAG,EAAGsM,EAAG,GAKtB,IAHA,IAAIhT,EAAIy1B,EAAQp1B,OAAS,EACrBu2B,EAAmB,KACjBC,EAAYJ,GAAgBhB,GAC3Bz1B,GAAK,IACR42B,EAAmBnB,EAAQz1B,KACvB62B,EAAU1b,UAAYyb,EAAiBzb,WACvCzG,EAAAA,GAAAA,GAAsBiiB,MAG1B32B,IAEJ,IAAK42B,EACD,MAAO,CAAElwB,EAAG,EAAGsM,EAAG,GAEtB,IAAM8jB,GAAQD,EAAU1b,UAAYyb,EAAiBzb,WAAa,IAClE,GAAa,IAAT2b,EACA,MAAO,CAAEpwB,EAAG,EAAGsM,EAAG,GAEtB,IAAMvG,EAAkB,CACpB/F,GAAImwB,EAAUnwB,EAAIkwB,EAAiBlwB,GAAKowB,EACxC9jB,GAAI6jB,EAAU7jB,EAAI4jB,EAAiB5jB,GAAK8jB,GAQ5C,OANIrqB,EAAgB/F,IAAMqK,MACtBtE,EAAgB/F,EAAI,GAEpB+F,EAAgBuG,IAAMjC,MACtBtE,EAAgBuG,EAAI,GAEjBvG,CACX,C,0BChJA,SAASsqB,GAAWC,GAChB,OAAOA,EAAKr1B,IAAMq1B,EAAK3qB,GAC3B,CACA,SAAS4qB,GAAO5uB,GAAuC,IAAhCpI,EAAS,UAAH,6CAAG,EAAGi3B,EAAc,UAAH,6CAAG,IAC7C,OAAOz1B,KAAKsF,IAAIsB,EAAQpI,IAAWi3B,CACvC,CACA,SAASC,GAAcvtB,EAAO/J,EAAQI,GAAsB,IAAdsD,EAAS,UAAH,6CAAG,GACnDqG,EAAMrG,OAASA,EACfqG,EAAMwtB,aAAc/zB,EAAAA,GAAAA,GAAIxD,EAAOwM,IAAKxM,EAAO8B,IAAKiI,EAAMrG,QACtDqG,EAAM4J,MAAQujB,GAAW92B,GAAU82B,GAAWl3B,IAC1Co3B,GAAOrtB,EAAM4J,MAAO,EAAG,OAAW/I,MAAMb,EAAM4J,UAC9C5J,EAAM4J,MAAQ,GAClB5J,EAAMytB,WACFh0B,EAAAA,GAAAA,GAAIpD,EAAOoM,IAAKpM,EAAO0B,IAAKiI,EAAMrG,QAAUqG,EAAMwtB,aAClDH,GAAOrtB,EAAMytB,YAAc5sB,MAAMb,EAAMytB,cACvCztB,EAAMytB,UAAY,EAC1B,CACA,SAASC,GAAa1tB,EAAO/J,EAAQI,EAAQsD,GACzC4zB,GAAcvtB,EAAMlD,EAAG7G,EAAO6G,EAAGzG,EAAOyG,EAAc,OAAXnD,QAA8B,IAAXA,OAAoB,EAASA,EAAO6hB,SAClG+R,GAAcvtB,EAAMoJ,EAAGnT,EAAOmT,EAAG/S,EAAO+S,EAAc,OAAXzP,QAA8B,IAAXA,OAAoB,EAASA,EAAO8hB,QACtG,CACA,SAASkS,GAAiBt3B,EAAQu3B,EAAUpZ,GACxCne,EAAOoM,IAAM+R,EAAO/R,IAAMmrB,EAASnrB,IACnCpM,EAAO0B,IAAM1B,EAAOoM,IAAM0qB,GAAWS,EACzC,CAKA,SAASC,GAAyBx3B,EAAQujB,EAAQpF,GAC9Cne,EAAOoM,IAAMmX,EAAOnX,IAAM+R,EAAO/R,IACjCpM,EAAO0B,IAAM1B,EAAOoM,IAAM0qB,GAAWvT,EACzC,CACA,SAASkU,GAAqBz3B,EAAQujB,EAAQpF,GAC1CqZ,GAAyBx3B,EAAOyG,EAAG8c,EAAO9c,EAAG0X,EAAO1X,GACpD+wB,GAAyBx3B,EAAO+S,EAAGwQ,EAAOxQ,EAAGoL,EAAOpL,EACxD,C,eCZA,SAAS2kB,GAA4BX,EAAM3qB,EAAK1K,GAC5C,MAAO,CACH0K,SAAarI,IAARqI,EAAoB2qB,EAAK3qB,IAAMA,OAAMrI,EAC1CrC,SAAaqC,IAARrC,EACCq1B,EAAKr1B,IAAMA,GAAOq1B,EAAKr1B,IAAMq1B,EAAK3qB,UAClCrI,EAEd,CAcA,SAAS4zB,GAA4BC,EAAYC,GAC7C,IAAIzrB,EAAMyrB,EAAgBzrB,IAAMwrB,EAAWxrB,IACvC1K,EAAMm2B,EAAgBn2B,IAAMk2B,EAAWl2B,IAG3C,GAAIm2B,EAAgBn2B,IAAMm2B,EAAgBzrB,IACtCwrB,EAAWl2B,IAAMk2B,EAAWxrB,IAAK,OACpB,CAAC1K,EAAK0K,GAAlBA,EAAG,KAAE1K,EAAG,IACb,CACA,MAAO,CAAE0K,IAAAA,EAAK1K,IAAAA,EAClB,CAuCA,IAAMo2B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH9rB,IAAK+rB,GAAoBH,EAAaC,GACtCv2B,IAAKy2B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,SAASC,GAAS3c,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS4c,GAAwB,GAA+B,IAA7BhiB,EAAG,EAAHA,IAC/B,MAAO,CACH7P,EAAG,CAAE2F,IAF+B,EAAJoK,KAEhB9U,IAF2B,EAAL62B,OAGtCxlB,EAAG,CAAE3G,IAAKkK,EAAK5U,IAHoC,EAAN82B,QAKrD,CCVA,SAASC,GAAgBllB,GACrB,YAAiBxP,IAAVwP,GAAiC,IAAVA,CAClC,CACA,SAASmlB,GAAS,GAA2B,IAAzBnlB,EAAK,EAALA,MAAOF,EAAM,EAANA,OAAQC,EAAM,EAANA,OAC/B,OAASmlB,GAAgBllB,KACpBklB,GAAgBplB,KAChBolB,GAAgBnlB,EACzB,CACA,SAASgR,GAAa9f,GAClB,OAAQk0B,GAASl0B,IACbm0B,GAAen0B,IACfA,EAAOwO,GACPxO,EAAOyO,QACPzO,EAAO0O,SACP1O,EAAO2O,OACf,CACA,SAASwlB,GAAen0B,GACpB,OAAOo0B,GAAcp0B,EAAOiC,IAAMmyB,GAAcp0B,EAAOuO,EAC3D,CACA,SAAS6lB,GAAcxwB,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASywB,GAAWxM,EAAO9Y,EAAO4jB,GAG9B,OAAOA,EADQ5jB,GADY8Y,EAAQ8K,EAGvC,CAIA,SAAS2B,GAAgBzM,EAAO+K,EAAW7jB,EAAO4jB,EAAa4B,GAI3D,YAHiBh1B,IAAbg1B,IACA1M,EAAQwM,GAAWxM,EAAO0M,EAAU5B,IAEjC0B,GAAWxM,EAAO9Y,EAAO4jB,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,GAAuD,IAAjDK,EAAY,UAAH,6CAAG,EAAG7jB,EAAQ,UAAH,6CAAG,EAAG4jB,EAAW,uCAAE4B,EAAQ,uCACzEhC,EAAK3qB,IAAM0sB,GAAgB/B,EAAK3qB,IAAKgrB,EAAW7jB,EAAO4jB,EAAa4B,GACpEhC,EAAKr1B,IAAMo3B,GAAgB/B,EAAKr1B,IAAK01B,EAAW7jB,EAAO4jB,EAAa4B,EACxE,CAIA,SAASE,GAAcC,EAAK,GAAU,IAARzyB,EAAC,EAADA,EAAGsM,EAAC,EAADA,EAC7BimB,GAAeE,EAAIzyB,EAAGA,EAAE2wB,UAAW3wB,EAAE8M,MAAO9M,EAAE0wB,aAC9C6B,GAAeE,EAAInmB,EAAGA,EAAEqkB,UAAWrkB,EAAEQ,MAAOR,EAAEokB,YAClD,CAgDA,SAASgC,GAAc5lB,GACnB,OAAI6lB,OAAOC,UAAU9lB,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS+lB,GAAcvC,EAAMlC,GACzBkC,EAAK3qB,IAAM2qB,EAAK3qB,IAAMyoB,EACtBkC,EAAKr1B,IAAMq1B,EAAKr1B,IAAMmzB,CAC1B,CAMA,SAAS0E,GAAcxC,EAAMyC,EAAY,GAA4B,oBAA3B15B,EAAG,KAAE25B,EAAQ,KAAEC,EAAS,KACxDC,OAAuC51B,IAA1By1B,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,GAAc/zB,EAAAA,GAAAA,GAAI2zB,EAAK3qB,IAAK2qB,EAAKr1B,IAAKi4B,GAE5CX,GAAejC,EAAMyC,EAAW15B,GAAM05B,EAAWC,GAAWtC,EAAaqC,EAAWjmB,MACxF,CAIA,IAAMqmB,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKnV,GACvBwV,GAAcL,EAAIzyB,EAAGsd,EAAW6V,IAChCL,GAAcL,EAAInmB,EAAGgR,EAAW8V,GACpC,CC7GA,SAASE,GAAmBxX,EAAUuT,GAClC,OAAOwC,GHeX,SAA4BjM,EAAOyJ,GAC/B,IAAKA,EACD,OAAOzJ,EACX,IAAM2N,EAAUlE,EAAe,CAAErvB,EAAG4lB,EAAM7V,KAAMzD,EAAGsZ,EAAM/V,MACnD2jB,EAAcnE,EAAe,CAAErvB,EAAG4lB,EAAMkM,MAAOxlB,EAAGsZ,EAAMmM,SAC9D,MAAO,CACHliB,IAAK0jB,EAAQjnB,EACbyD,KAAMwjB,EAAQvzB,EACd+xB,OAAQyB,EAAYlnB,EACpBwlB,MAAO0B,EAAYxzB,EAE3B,CG1BmCyzB,CAAmB3X,EAAS6I,wBAAyB0K,GACxF,C,eCaMqE,GAAsB,IAAIxM,QAK1ByM,GAAyB,WAC3B,WAAYrlB,IAAe,eAIvBa,KAAKykB,eAAiB,KACtBzkB,KAAK0kB,YAAa,EAClB1kB,KAAK2kB,iBAAmB,KACxB3kB,KAAKuhB,YAAc,CAAE1wB,EAAG,EAAGsM,EAAG,GAI9B6C,KAAK4kB,aAAc,EACnB5kB,KAAK6kB,uBAAwB,EAI7B7kB,KAAK8kB,QC7BY,CACrBj0B,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,ID+BjCkU,KAAKb,cAAgBA,CACzB,CAiYC,OAjYA,6BACD,SAAM4lB,GAA4C,oEAAJ,CAAC,EAAC,IAA3BC,aAAAA,OAAY,IAAG,GAAK,EAIrC,IAAqC,IAAjChlB,KAAKb,cAAcgB,UAAvB,CAEA,IAAMsgB,EAAiB,SAACtK,GAGpB,EAAK8O,gBACDD,GACA,EAAKA,aAAazO,GAAiBJ,EAAO,QAAQM,MAE1D,EACMsJ,EAAU,SAAC5J,EAAOsB,GACpB,IAAInf,EAEJ,EAA+C,EAAK+G,WAA5CmL,EAAI,EAAJA,KAAM0a,EAAe,EAAfA,gBAAiBC,EAAW,EAAXA,cAC3B3a,GAAS0a,IACL,EAAKT,gBACL,EAAKA,iBACT,EAAKA,eAAiBxN,GAAczM,GAE/B,EAAKia,mBAGd,EAAKC,YAAa,EAClB,EAAKC,iBAAmB,KACxB,EAAKS,qBACD,EAAKjmB,cAAcgU,aACnB,EAAKhU,cAAcgU,WAAWkS,oBAAqB,EACnD,EAAKlmB,cAAcgU,WAAW/oB,YAAS+D,GAK3Cs0B,IAAS,SAACtB,GACN,IAAI7oB,EAAIC,EACJ5B,EAAU,EAAK2uB,mBAAmBnE,GAAM7iB,OAAS,EAIrD,GAAIinB,GAAAA,GAAAA,KAAa5uB,GAAU,CACvB,IAAM6uB,EAA8G,QAA9FjtB,EAA8C,QAAxCD,EAAK,EAAK6G,cAAcgU,kBAA+B,IAAP7a,OAAgB,EAASA,EAAGqV,cAA2B,IAAPpV,OAAgB,EAASA,EAAGktB,UAAUtE,GAClK,GAAIqE,EAEA7uB,EADeuqB,GAAWsE,IACN5lB,WAAWjJ,GAAW,IAElD,CACA,EAAK4qB,YAAYJ,GAAQxqB,CAC7B,IAEgB,OAAhBwuB,QAAwC,IAAhBA,GAAkCA,EAAYhP,EAAOsB,GAChC,QAA5Cnf,EAAK,EAAK6G,cAAc+J,sBAAmC,IAAP5Q,GAAyBA,EAAGof,UAAUrC,GAAc8G,MAAM,GACnH,EACM6D,EAAS,SAAC7J,EAAOsB,GAEnB,MAAyE,EAAKpY,WAAtE6lB,EAAe,EAAfA,gBAAiBQ,EAAiB,EAAjBA,kBAAmBC,EAAe,EAAfA,gBAAiBC,EAAM,EAANA,OAE7D,GAAKV,GAAoB,EAAKT,eAA9B,CAEA,IAAQ/xB,EAAW+kB,EAAX/kB,OAER,GAAIgzB,GAA+C,OAA1B,EAAKf,iBAM1B,OALA,EAAKA,iBAAmBkB,GAAoBnzB,QAEd,OAA1B,EAAKiyB,mBACe,OAApBgB,QAAgD,IAApBA,GAAsCA,EAAgB,EAAKhB,oBAK/F,EAAKmB,WAAW,IAAKrO,EAAKhB,MAAO/jB,GACjC,EAAKozB,WAAW,IAAKrO,EAAKhB,MAAO/jB,GAOjC,EAAKyM,cAAc4J,SAKR,OAAX6c,QAA8B,IAAXA,GAA6BA,EAAOzP,EAAOsB,EAzBpD,CA0Bd,EACM6I,EAAe,SAACnK,EAAOsB,GAAI,OAAK,EAAKtf,KAAKge,EAAOsB,EAAK,EAC5DzX,KAAK+lB,WAAa,IAAI1G,GAAW0F,EAAa,CAC1CtE,eAAAA,EACAV,QAAAA,EACAC,OAAAA,EACAM,aAAAA,GACD,CAAEzY,mBAAoB7H,KAAKb,cAAc6mB,yBAxFlC,CAyFd,GAAC,kBACD,SAAK7P,EAAOsB,GACR,IAAMiN,EAAa1kB,KAAK0kB,WAExB,GADA1kB,KAAKlE,SACA4oB,EAAL,CAEA,IAAQjxB,EAAagkB,EAAbhkB,SACRuM,KAAKxD,eAAe/I,GACpB,IAAQwyB,EAAcjmB,KAAKX,WAAnB4mB,UACM,OAAdA,QAAoC,IAAdA,GAAgCA,EAAU9P,EAAOsB,EAJ7D,CAKd,GAAC,oBACD,WACI,IAAInf,EAAIC,EACRyH,KAAK0kB,YAAa,EACd1kB,KAAKb,cAAcgU,aACnBnT,KAAKb,cAAcgU,WAAWkS,oBAAqB,GAE5B,QAA1B/sB,EAAK0H,KAAK+lB,kBAA+B,IAAPztB,GAAyBA,EAAG8nB,MAC/DpgB,KAAK+lB,gBAAa53B,GACU6R,KAAKX,WAAzB6lB,iBACgBllB,KAAKykB,iBACzBzkB,KAAKykB,iBACLzkB,KAAKykB,eAAiB,MAEmB,QAA5ClsB,EAAKyH,KAAKb,cAAc+J,sBAAmC,IAAP3Q,GAAyBA,EAAGmf,UAAUrC,GAAc8G,MAAM,EACnH,GAAC,wBACD,SAAWgF,EAAM+E,EAAQxzB,GACrB,IAAQ8X,EAASxK,KAAKX,WAAdmL,KAER,GAAK9X,GAAWyzB,GAAWhF,EAAM3W,EAAMxK,KAAK2kB,kBAA5C,CAEA,IAAMyB,EAAYpmB,KAAKslB,mBAAmBnE,GACtCjuB,EAAO8M,KAAKuhB,YAAYJ,GAAQzuB,EAAOyuB,GAEvCnhB,KAAK4kB,aAAe5kB,KAAK4kB,YAAYzD,KACrCjuB,ENlKZ,SAA0BujB,EAAO,EAAcqO,GAAS,IAArBtuB,EAAG,EAAHA,IAAK1K,EAAG,EAAHA,IASpC,YARYqC,IAARqI,GAAqBigB,EAAQjgB,EAE7BigB,EAAQqO,GAAUt3B,EAAAA,GAAAA,GAAIgJ,EAAKigB,EAAOqO,EAAQtuB,KAAO5K,KAAKE,IAAI2qB,EAAOjgB,QAEpDrI,IAARrC,GAAqB2qB,EAAQ3qB,IAElC2qB,EAAQqO,GAAUt3B,EAAAA,GAAAA,GAAI1B,EAAK2qB,EAAOqO,EAAQh5B,KAAOF,KAAK4K,IAAIigB,EAAO3qB,IAE9D2qB,CACX,CMwJmB4P,CAAiBnzB,EAAM8M,KAAK4kB,YAAYzD,GAAOnhB,KAAK8kB,QAAQ3D,KAEvEiF,EAAUxqB,IAAI1I,EAPJ,CAQd,GAAC,gCACD,WAAqB,WACjB,EAAyC8M,KAAKX,WAAtCinB,EAAe,EAAfA,gBAAiBlE,EAAW,EAAXA,YACjBzU,GAAW3N,KAAKb,cAAcgU,YAAc,CAAC,GAA7CxF,OACF4Y,EAAkBvmB,KAAK4kB,YACzB0B,GAAmBld,EAAYkd,GAC1BtmB,KAAK4kB,cACN5kB,KAAK4kB,YAAc5kB,KAAKwmB,yBAKxBxmB,KAAK4kB,eADL0B,IAAmB3Y,INpJnC,SAAiC8X,EAAW,GAA8B,IAA5B/kB,EAAG,EAAHA,IAAKE,EAAI,EAAJA,KAAMgiB,EAAM,EAANA,OAAQD,EAAK,EAALA,MAC7D,MAAO,CACH9xB,EAAGixB,GAA4B2D,EAAU50B,EAAG+P,EAAM+hB,GAClDxlB,EAAG2kB,GAA4B2D,EAAUtoB,EAAGuD,EAAKkiB,GAEzD,CMgJmC6D,CAAwB9Y,EAAO8X,UAAWa,GAMrEtmB,KAAK8kB,QN7Fb,WAA0D,IAA9B1C,EAAc,UAAH,6CAAGF,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHrxB,EAAGsxB,GAAmBC,EAAa,OAAQ,SAC3CjlB,EAAGglB,GAAmBC,EAAa,MAAO,UAElD,CMkFuBsE,CAAmBtE,GAK9BmE,IAAoBvmB,KAAK4kB,aACzBjX,GACA3N,KAAK4kB,cACJ5kB,KAAK6kB,uBACNpC,IAAS,SAACtB,GACF,EAAKmE,mBAAmBnE,KACxB,EAAKyD,YAAYzD,GNtHrC,SAA+BxT,EAAQiX,GACnC,IAAM+B,EAAsB,CAAC,EAO7B,YANwBx4B,IAApBy2B,EAAYpuB,MACZmwB,EAAoBnwB,IAAMouB,EAAYpuB,IAAMmX,EAAOnX,UAE/BrI,IAApBy2B,EAAY94B,MACZ66B,EAAoB76B,IAAM84B,EAAY94B,IAAM6hB,EAAOnX,KAEhDmwB,CACX,CM6G6CC,CAAsBjZ,EAAO8X,UAAUtE,GAAO,EAAKyD,YAAYzD,IAEhG,GAER,GAAC,mCACD,WACI,MAAmEnhB,KAAKX,WAA/CulB,EAAW,EAA5B0B,gBAA8BO,EAAwB,EAAxBA,yBACtC,IAAKjC,IAAgBxb,EAAYwb,GAC7B,OAAO,EACX,IAAMkC,EAAqBlC,EAAYjuB,SACvC7M,EAAAA,GAAAA,GAAiC,OAAvBg9B,EAA6B,0GACvC,IAAQ3T,EAAenT,KAAKb,cAApBgU,WAER,IAAKA,IAAeA,EAAWxF,OAC3B,OAAO,EACX,IAAMoZ,EDrNd,SAAwB1rB,EAAS2rB,EAAoBnf,GACjD,IAAMof,EAAc9C,GAAmB9oB,EAASwM,GACxCqf,EAAWF,EAAXE,OAKR,OAJIA,IACAxD,GAAcuD,EAAYp2B,EAAGq2B,EAAOx0B,OAAO7B,GAC3C6yB,GAAcuD,EAAY9pB,EAAG+pB,EAAOx0B,OAAOyK,IAExC8pB,CACX,CC6M+BE,CAAeL,EAAoB3T,EAAWoF,KAAMvY,KAAKb,cAAc6mB,yBAC1FoB,EN/JZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACHl2B,EAAGkxB,GAA4B0D,EAAU50B,EAAGk2B,EAAel2B,GAC3DsM,EAAG4kB,GAA4B0D,EAAUtoB,EAAG4pB,EAAe5pB,GAEnE,CM0JkCkqB,CAAwBlU,EAAWxF,OAAO8X,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJvNpC,SAAiC,GAAU,IAARh2B,EAAC,EAADA,EAAGsM,EAAC,EAADA,EAClC,MAAO,CAAEuD,IAAKvD,EAAE3G,IAAKmsB,MAAO9xB,EAAE/E,IAAK82B,OAAQzlB,EAAErR,IAAK8U,KAAM/P,EAAE2F,IAC9D,CIqN6D+wB,CAAwBH,IACzEpnB,KAAK6kB,wBAA0ByC,EAC3BA,IACAF,EAAsB1E,GAAwB4E,GAEtD,CACA,OAAOF,CACX,GAAC,4BACD,SAAe3zB,GAAU,WACrB,EAAoGuM,KAAKX,WAAjGmL,EAAI,EAAJA,KAAMgd,EAAY,EAAZA,aAAcpF,EAAW,EAAXA,YAAaqF,EAAc,EAAdA,eAAgBC,EAAgB,EAAhBA,iBAAkBC,EAAmB,EAAnBA,oBACrE/C,EAAc5kB,KAAK4kB,aAAe,CAAC,EACnCgD,EAAqBnF,IAAS,SAACtB,GACjC,GAAKgF,GAAWhF,EAAM3W,EAAM,EAAKma,kBAAjC,CAGA,IAAIvmB,GAA8B,OAAhBwmB,QAAwC,IAAhBA,OAAyB,EAASA,EAAYzD,KAAU,CAAC,EAC/FuG,IACAtpB,EAAa,CAAE5H,IAAK,EAAG1K,IAAK,IAOhC,IAAMsQ,EAAkBgmB,EAAc,IAAM,IACtC/lB,EAAgB+lB,EAAc,GAAK,IACnClmB,GAAU,gBACZ7P,KAAM,UACNoH,SAAU+zB,EAAe/zB,EAAS0tB,GAAQ,EAC1C/kB,gBAAAA,EACAC,cAAAA,EACA/E,aAAc,IACdhC,UAAW,EACXC,UAAW,IACRkyB,GACArpB,GAKP,OAAO,EAAKypB,wBAAwB1G,EAAMjlB,EA1B1C,CA2BJ,IAEA,OAAOugB,QAAQxD,IAAI2O,GAAoB5I,KAAK2I,EAChD,GAAC,qCACD,SAAwBxG,EAAM/iB,GAC1B,IAAMgoB,EAAYpmB,KAAKslB,mBAAmBnE,GAC1C,OAAOiF,EAAUnuB,OAAMyG,EAAAA,GAAAA,GAA2ByiB,EAAMiF,EAAW,EAAGhoB,GAC1E,GAAC,2BACD,WAAgB,WACZqkB,IAAS,SAACtB,GAAI,OAAK,EAAKmE,mBAAmBnE,GAAMhpB,MAAM,GAC3D,GACA,gCAMA,SAAmBgpB,GACf,IAAI7oB,EACEwvB,EAAU,QAAU3G,EAAKpN,cACzBgU,EAAsB/nB,KAAKb,cAAcE,WAAWyoB,GAC1D,OAAOC,GAED/nB,KAAKb,cAAc6oB,SAAS7G,GAAwD,QAAhD7oB,EAAK0H,KAAKb,cAAcE,WAAW4C,eAA4B,IAAP3J,OAAgB,EAASA,EAAG6oB,KAAU,EAC5I,GAAC,0BACD,SAAa1K,GAAO,WAChBgM,IAAS,SAACtB,GAGN,GAAKgF,GAAWhF,EAFC,EAAK9hB,WAAdmL,KAEoB,EAAKma,kBAAjC,CAEA,IAAQxR,EAAe,EAAKhU,cAApBgU,WACFiT,EAAY,EAAKd,mBAAmBnE,GAC1C,GAAIhO,GAAcA,EAAWxF,OAAQ,CACjC,MAAqBwF,EAAWxF,OAAO8X,UAAUtE,GAAzC3qB,EAAG,EAAHA,IAAK1K,EAAG,EAAHA,IACbs6B,EAAUxqB,IAAI6a,EAAM0K,IAAQ3zB,EAAAA,GAAAA,GAAIgJ,EAAK1K,EAAK,IAC9C,CANU,CAOd,GACJ,GACA,4CAKA,WAAiC,IACzBwM,EADyB,OAE7B,GAAK0H,KAAKb,cAAcxI,QAAxB,CAEA,MAAkCqJ,KAAKX,WAA/BmL,EAAI,EAAJA,KAAM8b,EAAe,EAAfA,gBACNnT,EAAenT,KAAKb,cAApBgU,WACR,GAAK/J,EAAYkd,IAAqBnT,GAAenT,KAAK4kB,YAA1D,CAMA5kB,KAAKilB,gBAKL,IAAMgD,EAAc,CAAEp3B,EAAG,EAAGsM,EAAG,GAC/BslB,IAAS,SAACtB,GACN,IAAMiF,EAAY,EAAKd,mBAAmBnE,GAC1C,GAAIiF,EAAW,CACX,IAAM8B,EAAS9B,EAAU9nB,MACzB2pB,EAAY9G,GNtQ5B,SAAoBn3B,EAAQI,GACxB,IAAIsD,EAAS,GACPy6B,EAAejH,GAAWl3B,GAC1Bo+B,EAAelH,GAAW92B,GAOhC,OANIg+B,EAAeD,EACfz6B,GAASuC,EAAAA,GAAAA,GAAS7F,EAAOoM,IAAKpM,EAAO0B,IAAMq8B,EAAcn+B,EAAOwM,KAE3D2xB,EAAeC,IACpB16B,GAASuC,EAAAA,GAAAA,GAASjG,EAAOwM,IAAKxM,EAAO8B,IAAMs8B,EAAch+B,EAAOoM,OAE7D7G,EAAAA,GAAAA,GAAM,EAAG,EAAGjC,EACvB,CM2PoCwjB,CAAW,CAAE1a,IAAK0xB,EAAQp8B,IAAKo8B,GAAU,EAAKtD,YAAYzD,GAClF,CACJ,IAIA,IAAQ7S,EAAsBtO,KAAKb,cAAcE,WAAzCiP,kBACRtO,KAAKb,cAAcxI,QAAQ6K,MAAM2M,UAAYG,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACqB,QAA1BhW,EAAK6a,EAAWoF,YAAyB,IAAPjgB,GAAyBA,EAAG+vB,eAC/DlV,EAAWmV,eACXtoB,KAAKolB,qBAKL3C,IAAS,SAACtB,GACN,GAAKgF,GAAWhF,EAAM3W,EAAM,MAA5B,CAKA,IAAM4b,EAAY,EAAKd,mBAAmBnE,GAC1C,EAAqB,EAAKyD,YAAYzD,GAA9B3qB,EAAG,EAAHA,IAAK1K,EAAG,EAAHA,IACbs6B,EAAUxqB,KAAIpO,EAAAA,GAAAA,GAAIgJ,EAAK1K,EAAKm8B,EAAY9G,IAN9B,CAOd,GAzCU,CAJA,CA8Cd,GAAC,0BACD,WAAe,IACP7oB,EADO,OAEX,GAAK0H,KAAKb,cAAcxI,QAAxB,CAEA4tB,GAAoB3oB,IAAIoE,KAAKb,cAAea,MAC5C,IAIMuoB,EAAsB5R,GAJZ3W,KAAKb,cAAcxI,QAIkB,eAAe,SAACwf,GACjE,MAAsC,EAAK9W,WAAnCmL,EAAI,EAAJA,KAAI,IAAE2F,aACd3F,SAD0B,IAAG,GAAI,IACT,EAAKvS,MAAMke,EACvC,IACMqS,EAAyB,WAEvBpf,EADwB,EAAK/J,WAAzBinB,mBAEJ,EAAK1B,YAAc,EAAK4B,wBAEhC,EACQrT,EAAenT,KAAKb,cAApBgU,WACFsV,EAA4BtV,EAAW4C,iBAAiB,UAAWyS,GACrErV,IAAeA,EAAWxF,SACC,QAA1BrV,EAAK6a,EAAWoF,YAAyB,IAAPjgB,GAAyBA,EAAG+vB,eAC/DlV,EAAWmV,gBAEfE,IAKA,IAAME,EAAqB/S,GAAY9P,OAAQ,UAAU,kBAAM,EAAK8iB,gCAAgC,IAK9FC,EAA2BzV,EAAW4C,iBAAiB,aAAc,YAAiC,IAA9BhiB,EAAK,EAALA,MAAO80B,EAAgB,EAAhBA,iBAC7E,EAAKnE,YAAcmE,IACnBpG,IAAS,SAACtB,GACN,IAAM2H,EAAc,EAAKxD,mBAAmBnE,GACvC2H,IAEL,EAAKvH,YAAYJ,IAASptB,EAAMotB,GAAMK,UACtCsH,EAAYltB,IAAIktB,EAAYxqB,MAAQvK,EAAMotB,GAAMK,WACpD,IACA,EAAKriB,cAAc4J,SAE3B,IACA,OAAO,WACH2f,IACAH,IACAE,IAC6B,OAA7BG,QAAkE,IAA7BA,GAA+CA,GACxF,CAjDU,CAkDd,GAAC,sBACD,WACI,IAAM3oB,EAAQD,KAAKb,cAAcE,WACjC,EAA0JY,EAAlJuK,KAAAA,OAAI,IAAG,GAAK,IAAsIvK,EAApIylB,kBAAAA,OAAiB,IAAG,GAAK,IAA2GzlB,EAAzGilB,gBAAAA,OAAe,IAAG,GAAK,IAAkFjlB,EAAhFqmB,gBAAAA,OAAe,IAAG,GAAK,IAAyDrmB,EAAvDmiB,YAAAA,OAAW,IAAG,EAAAF,GAAc,IAA2BjiB,EAAzBunB,aAAAA,OAAY,IAAG,GAAI,EACpJ,OAAO,kBACAvnB,GAAK,IACRuK,KAAAA,EACAkb,kBAAAA,EACAR,gBAAAA,EACAoB,gBAAAA,EACAlE,YAAAA,EACAoF,aAAAA,GAER,KAAC,EApZ0B,GAsZ/B,SAASrB,GAAW3qB,EAAWgP,EAAMma,GACjC,QAAkB,IAATna,GAAiBA,IAAShP,KACT,OAArBmpB,GAA6BA,IAAqBnpB,EAC3D,CAQA,SAASqqB,GAAoBnzB,GAA4B,IAApBq2B,EAAgB,UAAH,6CAAG,GAC7CvtB,EAAY,KAOhB,OANI5P,KAAKsF,IAAIwB,EAAOyK,GAAK4rB,EACrBvtB,EAAY,IAEP5P,KAAKsF,IAAIwB,EAAO7B,GAAKk4B,IAC1BvtB,EAAY,KAETA,CACX,CE7bA,IAAMgP,GAAO,CACTI,IAAKqP,ICaT,SAAuB,GAAoE,IAAlE+O,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAAUC,EAAiB,EAAjBA,kBAAmBhqB,EAAa,EAAbA,cAC/DiqB,EAAeJ,GAASC,GAAcC,GAAYC,EAClDpD,GAAa3kB,EAAAA,EAAAA,QAAO,MAClByG,GAAuBpE,EAAAA,EAAAA,YAAWmE,GAAlCC,mBACFyX,EAAW,CACbmB,eAAgB0I,EAChBpJ,QAASkJ,EACTjJ,OAAQgJ,EACR3I,MAAO,SAAClK,EAAOsB,GACXsO,EAAWpvB,QAAU,KACrBuyB,GAAYA,EAAS/S,EAAOsB,EAChC,IAEJxO,EAAAA,EAAAA,YAAU,WACqB,OAAvB8c,EAAWpvB,SACXovB,EAAWpvB,QAAQ0yB,eAAe/J,EAE1C,IAMA1I,GAAgBzX,EAAe,cAAeiqB,GAL9C,SAAuBjT,GACnB4P,EAAWpvB,QAAU,IAAI0oB,GAAWlJ,EAAOmJ,EAAU,CACjDzX,mBAAAA,GAER,IAEApD,EAAAA,GAAAA,IAAiB,kBAAMshB,EAAWpvB,SAAWovB,EAAWpvB,QAAQypB,KAAK,GACzE,IDrCI5V,KAAMyP,IEGV,SAAiBha,GACb,IAAsBqpB,EAAqCrpB,EAAnDspB,aAAiCpqB,EAAkBc,EAAlBd,cACnCoqB,GAAehnB,EAAAA,EAAAA,IAAY,kBAAM,IAAIiiB,GAA0BrlB,EAAc,KAGnF8J,EAAAA,EAAAA,YAAU,kBAAMqgB,GAAqBA,EAAkBxK,UAAUyK,EAAa,GAAE,CAACA,EAAcD,KAE/FrgB,EAAAA,EAAAA,YAAU,kBAAMsgB,EAAaC,cAAc,GAAE,CAACD,GAClD,K,sBCfA,SAAStb,GAAczb,GACnB,MAAwB,kBAAVA,GAAsBA,EAAM0L,WAAW,SACzD,CAUA,IAAMurB,GAAmB,uDACzB,SAASC,GAAiB/yB,GACtB,IAAMgzB,EAAQF,GAAiBG,KAAKjzB,GACpC,IAAKgzB,EACD,MAAO,CAAC,GACZ,eAA4BA,EAAK,GACjC,MAAO,CADO,KAAU,KAE5B,CAEA,SAASE,GAAiBlzB,EAAS0E,GAAoB,IAAXyuB,EAAQ,UAAH,6CAAG,GAChDhgC,EAAAA,GAAAA,GAAUggC,GAFG,EAEgB,yDAAF,OAA2DnzB,EAAO,yDAC7F,MAA0B+yB,GAAiB/yB,GAAQ,gBAA5CozB,EAAK,KAAE/P,EAAQ,KAEtB,GAAK+P,EAAL,CAGA,IAAM9U,EAAWpP,OAAOmkB,iBAAiB3uB,GAAS4uB,iBAAiBF,GACnE,OAAI9U,EACOA,EAAS5F,OAEXpB,GAAc+L,GAEZ6P,GAAiB7P,EAAU3e,EAASyuB,EAAQ,GAG5C9P,CAXD,CAad,CAMA,SAASkQ,GAAoB/qB,EAAe,EAAegW,GAAe,IAAzB/qB,EAAM,kBC/CxC,SAAmC+/B,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,sBAAwBD,EAC/D,CD6CuD,QAC7C9uB,EAAU8D,EAAcxI,QAC9B,KAAM0E,aAAmBX,SACrB,MAAO,CAAEtQ,OAAAA,EAAQ+qB,cAAAA,GAiBrB,IAAK,IAAMjrB,KAdPirB,IACAA,GAAgB,UAAKA,IAGzBhW,EAAcvQ,OAAOkU,SAAQ,SAACtQ,GAC1B,IAAMmE,EAAUnE,EAAM8L,MACtB,GAAK2P,GAActX,GAAnB,CAEA,IAAMse,EAAW4U,GAAiBlzB,EAAS0E,GACvC4Z,GACAziB,EAAMoJ,IAAIqZ,EAHJ,CAId,IAGkB7qB,EAAQ,CACtB,IAAMuM,EAAUvM,EAAOF,GACvB,GAAK+jB,GAActX,GAAnB,CAEA,IAAMse,EAAW4U,GAAiBlzB,EAAS0E,GACtC4Z,IAGL7qB,EAAOF,GAAO+qB,EAIVE,QAAwChnB,IAAvBgnB,EAAcjrB,KAC/BirB,EAAcjrB,GAAOyM,GAVb,CAYhB,CACA,MAAO,CAAEvM,OAAAA,EAAQ+qB,cAAAA,EACrB,C,IE7DIkV,G,sBAfEC,GAAiB,IAAIxvB,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEEyvB,GAAkB,SAACrgC,GAAG,OAAKogC,GAAervB,IAAI/Q,EAAI,EAIlDsgC,GAAgB,SAAC9+B,GAAC,OAAKA,IAAM++B,GAAAA,IAAU/+B,IAAMylB,GAAAA,EAAE,GAErD,SAAWkZ,GACPA,EAA4B,MAAI,QAChCA,EAA6B,OAAI,SACjCA,EAA2B,KAAI,OAC/BA,EAA4B,MAAI,QAChCA,EAA0B,IAAI,MAC9BA,EAA6B,OAAI,QACpC,CAPD,CAOGA,KAAyBA,GAAuB,CAAC,IACpD,IAAMK,GAAmB,SAACC,EAAQC,GAAG,OAAKhrB,WAAW+qB,EAAOE,MAAM,MAAMD,GAAK,EACvEE,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAO,GAAkB,IAAhB9c,EAAS,EAATA,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAM+c,EAAW/c,EAAUwb,MAAM,sBACjC,GAAIuB,EACA,OAAOR,GAAiBQ,EAAS,GAAIF,GAGrC,IAAML,EAASxc,EAAUwb,MAAM,oBAC/B,OAAIgB,EACOD,GAAiBC,EAAO,GAAII,GAG5B,CAGnB,CAAC,EACKvc,GAAgB,IAAI1T,IAAI,CAAC,IAAK,IAAK,MACnCqwB,GAAgCnd,EAAAA,EAAAA,QAA0B,SAAC9jB,GAAG,OAAMskB,GAAcvT,IAAI/Q,EAAI,IAChG,SAASkhC,GAAgCjsB,GACrC,IAAMksB,EAAoB,GAW1B,OAVAF,GAA8BroB,SAAQ,SAAC5Y,GACnC,IAAMsI,EAAQ2M,EAAc6oB,SAAS99B,QACvBiE,IAAVqE,IACA64B,EAAkB77B,KAAK,CAACtF,EAAKsI,EAAM8L,QACnC9L,EAAMoJ,IAAI1R,EAAIgU,WAAW,SAAW,EAAI,GAEhD,IAEImtB,EAAkB7gC,QAClB2U,EAAc4J,SACXsiB,CACX,CACA,IAAMC,GAAmB,CAErB9qB,MAAO,kBAAG3P,EAAC,EAADA,EAAC,IAAM06B,YAAAA,OAAW,IAAG,MAAG,MAAEC,aAAAA,OAAY,IAAG,MAAG,SAAO36B,EAAE/E,IAAM+E,EAAE2F,IAAMoJ,WAAW2rB,GAAe3rB,WAAW4rB,EAAa,EAC/HlrB,OAAQ,kBAAGnD,EAAC,EAADA,EAAC,IAAMsuB,WAAAA,OAAU,IAAG,MAAG,MAAEC,cAAAA,OAAa,IAAG,MAAG,SAAOvuB,EAAErR,IAAMqR,EAAE3G,IAAMoJ,WAAW6rB,GAAc7rB,WAAW8rB,EAAc,EAChIhrB,IAAK,SAACuqB,EAAO,GAAF,IAAIvqB,EAAG,EAAHA,IAAG,OAAOd,WAAWc,EAAI,EACxCE,KAAM,SAACqqB,EAAO,GAAF,IAAIrqB,EAAI,EAAJA,KAAI,OAAOhB,WAAWgB,EAAK,EAC3CgiB,OAAQ,kBAAGzlB,EAAC,EAADA,EAAOuD,EAAG,EAAHA,IAAG,OAAOd,WAAWc,IAAQvD,EAAErR,IAAMqR,EAAE3G,IAAI,EAC7DmsB,MAAO,kBAAG9xB,EAAC,EAADA,EAAO+P,EAAI,EAAJA,KAAI,OAAOhB,WAAWgB,IAAS/P,EAAE/E,IAAM+E,EAAE2F,IAAI,EAE9D3F,EAAGi6B,GAAuB,EAAG,IAC7B3tB,EAAG2tB,GAAuB,EAAG,KAE3Ba,GAA2B,SAACvhC,EAAQ+U,EAAeysB,GACrD,IAAMC,EAAa1sB,EAAcglB,qBAC3B9oB,EAAU8D,EAAcxI,QACxBm1B,EAAuB9B,iBAAiB3uB,GACtC0wB,EAAYD,EAAZC,QACFr+B,EAAS,CAAC,EAGA,SAAZq+B,GACA5sB,EAAc6sB,eAAe,UAAW5hC,EAAO2hC,SAAW,SAK9DH,EAAY9oB,SAAQ,SAAC5Y,GACjBwD,EAAOxD,GAAOohC,GAAiBphC,GAAK2hC,EAAYC,EACpD,IAEA3sB,EAAc4J,SACd,IAAMkjB,EAAa9sB,EAAcglB,qBAQjC,OAPAyH,EAAY9oB,SAAQ,SAAC5Y,GAGjB,IAAMsI,EAAQ2M,EAAc6oB,SAAS99B,GACrCsI,GAASA,EAAM05B,KAAKx+B,EAAOxD,IAC3BE,EAAOF,GAAOohC,GAAiBphC,GAAK+hC,EAAYH,EACpD,IACO1hC,CACX,EAmHA,SAAS+hC,GAAehtB,EAAe/U,EAAQsD,EAAQynB,GACnD,OA3MqB,SAAC/qB,GACtB,OAAOC,OAAO8K,KAAK/K,GAAQgL,KAAKm1B,GACpC,CAyMW6B,CAAiBhiC,GAnHa,SAAC+U,EAAe/U,GAA4C,IAApCsD,EAAS,UAAH,6CAAG,CAAC,EAAGynB,EAAgB,UAAH,6CAAG,CAAC,EAC3F/qB,GAAS,UAAKA,GACd+qB,GAAgB,UAAKA,GACrB,IAAMkX,EAAuBhiC,OAAO8K,KAAK/K,GAAQkiC,OAAO/B,IAGpDgC,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GA4E7B,GA3EAJ,EAAqBvpB,SAAQ,SAAC5Y,GAC1B,IAAMsI,EAAQ2M,EAAc6oB,SAAS99B,GACrC,GAAKiV,EAAcutB,SAASxiC,GAA5B,CAEA,IAGIyiC,EAHAnhC,EAAOkC,EAAOxD,GACd0iC,GAAWC,EAAAA,GAAAA,GAAuBrhC,GAChCC,EAAKrB,EAAOF,GAMlB,IAAIqV,EAAAA,GAAAA,GAAkB9T,GAAK,CACvB,IAAMqhC,EAAerhC,EAAGjB,OAClBuiC,EAAsB,OAAVthC,EAAG,GAAc,EAAI,EACvCD,EAAOC,EAAGshC,GACVH,GAAWC,EAAAA,GAAAA,GAAuBrhC,GAClC,IAAK,IAAIrB,EAAI4iC,EAAW5iC,EAAI2iC,EAAc3iC,IACjCwiC,GAMD7iC,EAAAA,GAAAA,IAAU+iC,EAAAA,GAAAA,GAAuBphC,EAAGtB,MAAQwiC,EAAQ,2CALpDA,GAASE,EAAAA,GAAAA,GAAuBphC,EAAGtB,KACnCL,EAAAA,GAAAA,GAAU6iC,IAAWC,GAChBpC,GAAcoC,IAAapC,GAAcmC,GAAU,gEAMpE,MAEIA,GAASE,EAAAA,GAAAA,GAAuBphC,GAEpC,GAAImhC,IAAaD,EAGb,GAAInC,GAAcoC,IAAapC,GAAcmC,GAAS,CAClD,IAAMh2B,EAAUnE,EAAM8L,MACC,kBAAZ3H,GACPnE,EAAMoJ,IAAIgE,WAAWjJ,IAEP,kBAAPlL,EACPrB,EAAOF,GAAO0V,WAAWnU,GAEpB0D,MAAMC,QAAQ3D,IAAOkhC,IAAWxb,GAAAA,KACrC/mB,EAAOF,GAAOuB,EAAGuC,IAAI4R,YAE7B,MACuB,OAAbgtB,QAAkC,IAAbA,OAAsB,EAASA,EAASze,aACvD,OAAXwe,QAA8B,IAAXA,OAAoB,EAASA,EAAOxe,aAC9C,IAAT3iB,GAAqB,IAAPC,GAGF,IAATD,EACAgH,EAAMoJ,IAAI+wB,EAAOxe,UAAU3iB,IAG3BpB,EAAOF,GAAO0iC,EAASze,UAAU1iB,IAMhC+gC,IACDD,EACInB,GAAgCjsB,GACpCqtB,GAAsC,GAE1CC,EAAqBj9B,KAAKtF,GAC1BirB,EAAcjrB,QACaiE,IAAvBgnB,EAAcjrB,GACRirB,EAAcjrB,GACdE,EAAOF,GACjBsI,EAAM05B,KAAKzgC,GApET,CAuEd,IACIghC,EAAqBjiC,OAAQ,CAC7B,IAAMwiC,EAAUP,EAAqBhiC,QAAQ,WAAa,EACpDob,OAAOonB,YACP,KACAC,EAAkBvB,GAAyBvhC,EAAQ+U,EAAestB,GAaxE,OAXIF,EAAuB/hC,QACvB+hC,EAAuBzpB,SAAQ,YAAkB,oBAAhB5Y,EAAG,KAAEsI,EAAK,KACvC2M,EAAc6oB,SAAS99B,GAAK0R,IAAIpJ,EACpC,IAGJ2M,EAAc4J,SAEVuD,EAAAA,GAAyB,OAAZ0gB,GACbnnB,OAAOsnB,SAAS,CAAEzsB,IAAKssB,IAEpB,CAAE5iC,OAAQ8iC,EAAiB/X,cAAAA,EACtC,CAEI,MAAO,CAAE/qB,OAAAA,EAAQ+qB,cAAAA,EAEzB,CAUUiY,CAAiCjuB,EAAe/U,EAAQsD,EAAQynB,GAChE,CAAE/qB,OAAAA,EAAQ+qB,cAAAA,EACpB,CC1NA,ICNMkY,GAAuB,CAAE12B,QAAS,MAClC22B,GAA2B,CAAE32B,SAAS,G,yECkBtC42B,GAAeljC,OAAO8K,KAAKkV,GAC3BmjB,GAAcD,GAAa/iC,OAC3BijC,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMEC,GAAa,WACf,cAAgF,WAAlEnlB,EAAM,EAANA,OAAQtI,EAAK,EAALA,MAAOyI,EAAmB,EAAnBA,oBAAqBL,EAAW,EAAXA,YAAgBnT,EAAU,UAAH,6CAAG,CAAC,GAAC,eAK1E8K,KAAKrJ,QAAU,KAIfqJ,KAAKc,SAAW,IAAIhG,IAIpBkF,KAAK0J,eAAgB,EACrB1J,KAAKwJ,uBAAwB,EAQ7BxJ,KAAK2tB,mBAAqB,KAM1B3tB,KAAKpR,OAAS,IAAIqU,IAKlBjD,KAAKG,WAAY,EAKjBH,KAAK4tB,mBAAqB,IAAI3qB,IAM9BjD,KAAK6tB,iBAAmB,CAAC,EAIzB7tB,KAAK8tB,OAAS,CAAC,EAMf9tB,KAAK+tB,uBAAyB,CAAC,EAC/B/tB,KAAKguB,aAAe,kBAAM,EAAKC,OAAO,SAAU,EAAK5f,aAAa,EAClErO,KAAK+I,OAAS,WACL,EAAKpS,UAEV,EAAKu3B,eACL,EAAKC,eAAe,EAAKx3B,QAAS,EAAK6c,YAAa,EAAKvT,MAAMuB,MAAO,EAAK2R,YAC/E,EACAnT,KAAKouB,eAAiB,kBAAMl2B,GAAAA,GAAAA,OAAY,EAAK6Q,QAAQ,GAAO,EAAK,EACjE,IAAQsF,EAA8BhG,EAA9BgG,aAAcmF,EAAgBnL,EAAhBmL,YACtBxT,KAAKqO,aAAeA,EACpBrO,KAAKquB,YAAa,UAAKhgB,GACvBrO,KAAKsuB,cAAgBruB,EAAMgC,SAAU,UAAKoM,GAAiB,CAAC,EAC5DrO,KAAKwT,YAAcA,EACnBxT,KAAKuI,OAASA,EACdvI,KAAKC,MAAQA,EACbD,KAAK8pB,MAAQvhB,EAASA,EAAOuhB,MAAQ,EAAI,EACzC9pB,KAAK0I,oBAAsBA,EAC3B1I,KAAK9K,QAAUA,EACf8K,KAAKwJ,sBAAwBA,EAAsBvJ,GACnDD,KAAK0J,cAAgBA,EAAczJ,GAC/BD,KAAK0J,gBACL1J,KAAK0e,gBAAkB,IAAI5jB,KAE/BkF,KAAKyd,uBAAyBjxB,QAAQ+b,GAAUA,EAAO5R,SAWvD,MAA+CqJ,KAAK4T,4BAA4B3T,EAAO,CAAC,GAAhFsuB,EAAU,EAAVA,WAAeC,GAAmB,cAC1C,IAAK,IAAMtkC,KAAOskC,EAAqB,CACnC,IAAMh8B,EAAQg8B,EAAoBtkC,QACRiE,IAAtBkgB,EAAankB,KAAsB0lB,EAAAA,EAAAA,GAAcpd,KACjDA,EAAMoJ,IAAIyS,EAAankB,IAAM,IACzBukC,EAAAA,GAAAA,GAAwBF,IACxBA,EAAWzpB,IAAI5a,GAG3B,CACJ,CAmVC,OAlVD,mDAOA,SAA4BwkC,EAAQC,GAChC,MAAO,CAAC,CACZ,GAAC,mBACD,SAAMhiB,GAAU,IACRrU,EADQ,OAEZ0H,KAAKrJ,QAAUgW,EACX3M,KAAKmT,YACLnT,KAAKmT,WAAWvG,MAAMD,GAEtB3M,KAAKuI,QAAUvI,KAAK0J,gBAAkB1J,KAAKwJ,wBAC3CxJ,KAAK4uB,sBAA+C,QAAtBt2B,EAAK0H,KAAKuI,cAA2B,IAAPjQ,OAAgB,EAASA,EAAGu2B,gBAAgB7uB,OAE5GA,KAAKpR,OAAOkU,SAAQ,SAACtQ,EAAOtI,GAAG,OAAK,EAAK4kC,kBAAkB5kC,EAAKsI,EAAM,IACjE86B,GAAyB32B,SCzJtC,WAEI,GADA22B,GAAyB32B,SAAU,EAC9B2V,EAAAA,EAEL,GAAIzG,OAAOkpB,WAAY,CACnB,IAAMC,EAAmBnpB,OAAOkpB,WAAW,4BACrCE,EAA8B,WAAH,OAAU5B,GAAqB12B,QAAUq4B,EAAiBE,OAAO,EAClGF,EAAiBG,YAAYF,GAC7BA,GACJ,MAEI5B,GAAqB12B,SAAU,CAEvC,CD6IYy4B,GAEJpvB,KAAK2tB,mBAC4B,UAA7B3tB,KAAK0I,sBAE8B,WAA7B1I,KAAK0I,qBAED2kB,GAAqB12B,SAI/BqJ,KAAKuI,QACLvI,KAAKuI,OAAOzH,SAASgE,IAAI9E,MAC7BA,KAAKkL,SAASlL,KAAKC,MACvB,GAAC,qBACD,WACI,IAAI3H,EAAIC,EAAI2iB,EAOZ,IAAK,IAAMhxB,KANgB,QAA1BoO,EAAK0H,KAAKmT,kBAA+B,IAAP7a,GAAyBA,EAAGuU,UAC/DzU,GAAAA,GAAAA,OAAkB4H,KAAKguB,cACvB51B,GAAAA,GAAAA,OAAkB4H,KAAK+I,QACvB/I,KAAK4tB,mBAAmB9qB,SAAQ,SAACusB,GAAM,OAAKA,GAAQ,IACd,QAArC92B,EAAKyH,KAAK4uB,6BAA0C,IAAPr2B,GAAyBA,EAAG3N,KAAKoV,MACxD,QAAtBkb,EAAKlb,KAAKuI,cAA2B,IAAP2S,GAAyBA,EAAGpa,SAAS+B,OAAO7C,MACzDA,KAAK8tB,OACnB9tB,KAAK8tB,OAAO5jC,GAAKwa,QAErB1E,KAAKrJ,QAAU,IACnB,GAAC,+BACD,SAAkBzM,EAAKsI,GAAO,WACpB88B,EAAmB1hB,EAAAA,EAAAA,IAAmB1jB,GACtCqlC,EAAiB/8B,EAAMg9B,GAAG,UAAU,SAACC,GACvC,EAAKphB,aAAankB,GAAOulC,EACzB,EAAKxvB,MAAM5G,UACPnB,GAAAA,GAAAA,OAAY,EAAK81B,cAAc,GAAO,GACtCsB,GAAoB,EAAKnc,aACzB,EAAKA,WAAWuc,kBAAmB,EAE3C,IACMC,EAAwBn9B,EAAMg9B,GAAG,gBAAiBxvB,KAAKouB,gBAC7DpuB,KAAK4tB,mBAAmBhyB,IAAI1R,GAAK,WAC7BqlC,IACAI,GACJ,GACJ,GAAC,8BACD,SAAiBC,GAIb,OAAK5vB,KAAKrJ,SACLqJ,KAAK6vB,0BACN7vB,KAAK3T,OAASujC,EAAMvjC,KAEjB2T,KAAK6vB,yBAAyB7vB,KAAKrJ,QAASi5B,EAAMj5B,SAD9C,CAEf,GAAC,0BACD,WAA6Cm5B,EAAUrkB,EAAmBY,EAAc0jB,EAA2BvjB,GAA0B,WAAjHwjB,GAAL,EAARlvB,UAA0B,eAC/B+K,EAAW,GAUjB,IAAK,IAAI1hB,EAAI,EAAGA,EAAIqjC,GAAarjC,IAAK,CAClC,IAAMsf,EAAO8jB,GAAapjC,GAC1B,EAAiCkgB,EAAmBZ,GAA5CW,EAAS,EAATA,UAAWhC,EAAS,EAATA,UAMfgC,EAAU4lB,IAAkB5nB,GAC5ByD,EAASrc,MAAKkS,EAAAA,EAAAA,eAAc0G,GAAW,gBACnCle,IAAKuf,GACFumB,GAAa,IAChB7wB,cAAea,QAG3B,CACA,IAAKA,KAAKmT,YAAc4c,EAA2B,CAC/C/vB,KAAKmT,WAAa,IAAI4c,EAA0B1jB,EAAcrM,KAAKqO,aAAcrO,KAAKuI,QAAUvI,KAAKuI,OAAO4K,YAC5G,IAAQhH,EAAuE6jB,EAAvE7jB,SAAUwB,EAA6DqiB,EAA7DriB,OAAQnD,EAAqDwlB,EAArDxlB,KAAM8b,EAA+C0J,EAA/C1J,gBAAiB2J,EAA8BD,EAA9BC,aAAcC,EAAgBF,EAAhBE,WAC/DlwB,KAAKmT,WAAWgd,WAAW,CACvBhkB,SAAAA,EACAwB,OAAAA,EACAyiB,oBAAqB5jC,QAAQge,IACxB8b,GAAmBld,EAAYkd,GACpCnnB,cAAea,KACfouB,eAAgB,kBAAM,EAAKA,gBAAgB,EAQ3CiC,cAAiC,kBAAX1iB,EAAsBA,EAAS,OACrD2iB,uBAAwB9jB,EACxByjB,aAAAA,EACAC,WAAAA,GAER,CACA,OAAOrkB,CACX,GAAC,0BACD,WACI7L,KAAKuwB,MAAMvwB,KAAKwT,YAAaxT,KAAKqO,aAAcrO,KAAK9K,QAAS8K,KAAKC,MACvE,GACA,gCAKA,WACI,OAAOD,KAAKrJ,QACNqJ,KAAKwwB,2BAA2BxwB,KAAKrJ,QAASqJ,KAAKC,OTtQxC,CACrBpP,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,GSyQrC,GAAC,4BACD,SAAe5B,GACX,OAAO8V,KAAKqO,aAAankB,EAC7B,GAAC,4BACD,SAAeA,EAAKsI,GAChBwN,KAAKqO,aAAankB,GAAOsI,CAC7B,GACA,kCAOA,SAAqBpI,GAA0B,IAAlBqmC,IAAY,UAAH,+CAClC,OAAOzwB,KAAK0wB,iCAAiCtmC,EAAQ4V,KAAKC,MAAOwwB,EACrE,GACA,sBAIA,SAASxwB,IACDA,EAAMqO,mBAAqBtO,KAAKC,MAAMqO,oBACtCtO,KAAKouB,iBAET,IAAMruB,EAAYC,KAAKC,MACvBD,KAAKC,MAAQA,EAIb,IAAK,IAAI9V,EAAI,EAAGA,EAAIsjC,GAAkBjjC,OAAQL,IAAK,CAC/C,IAAMD,EAAMujC,GAAkBtjC,GAC1B6V,KAAK+tB,uBAAuB7jC,KAC5B8V,KAAK+tB,uBAAuB7jC,YACrB8V,KAAK+tB,uBAAuB7jC,IAEvC,IAAMymC,EAAW1wB,EAAM,KAAO/V,GAC1BymC,IACA3wB,KAAK+tB,uBAAuB7jC,GAAO8V,KAAKwvB,GAAGtlC,EAAKymC,GAExD,CACA3wB,KAAK6tB,iBEvTb,SAAqCxyB,EAASnI,EAAMwJ,GAChD,IAAQ6xB,EAAer7B,EAAfq7B,WACR,IAAK,IAAMrkC,KAAOgJ,EAAM,CACpB,IAAM09B,EAAY19B,EAAKhJ,GACjB2mC,EAAYn0B,EAAKxS,GACvB,IAAI0lB,EAAAA,EAAAA,GAAcghB,GAKdv1B,EAAQy1B,SAAS5mC,EAAK0mC,IAClBnC,EAAAA,GAAAA,GAAwBF,IACxBA,EAAWzpB,IAAI5a,QAUlB,IAAI0lB,EAAAA,EAAAA,GAAcihB,GAKnBx1B,EAAQy1B,SAAS5mC,GAAK4+B,EAAAA,GAAAA,GAAY8H,EAAW,CAAEl1B,MAAOL,MAClDozB,EAAAA,GAAAA,GAAwBF,IACxBA,EAAWc,OAAOnlC,QAGrB,GAAI2mC,IAAcD,EAMnB,GAAIv1B,EAAQqxB,SAASxiC,GAAM,CACvB,IAAM6mC,EAAgB11B,EAAQ2sB,SAAS99B,IAEtC6mC,EAAcC,aAAeD,EAAcn1B,IAAIg1B,EACpD,KACK,CACD,IAAMnB,EAAcp0B,EAAQ41B,eAAe/mC,GAC3CmR,EAAQy1B,SAAS5mC,GAAK4+B,EAAAA,GAAAA,QAA4B36B,IAAhBshC,EAA4BA,EAAcmB,EAAW,CAAEl1B,MAAOL,IACpG,CAER,CAEA,IAAK,IAAMnR,KAAOwS,OACIvO,IAAd+E,EAAKhJ,IACLmR,EAAQ61B,YAAYhnC,GAE5B,OAAOgJ,CACX,CFgQgCi+B,CAA4BnxB,KAAMA,KAAK4T,4BAA4B3T,EAAOF,GAAYC,KAAK6tB,kBAC/G7tB,KAAKoxB,wBACLpxB,KAAKoxB,wBAEb,GAAC,sBACD,WACI,OAAOpxB,KAAKC,KAChB,GACA,wBAGA,SAAWwJ,GACP,IAAInR,EACJ,OAAsC,QAA9BA,EAAK0H,KAAKC,MAAM0J,gBAA6B,IAAPrR,OAAgB,EAASA,EAAGmR,EAC9E,GACA,kCAGA,WACI,OAAOzJ,KAAKC,MAAM7B,UACtB,GAAC,mCACD,WACI,OAAO4B,KAAKC,MAAM4H,kBACtB,GAAC,mCACD,WACI,IAAIvP,EACJ,OAAO0H,KAAK0J,cAAgB1J,KAA8B,QAAtB1H,EAAK0H,KAAKuI,cAA2B,IAAPjQ,OAAgB,EAASA,EAAG+4B,uBAClG,GAAC,+BACD,WAAyC,IACjC/4B,EAAIC,EADM+4B,EAAgB,UAAH,8CAE3B,GAAIA,EACA,OAA8B,QAAtBh5B,EAAK0H,KAAKuI,cAA2B,IAAPjQ,OAAgB,EAASA,EAAG2kB,oBACtE,IAAKjd,KAAKwJ,sBAAuB,CAC7B,IAAM/G,GAAkC,QAAtBlK,EAAKyH,KAAKuI,cAA2B,IAAPhQ,OAAgB,EAASA,EAAG0kB,sBAAwB,CAAC,EAIrG,YAH2B9uB,IAAvB6R,KAAKC,MAAMgC,UACXQ,EAAQR,QAAUjC,KAAKC,MAAMgC,SAE1BQ,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACRtY,EAAI,EAAGA,EAAIonC,GAAiBpnC,IAAK,CACtC,IAAMsf,EAAOF,GAAapf,GACpB6f,EAAOhK,KAAKC,MAAMwJ,IACpBJ,EAAeW,KAAkB,IAATA,KACxBvH,EAAQgH,GAAQO,EAExB,CACA,OAAOvH,CACX,GACA,6BAGA,SAAgBU,GACZ,IAAI7K,EACEk5B,EAAqBxxB,KAAKqxB,wBAChC,GAAIG,EAEA,OAD8C,QAA7Cl5B,EAAKk5B,EAAmB9S,uBAAoC,IAAPpmB,GAAyBA,EAAGwM,IAAI3B,GAC/E,kBAAMquB,EAAmB9S,gBAAgB7b,OAAOM,EAAM,CAErE,GACA,sBAGA,SAASjZ,EAAKsI,GAENA,IAAUwN,KAAKpR,OAAO0P,IAAIpU,KAC1B8V,KAAKkxB,YAAYhnC,GACjB8V,KAAK8uB,kBAAkB5kC,EAAKsI,IAEhCwN,KAAKpR,OAAOgN,IAAI1R,EAAKsI,GACrBwN,KAAKqO,aAAankB,GAAOsI,EAAM8L,KACnC,GACA,yBAGA,SAAYpU,GACR,IAAIoO,EACJ0H,KAAKpR,OAAOiU,OAAO3Y,GACyB,QAA3CoO,EAAK0H,KAAK4tB,mBAAmBtvB,IAAIpU,UAAyB,IAAPoO,GAAyBA,IAC7E0H,KAAK4tB,mBAAmB/qB,OAAO3Y,UACxB8V,KAAKqO,aAAankB,GACzB8V,KAAKyxB,2BAA2BvnC,EAAK8V,KAAKwT,YAC9C,GACA,sBAGA,SAAStpB,GACL,OAAO8V,KAAKpR,OAAOqM,IAAI/Q,EAC3B,GAAC,sBACD,SAASA,EAAKwnC,GACV,GAAI1xB,KAAKC,MAAMrR,QAAUoR,KAAKC,MAAMrR,OAAO1E,GACvC,OAAO8V,KAAKC,MAAMrR,OAAO1E,GAE7B,IAAIsI,EAAQwN,KAAKpR,OAAO0P,IAAIpU,GAK5B,YAJciE,IAAVqE,QAAwCrE,IAAjBujC,IACvBl/B,GAAQs2B,EAAAA,GAAAA,GAAY4I,EAAc,CAAEh2B,MAAOsE,OAC3CA,KAAK8wB,SAAS5mC,EAAKsI,IAEhBA,CACX,GACA,uBAKA,SAAUtI,GACN,YAAkCiE,IAA3B6R,KAAKqO,aAAankB,IAAuB8V,KAAKrJ,QAE/CqJ,KAAK2xB,sBAAsB3xB,KAAKrJ,QAASzM,EAAK8V,KAAK9K,SADnD8K,KAAKqO,aAAankB,EAE5B,GACA,2BAIA,SAAcA,EAAKsI,GACfwN,KAAKquB,WAAWnkC,GAAOsI,CAC3B,GACA,2BAIA,SAActI,GACV,IAAIoO,EACI2J,EAAYjC,KAAKC,MAAjBgC,QACF2vB,EAAsC,kBAAZ3vB,GAA2C,kBAAZA,EACD,QAAvD3J,GAAK4c,EAAAA,GAAAA,GAAwBlV,KAAKC,MAAOgC,UAA6B,IAAP3J,OAAgB,EAASA,EAAGpO,QAC5FiE,EAIN,GAAI8T,QAAgC9T,IAArByjC,EACX,OAAOA,EAMX,IAAMxnC,EAAS4V,KAAK6xB,uBAAuB7xB,KAAKC,MAAO/V,GACvD,YAAeiE,IAAX/D,IAAyBwlB,EAAAA,EAAAA,GAAcxlB,QAMR+D,IAA5B6R,KAAKsuB,cAAcpkC,SACDiE,IAArByjC,OACEzjC,EACA6R,KAAKquB,WAAWnkC,GARXE,CASf,GAAC,gBACD,SAAGwrB,EAAW9P,GAIV,OAHK9F,KAAK8tB,OAAOlY,KACb5V,KAAK8tB,OAAOlY,GAAa,IAAIkc,GAAAA,GAE1B9xB,KAAK8tB,OAAOlY,GAAW9Q,IAAIgB,EACtC,GAAC,oBACD,SAAO8P,GACI,IADgB,MACnBtd,EAAG,mBADUy5B,EAAI,iCAAJA,EAAI,kBAEa,QAAjCz5B,EAAK0H,KAAK8tB,OAAOlY,UAA+B,IAAPtd,IAAyB,EAAAA,GAAG21B,OAAM,QAAI8D,EACpF,KAAC,EAvbc,GAybbxoB,GAAe,CAAC,WAAS,gBAAK0S,KAC9BsV,GAAkBhoB,GAAa/e,O,kCGzd/BwnC,GAAgB,qGAyCjB,OAzCiB,gDAClB,SAAyBh+B,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEi+B,wBAAwBh+B,GAAS,GAAK,CACnD,GAAC,oCACD,SAAuBgM,EAAO/V,GAC1B,IAAIoO,EACJ,OAA8B,QAAtBA,EAAK2H,EAAMuB,aAA0B,IAAPlJ,OAAgB,EAASA,EAAGpO,EACtE,GAAC,wCACD,SAA2BA,EAAK,GAAiB,IAAfqkB,EAAI,EAAJA,KAAM/M,EAAK,EAALA,aAC7B+M,EAAKrkB,UACLsX,EAAMtX,EACjB,GAAC,8CACD,aAAgGyZ,GAAW,IAAxEvF,EAAU,EAAVA,WAAY+W,EAAa,EAAbA,cAAkB/qB,GAAM,cAAM4lB,EAAe,EAAfA,gBACrEtiB,GAASwkC,EAAAA,GAAAA,IAAU9nC,EAAQgU,GAAc,CAAC,EAAG4B,MAYjD,GARIgQ,IACImF,IACAA,EAAgBnF,EAAgBmF,IAChC/qB,IACAA,EAAS4lB,EAAgB5lB,IACzBsD,IACAA,EAASsiB,EAAgBtiB,KAE7BiW,EAAW,EACXwuB,EAAAA,GAAAA,IAAwBnyB,KAAM5V,EAAQsD,GACtC,IAAM0kC,EL7BM,SAACjzB,EAAe/U,EAAQsD,EAAQynB,GACpD,IAAMF,EAAWiV,GAAoB/qB,EAAe/U,EAAQ+qB,GAG5D,OAAOgX,GAAehtB,EAFtB/U,EAAS6qB,EAAS7qB,OAE2BsD,EAD7CynB,EAAgBF,EAASE,cAE7B,CKwB2Bkd,CAAgBryB,KAAM5V,EAAQsD,EAAQynB,GACrDA,EAAgBid,EAAOjd,cACvB/qB,EAASgoC,EAAOhoC,MACpB,CACA,OAAO,QACHgU,WAAAA,EACA+W,cAAAA,GACG/qB,EAEX,KAAC,EAzCiB,CAASsjC,ICQ9B,IACK4E,GAAiB,qGAsClB,OAtCkB,6CACnB,SAAsB3lB,EAAUziB,GAC5B,GAAI0jB,EAAAA,EAAAA,IAAmB1jB,GAAM,CACzB,IAAMqoC,GAAcC,EAAAA,GAAAA,GAAoBtoC,GACxC,OAAOqoC,GAAcA,EAAYz0B,SAAe,CACpD,CAEI,IAVczC,EAURo3B,GAVQp3B,EAUyBsR,EATxC9G,OAAOmkB,iBAAiB3uB,IAUjB7I,GAASyb,EAAc/jB,GACvBuoC,EAAcxI,iBAAiB//B,GAC/BuoC,EAAcvoC,KAAS,EAC7B,MAAwB,kBAAVsI,EAAqBA,EAAM6c,OAAS7c,CAE1D,GAAC,wCACD,SAA2Bma,EAAU,GACjC,OAAOwX,GAAmBxX,EAD2B,EAAlB9E,mBAEvC,GAAC,mBACD,SAAM2L,EAAanF,EAAcnZ,EAAS+K,GACtCmO,EAAgBoF,EAAanF,EAAcnZ,EAAS+K,EAAMqO,kBAC9D,GAAC,yCACD,SAA4BrO,EAAOF,GAC/B,OAAO6T,GAA4B3T,EAAOF,EAC9C,GAAC,oCACD,WAAyB,WACjBC,KAAK0yB,oBACL1yB,KAAK0yB,2BACE1yB,KAAK0yB,mBAEhB,IAAQ5xB,EAAad,KAAKC,MAAlBa,UACJ8O,EAAAA,EAAAA,GAAc9O,KACdd,KAAK0yB,kBAAoB5xB,EAAS0uB,GAAG,UAAU,SAACtH,GACxC,EAAKvxB,UACL,EAAKA,QAAQg8B,YAAc,GAAH,OAAMzK,GACtC,IAER,GAAC,4BACD,SAAevb,EAAU6G,EAAaN,EAAWC,GAC7CF,GAAWtG,EAAU6G,EAAaN,EAAWC,EACjD,KAAC,EAtCkB,CAAS6e,I,sBCF1BY,GAAgB,0CAClB,aAAc,MAEY,OAFZ,gBACV,eAASC,YACJrhB,UAAW,EAAM,CAC1B,CA2BC,OA3BA,8CACD,SAAuBvR,EAAO/V,GAC1B,OAAO+V,EAAM/V,EACjB,GAAC,mCACD,SAAsByiB,EAAUziB,GAC5B,IAAIoO,EACJ,OAAIsV,EAAAA,EAAAA,IAAmB1jB,IACyB,QAAnCoO,GAAKk6B,EAAAA,GAAAA,GAAoBtoC,UAAyB,IAAPoO,OAAgB,EAASA,EAAGwF,UAAY,GAEhG5T,EAAOopB,GAAoBrY,IAAI/Q,GAA0BA,GAAnBypB,EAAAA,GAAAA,GAAYzpB,GAC3CyiB,EAASmmB,aAAa5oC,GACjC,GAAC,wCACD,WACI,MdjBiB,CACrB2G,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,GcmBrC,GAAC,yCACD,SAA4BmU,EAAOF,GAC/B,OAAO6T,GAA4B3T,EAAOF,EAC9C,GAAC,mBACD,SAAMyT,EAAanF,EAAcnZ,EAAS+K,GACtCsR,GAAciC,EAAanF,EAAcnZ,EAAS8K,KAAKwR,SAAUvR,EAAMqO,kBAC3E,GAAC,4BACD,SAAe3B,EAAU6G,EAAaN,EAAWC,GAC7CI,GAAU5G,EAAU6G,EAAaN,EAAWC,EAChD,GAAC,mBACD,SAAMxG,GACF3M,KAAKwR,SAAWA,GAAS7E,EAAS8I,UAClC,sDAAY9I,EAChB,KAAC,EA/BiB,CAASqlB,ICPzBe,GAAyB,SAAC3qB,EAAWlT,GACvC,OAAOqY,EAAenF,GAChB,IAAIwqB,GAAiB19B,EAAS,CAAE+Z,4BAA4B,IAC5D,IAAIqjB,GAAkBp9B,EAAS,CAAE+Z,4BAA4B,GACvE,ECNA,SAAS+jB,GAAgBC,EAAQ9R,GAC7B,OAAIA,EAAKr1B,MAAQq1B,EAAK3qB,IACX,EACHy8B,GAAU9R,EAAKr1B,IAAMq1B,EAAK3qB,KAAQ,GAC9C,CAQA,IAAM08B,GAAsB,CACxBC,QAAS,SAACjL,EAAQkL,GACd,IAAKA,EAAKhpC,OACN,OAAO89B,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI/W,GAAAA,GAAAA,KAAQ+W,GAIR,OAAOA,EAHPA,EAAStoB,WAAWsoB,EAK5B,CAKA,IAAMr3B,EAAImiC,GAAgB9K,EAAQkL,EAAKhpC,OAAOyG,GACxCsM,EAAI61B,GAAgB9K,EAAQkL,EAAKhpC,OAAO+S,GAC9C,MAAO,GAAP,OAAUtM,EAAC,aAAKsM,EAAC,IACrB,G,WCjCEk2B,GAAW,QACXC,GAAmB,CACrBH,QAAS,SAACjL,EAAQ,GAAmC,IAAjCqL,EAAS,EAATA,UAAWC,EAAe,EAAfA,gBACrBC,EAAWvL,EAIXwL,EAAuBxL,EAAO1a,SAAS,QACvCmmB,EAAe,GACjBD,IACAxL,EAASA,EAAO0L,QAAQnK,IAAkB,SAACE,GAEvC,OADAgK,EAAankC,KAAKm6B,GACX0J,EACX,KAEJ,IAAMQ,EAASxlC,GAAAA,EAAAA,MAAc65B,GAE7B,GAAI2L,EAAOrpC,OAAS,EAChB,OAAOipC,EACX,IAAMrlC,EAAWC,GAAAA,EAAAA,kBAA0B65B,GACrCx1B,EAA8B,kBAAdmhC,EAAO,GAAkB,EAAI,EAE7CC,EAASN,EAAgB3iC,EAAE8M,MAAQ41B,EAAU1iC,EAC7CkjC,EAASP,EAAgBr2B,EAAEQ,MAAQ41B,EAAUp2B,EACnD02B,EAAO,EAAInhC,IAAWohC,EACtBD,EAAO,EAAInhC,IAAWqhC,EAOtB,IAAMC,GAAexmC,EAAAA,GAAAA,GAAIsmC,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAInhC,KAClBmhC,EAAO,EAAInhC,IAAWshC,GAEQ,kBAAvBH,EAAO,EAAInhC,KAClBmhC,EAAO,EAAInhC,IAAWshC,GAC1B,IAAInmC,EAASO,EAASylC,GACtB,GAAIH,EAAsB,CACtB,IAAIvpC,EAAI,EACR0D,EAASA,EAAO+lC,QAAQP,IAAU,WAC9B,IAAMY,EAAcN,EAAaxpC,GAEjC,OADAA,IACO8pC,CACX,GACJ,CACA,OAAOpmC,CACX,GC3CEqmC,GAAwB,qGA8FzB,OA9FyB,yCAM1B,WAAoB,IxEfGC,EwEeH,OAChB,EAAoEn0B,KAAKC,MAAjEd,EAAa,EAAbA,cAAei1B,EAAW,EAAXA,YAAaC,EAAiB,EAAjBA,kBAAmBloB,EAAQ,EAARA,SAC/CgH,EAAehU,EAAfgU,WxEjBWghB,EwEkBDG,GxEjBtBjqC,OAAOylB,OAAOrC,EAAiB0mB,GwEkBvBhhB,IACIihB,EAAYG,OACZH,EAAYG,MAAMzvB,IAAIqO,GACtBkhB,GAAqBA,EAAkBzxB,UAAYuJ,GACnDkoB,EAAkBzxB,SAASuQ,GAE/BA,EAAWoF,KAAKic,YAChBrhB,EAAW4C,iBAAiB,qBAAqB,WAC7C,EAAKgJ,cACT,IACA5L,EAAWgd,YAAW,kBACfhd,EAAWje,SAAO,IACrBgN,eAAgB,kBAAM,EAAK6c,cAAc,MAGjDjU,EAAsBE,gBAAiB,CAC3C,GAAC,qCACD,SAAwBjL,GAAW,WAC/B,EAA6DC,KAAKC,MAA1Dw0B,EAAgB,EAAhBA,iBAAkBt1B,EAAa,EAAbA,cAAeqL,EAAI,EAAJA,KAAMrK,EAAS,EAATA,UACzCgT,EAAahU,EAAcgU,WACjC,OAAKA,GASLA,EAAWhT,UAAYA,EACnBqK,GACAzK,EAAU00B,mBAAqBA,QACVtmC,IAArBsmC,EACAthB,EAAWuhB,aAGX10B,KAAK+e,eAELhf,EAAUI,YAAcA,IACpBA,EACAgT,EAAWwhB,UAELxhB,EAAWyhB,YAMjB18B,GAAAA,GAAAA,YAAgB,WACZ,IAAII,GACmC,QAAhCA,EAAK6a,EAAW0hB,kBAA+B,IAAPv8B,OAAgB,EAASA,EAAGw8B,QAAQtqC,SAC/E,EAAKu0B,cAEb,KAGD,MAnCI,IAoCf,GAAC,gCACD,WACI,IAAQ5L,EAAenT,KAAKC,MAAMd,cAA1BgU,WACJA,IACAA,EAAWoF,KAAKic,aACXrhB,EAAWhX,kBAAoBgX,EAAW4hB,UAC3C/0B,KAAK+e,eAGjB,GAAC,kCACD,WACI,MAA2E/e,KAAKC,MAAxEd,EAAa,EAAbA,cAAei1B,EAAW,EAAXA,YAAgCY,EAAc,EAAjCX,kBAC5BlhB,EAAehU,EAAfgU,WACJA,IACAA,EAAW8hB,6BACS,OAAhBb,QAAwC,IAAhBA,OAAyB,EAASA,EAAYG,QACtEH,EAAYG,MAAMlF,OAAOlc,IACN,OAAnB6hB,QAA8C,IAAnBA,OAA4B,EAASA,EAAeE,aAC/EF,EAAeE,WAAW/hB,GAEtC,GAAC,0BACD,WACI,IAAQ4L,EAAiB/e,KAAKC,MAAtB8e,aACS,OAAjBA,QAA0C,IAAjBA,GAAmCA,GAChE,GAAC,oBACD,WACI,OAAO,IACX,KAAC,EA9FyB,CAAS5T,EAAAA,WAqGvC,IAAMmpB,GAAyB,CAC3Ba,cAAc,kBACPjC,IAAmB,IACtBkC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRC,oBAAqBnC,GACrBoC,qBAAsBpC,GACtBqC,uBAAwBrC,GACxBsC,wBAAyBtC,GACzBuC,UAAWnC,IC3HToC,GAAiB,CACnBprB,cDuGJ,SAAuBrK,GACnB,MAAkC6b,KAAa,gBAAxC3b,EAAS,KAAE4e,EAAY,KACxBqV,GAAc3wB,EAAAA,EAAAA,YAAWC,EAAAA,GAC/B,OAAQyH,EAAAA,cAA6B+oB,IAA0B,kBAAKj0B,GAAK,IAAEm0B,YAAaA,EAAaC,mBAAmB5wB,EAAAA,EAAAA,YAAW2H,GAA2BjL,UAAWA,EAAW4e,aAAcA,IACtM,G,0BExGM4W,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQnrC,OACrBqrC,GAAW,SAACrjC,GAAK,MAAsB,kBAAVA,EAAqBoN,WAAWpN,GAASA,CAAK,EAC3EsjC,GAAO,SAACtjC,GAAK,MAAsB,kBAAVA,GAAsB2e,GAAAA,GAAAA,KAAQ3e,EAAM,EACnE,SAASujC,GAAU3rC,EAAQ4rC,EAAQC,EAAMhmC,EAAUimC,EAAwBC,GACnED,GACA9rC,EAAOwT,SAAUpQ,EAAAA,GAAAA,GAAI,OAEJW,IAAjB8nC,EAAKr4B,QAAwBq4B,EAAKr4B,QAAU,EAAGw4B,GAAgBnmC,IAC/D7F,EAAOisC,aAAc7oC,EAAAA,GAAAA,QAAuBW,IAAnB6nC,EAAOp4B,QAAwBo4B,EAAOp4B,QAAU,EAAG,EAAG04B,GAAiBrmC,KAE3FkmC,IACL/rC,EAAOwT,SAAUpQ,EAAAA,GAAAA,QAAuBW,IAAnB6nC,EAAOp4B,QAAwBo4B,EAAOp4B,QAAU,OAAoBzP,IAAjB8nC,EAAKr4B,QAAwBq4B,EAAKr4B,QAAU,EAAG3N,IAK3H,IAAK,IAAI9F,EAAI,EAAGA,EAAIyrC,GAAYzrC,IAAK,CACjC,IAAMosC,EAAc,SAAH,OAAYZ,GAAQxrC,GAAE,UACnCqsC,EAAeC,GAAUT,EAAQO,GACjCG,EAAaD,GAAUR,EAAMM,GACjC,QAAqBpoC,IAAjBqoC,QAA6CroC,IAAfuoC,EAElCF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAZ,GAAKU,KAAkBV,GAAKY,IAE5BtsC,EAAOmsC,GAAe3qC,KAAKE,KAAI0B,EAAAA,GAAAA,GAAIqoC,GAASW,GAAeX,GAASa,GAAazmC,GAAW,IACxFs1B,GAAAA,GAAAA,KAAamR,IAAenR,GAAAA,GAAAA,KAAaiR,MACzCpsC,EAAOmsC,IAAgB,MAI3BnsC,EAAOmsC,GAAeG,CAE9B,EAIIV,EAAO34B,QAAU44B,EAAK54B,UACtBjT,EAAOiT,QAAS7P,EAAAA,GAAAA,GAAIwoC,EAAO34B,QAAU,EAAG44B,EAAK54B,QAAU,EAAGpN,GAElE,CACA,SAASwmC,GAAU7nC,EAAQ+nC,GACvB,YAA8BxoC,IAAvBS,EAAO+nC,GACR/nC,EAAO+nC,GACP/nC,EAAOumC,YACjB,CAwBA,IAAMiB,GAAkBQ,GAAS,EAAG,GAAKjlC,GAAAA,IACnC2kC,GAAmBM,GAAS,GAAK,IAAMlmC,GAAAA,GAC7C,SAASkmC,GAASpgC,EAAK1K,EAAKkH,GACxB,OAAO,SAACjI,GAEJ,OAAIA,EAAIyL,EACG,EACPzL,EAAIe,EACG,EACJkH,GAAO/C,EAAAA,GAAAA,GAASuG,EAAK1K,EAAKf,GACrC,CACJ,CCrFA,SAAS8rC,GAAa1V,EAAM2V,GACxB3V,EAAK3qB,IAAMsgC,EAAWtgC,IACtB2qB,EAAKr1B,IAAMgrC,EAAWhrC,GAC1B,CAMA,SAASirC,GAAYzT,EAAK0T,GACtBH,GAAavT,EAAIzyB,EAAGmmC,EAAUnmC,GAC9BgmC,GAAavT,EAAInmB,EAAG65B,EAAU75B,EAClC,CCVA,SAAS85B,GAAiBxgB,EAAO+K,EAAW7jB,EAAO4jB,EAAa4B,GAM5D,OAJA1M,EAAQwM,GADRxM,GAAS+K,EACiB,EAAI7jB,EAAO4jB,QACpBpzB,IAAbg1B,IACA1M,EAAQwM,GAAWxM,EAAO,EAAI0M,EAAU5B,IAErC9K,CACX,CAsBA,SAASygB,GAAqB/V,EAAMyC,EAAY,EAA4Bl2B,EAAQypC,GAAY,oBAA/CjtC,EAAG,KAAE25B,EAAQ,KAAEC,EAAS,MAlBzE,SAAyB3C,GAA8F,IAAxFK,EAAY,UAAH,6CAAG,EAAG7jB,EAAQ,UAAH,6CAAG,EAAGjQ,EAAS,UAAH,6CAAG,GAAKy1B,EAAQ,uCAAE2T,EAAa,UAAH,6CAAG3V,EAAMgW,EAAa,UAAH,6CAAGhW,EAC7G,GAAIoE,GAAAA,GAAAA,KAAa/D,GAAY,CACzBA,EAAY5hB,WAAW4hB,GAEvBA,GADyBh0B,EAAAA,GAAAA,GAAI2pC,EAAW3gC,IAAK2gC,EAAWrrC,IAAK01B,EAAY,KAC1C2V,EAAW3gC,GAC9C,CACA,GAAyB,kBAAdgrB,EAAX,CAEA,IAAID,GAAc/zB,EAAAA,GAAAA,GAAIspC,EAAWtgC,IAAKsgC,EAAWhrC,IAAK4B,GAClDyzB,IAAS2V,IACTvV,GAAeC,GACnBL,EAAK3qB,IAAMygC,GAAiB9V,EAAK3qB,IAAKgrB,EAAW7jB,EAAO4jB,EAAa4B,GACrEhC,EAAKr1B,IAAMmrC,GAAiB9V,EAAKr1B,IAAK01B,EAAW7jB,EAAO4jB,EAAa4B,EAL3D,CAMd,CAMIiU,CAAgBjW,EAAMyC,EAAW15B,GAAM05B,EAAWC,GAAWD,EAAWE,GAAYF,EAAWjmB,MAAOjQ,EAAQypC,EAClH,CAIA,IAAMnT,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASoT,GAAoB/T,EAAKM,EAAYoT,EAAWM,GACrDJ,GAAqB5T,EAAIzyB,EAAG+yB,EAAYI,GAAqB,OAAdgT,QAAoC,IAAdA,OAAuB,EAASA,EAAUnmC,EAAiB,OAAdymC,QAAoC,IAAdA,OAAuB,EAASA,EAAUzmC,GAClLqmC,GAAqB5T,EAAInmB,EAAGymB,EAAYK,GAAqB,OAAd+S,QAAoC,IAAdA,OAAuB,EAASA,EAAU75B,EAAiB,OAAdm6B,QAAoC,IAAdA,OAAuB,EAASA,EAAUn6B,EACtL,C,eCjDA,SAASo6B,GAAgBxjC,GACrB,OAA2B,IAApBA,EAAMytB,WAAmC,IAAhBztB,EAAM4J,KAC1C,CACA,SAAS65B,GAAYzjC,GACjB,OAAOwjC,GAAgBxjC,EAAMlD,IAAM0mC,GAAgBxjC,EAAMoJ,EAC7D,CACA,SAASs6B,GAAUzjC,EAAGC,GAClB,OAAQD,EAAEnD,EAAE2F,MAAQvC,EAAEpD,EAAE2F,KACpBxC,EAAEnD,EAAE/E,MAAQmI,EAAEpD,EAAE/E,KAChBkI,EAAEmJ,EAAE3G,MAAQvC,EAAEkJ,EAAE3G,KAChBxC,EAAEmJ,EAAErR,MAAQmI,EAAEkJ,EAAErR,GACxB,CACA,SAAS4rC,GAAYpU,GACjB,OAAOpC,GAAWoC,EAAIzyB,GAAKqwB,GAAWoC,EAAInmB,EAC9C,C,eCdMw6B,GAAS,WACX,cAAc,eACV33B,KAAK80B,QAAU,EACnB,CAqGC,OArGA,2BACD,SAAI1B,IACAwE,EAAAA,GAAAA,IAAc53B,KAAK80B,QAAS1B,GAC5BA,EAAKhF,gBACT,GAAC,oBACD,SAAOgF,GAKH,IAJAyE,EAAAA,GAAAA,IAAW73B,KAAK80B,QAAS1B,GACrBA,IAASpzB,KAAK83B,WACd93B,KAAK83B,cAAW3pC,GAEhBilC,IAASpzB,KAAKi2B,KAAM,CACpB,IAAM6B,EAAW93B,KAAK80B,QAAQ90B,KAAK80B,QAAQtqC,OAAS,GAChDstC,GACA93B,KAAK20B,QAAQmD,EAErB,CACJ,GAAC,sBACD,SAAS1E,GACL,IAMI0E,EANEC,EAAc/3B,KAAK80B,QAAQ7vB,WAAU,SAAC+yB,GAAM,OAAK5E,IAAS4E,CAAM,IACtE,GAAoB,IAAhBD,EACA,OAAO,EAKX,IAAK,IAAI5tC,EAAI4tC,EAAa5tC,GAAK,EAAGA,IAAK,CACnC,IAAM6tC,EAASh4B,KAAK80B,QAAQ3qC,GAC5B,IAAyB,IAArB6tC,EAAO73B,UAAqB,CAC5B23B,EAAWE,EACX,KACJ,CACJ,CACA,QAAIF,IACA93B,KAAK20B,QAAQmD,IACN,EAKf,GAAC,qBACD,SAAQ1E,EAAM6E,GACV,IAAI3/B,EACEw/B,EAAW93B,KAAKi2B,KAClB7C,IAAS0E,IAEb93B,KAAK83B,SAAWA,EAChB93B,KAAKi2B,KAAO7C,EACZA,EAAK8E,OACDJ,IACAA,EAASnrB,UAAYmrB,EAAS1J,iBAC9BgF,EAAKhF,iBACLgF,EAAK+E,WAAaL,EACdG,IACA7E,EAAK+E,WAAWC,iBAAkB,GAElCN,EAASO,WACTjF,EAAKiF,SAAWP,EAASO,SACzBjF,EAAKiF,SAAShqB,aACVypB,EAASQ,iBAAmBR,EAASzpB,eAEpB,QAApB/V,EAAK86B,EAAK7a,YAAyB,IAAPjgB,OAAgB,EAASA,EAAGigC,cACzDnF,EAAKoF,eAAgB,IAGP,IADIpF,EAAKl+B,QAAnBujC,WAEJX,EAASY,QAerB,GAAC,mCACD,WACI14B,KAAK80B,QAAQhyB,SAAQ,SAACswB,GAClB,IAAI96B,EAAIC,EAAI2iB,EAAIC,EAAIwd,EAC0B,QAA7CpgC,GAAMD,EAAK86B,EAAKl+B,SAASgN,sBAAmC,IAAP3J,GAAyBA,EAAG3N,KAAK0N,GACmB,QAAzGqgC,EAAkC,QAA5Bzd,EAAKkY,EAAKwF,oBAAiC,IAAP1d,OAAgB,GAAUC,EAAKD,EAAGhmB,SAASgN,sBAAmC,IAAPy2B,GAAyBA,EAAG/tC,KAAKuwB,EACvJ,GACJ,GAAC,4BACD,WACInb,KAAK80B,QAAQhyB,SAAQ,SAACswB,GAClBA,EAAKzmB,UAAYymB,EAAKhF,gBAAe,EACzC,GACJ,GACA,gCAIA,WACQpuB,KAAKi2B,MAAQj2B,KAAKi2B,KAAKoC,WACvBr4B,KAAKi2B,KAAKoC,cAAWlqC,EAE7B,KAAC,EAxGU,GCFf,SAAS0qC,GAAyB9kC,EAAOw/B,EAAWuF,GAChD,IAAI3qB,EAAY,GAOV4qB,EAAahlC,EAAMlD,EAAE2wB,UAAY+R,EAAU1iC,EAC3CmoC,EAAajlC,EAAMoJ,EAAEqkB,UAAY+R,EAAUp2B,EAWjD,IAVI47B,GAAcC,KACd7qB,EAAY,eAAH,OAAkB4qB,EAAU,eAAOC,EAAU,YAMtC,IAAhBzF,EAAU1iC,GAA2B,IAAhB0iC,EAAUp2B,IAC/BgR,GAAa,SAAJ,OAAa,EAAIolB,EAAU1iC,EAAC,aAAK,EAAI0iC,EAAUp2B,EAAC,OAEzD27B,EAAiB,CACjB,IAAQz7B,EAA6By7B,EAA7Bz7B,OAAQC,EAAqBw7B,EAArBx7B,QAASC,EAAYu7B,EAAZv7B,QACrBF,IACA8Q,GAAa,UAAJ,OAAc9Q,EAAM,UAC7BC,IACA6Q,GAAa,WAAJ,OAAe7Q,EAAO,UAC/BC,IACA4Q,GAAa,WAAJ,OAAe5Q,EAAO,SACvC,CAKA,IAAM07B,EAAgBllC,EAAMlD,EAAE8M,MAAQ41B,EAAU1iC,EAC1CqoC,EAAgBnlC,EAAMoJ,EAAEQ,MAAQ41B,EAAUp2B,EAIhD,OAHsB,IAAlB87B,GAAyC,IAAlBC,IACvB/qB,GAAa,SAAJ,OAAa8qB,EAAa,aAAKC,EAAa,MAElD/qB,GAAa,MACxB,CCvCA,IAAMgrB,GAAiB,SAACnlC,EAAGC,GAAC,OAAKD,EAAE81B,MAAQ71B,EAAE61B,KAAK,ECG5CsP,GAAQ,WACV,cAAc,eACVp5B,KAAKc,SAAW,GAChBd,KAAKq5B,SAAU,CACnB,CAaC,OAbA,2BACD,SAAIl2B,IACAy0B,EAAAA,GAAAA,IAAc53B,KAAKc,SAAUqC,GAC7BnD,KAAKq5B,SAAU,CACnB,GAAC,oBACD,SAAOl2B,IACH00B,EAAAA,GAAAA,IAAW73B,KAAKc,SAAUqC,GAC1BnD,KAAKq5B,SAAU,CACnB,GAAC,qBACD,SAAQvzB,GACJ9F,KAAKq5B,SAAWr5B,KAAKc,SAASsO,KAAK+pB,IACnCn5B,KAAKq5B,SAAU,EACfr5B,KAAKc,SAASgC,QAAQgD,EAC1B,KAAC,EAjBS,G,WCmBRwzB,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMjCr4B,GAAK,EACT,SAASs4B,GAAqB,GAA4F,IAA1FC,EAAoB,EAApBA,qBAAsBC,EAAa,EAAbA,cAAeC,EAAa,EAAbA,cAAeC,EAAiB,EAAjBA,kBAAmBC,EAAc,EAAdA,eACnG,kBACI,WAAYC,GAAsH,WAA3GxrB,EAAe,UAAH,6CAAG,CAAC,EAAG9F,EAAS,UAAH,6CAAqB,OAAlBkxB,QAA4C,IAAlBA,OAA2B,EAASA,KAAe,eAI5Hz5B,KAAKiB,GAAKA,KAIVjB,KAAK85B,YAAc,EAOnB95B,KAAKc,SAAW,IAAIhG,IAKpBkF,KAAK9K,QAAU,CAAC,EAMhB8K,KAAK+5B,iBAAkB,EACvB/5B,KAAKqlB,oBAAqB,EAO1BrlB,KAAKw4B,eAAgB,EACrBx4B,KAAK0vB,kBAAmB,EAKxB1vB,KAAKg6B,mBAAoB,EAIzBh6B,KAAKi6B,uBAAwB,EAC7Bj6B,KAAKk6B,uBAAwB,EAK7Bl6B,KAAKu4B,YAAa,EAIlBv4B,KAAKm6B,OAAQ,EAKbn6B,KAAKo6B,YAAa,EAIlBp6B,KAAKq6B,sBAAuB,EAS5Br6B,KAAKuzB,UAAY,CAAE1iC,EAAG,EAAGsM,EAAG,GAI5B6C,KAAKs6B,cAAgB,IAAIr3B,IAEzBjD,KAAKu6B,eAAiB,IAAIt3B,IAC1BjD,KAAKw6B,kBAAoB,WACjB,EAAKjC,aACL,EAAKA,YAAa,EAClB,EAAKkC,oBAEb,EAMAz6B,KAAK06B,iBAAmB,WACpB,EAAKC,MAAM73B,QAAQ83B,IACnB,EAAKD,MAAM73B,QAAQ+3B,IACnB,EAAKF,MAAM73B,QAAQg4B,GACvB,EACA96B,KAAK+6B,cAAe,EACpB/6B,KAAKg7B,WAAY,EACjBh7B,KAAKi7B,kBAAoB,EAKzBj7B,KAAKk7B,YAAc,IAAIj4B,IACvBjD,KAAK65B,UAAYA,EACjB75B,KAAKqO,aAAeA,EACpBrO,KAAKuY,KAAOhQ,EAASA,EAAOgQ,MAAQhQ,EAASvI,KAC7CA,KAAKm7B,KAAO5yB,EAAS,GAAH,gBAAOA,EAAO4yB,MAAI,CAAE5yB,IAAU,GAChDvI,KAAKuI,OAASA,EACdvI,KAAK8pB,MAAQvhB,EAASA,EAAOuhB,MAAQ,EAAI,EACzC+P,GAAa75B,KAAKuY,KAAK6iB,sBAAsBvB,EAAW75B,MACxD,IAAK,IAAI7V,EAAI,EAAGA,EAAI6V,KAAKm7B,KAAK3wC,OAAQL,IAClC6V,KAAKm7B,KAAKhxC,GAAGkwC,sBAAuB,EAEpCr6B,KAAKuY,OAASvY,OACdA,KAAK26B,MAAQ,IAAIvB,GACzB,CAk/BC,OAl/BA,wCACD,SAAiB3vB,EAAMoM,GAInB,OAHK7V,KAAKs6B,cAAcr/B,IAAIwO,IACxBzJ,KAAKs6B,cAAc1+B,IAAI6N,EAAM,IAAIqoB,GAAAA,GAE9B9xB,KAAKs6B,cAAch8B,IAAImL,GAAM3E,IAAI+Q,EAC5C,GAAC,6BACD,SAAgBpM,GAC6C,IAAzD,IAAM4xB,EAAsBr7B,KAAKs6B,cAAch8B,IAAImL,GAAM,mBADpCsoB,EAAI,iCAAJA,EAAI,kBAED,OAAxBsJ,QAAwD,IAAxBA,GAA0CA,EAAoBpN,OAAM,MAA1BoN,EAA8BtJ,EAC5G,GAAC,0BACD,SAAatoB,GACT,OAAOzJ,KAAKs6B,cAAcr/B,IAAIwO,EAClC,GAAC,mCACD,SAAsBowB,EAAWzG,GAC7BpzB,KAAKu6B,eAAe3+B,IAAIi+B,EAAWzG,EACvC,GACA,mBAGA,SAAMzmB,GAAiC,IAC/BrU,EAD+B,OAAvBkgC,EAAgB,UAAH,8CAEzB,IAAIx4B,KAAK2M,SAAT,CAEA3M,KAAKm6B,MACDxtB,aAAoB2uB,YAAmC,QAArB3uB,EAAS8I,QAC/CzV,KAAK2M,SAAWA,EAChB,MAA4C3M,KAAK9K,QAAzCiX,EAAQ,EAARA,SAAUwB,EAAM,EAANA,OAAQxO,EAAa,EAAbA,cAU1B,GATIA,IAAkBA,EAAcxI,SAChCwI,EAAcyN,MAAMD,GAExB3M,KAAKuY,KAAKoiB,MAAM71B,IAAI9E,MACG,QAAtB1H,EAAK0H,KAAKuI,cAA2B,IAAPjQ,GAAyBA,EAAGwI,SAASgE,IAAI9E,MACxEA,KAAK65B,WAAa75B,KAAKuY,KAAKgiB,eAAe13B,OAAO7C,KAAK65B,WACnDrB,IAAkB7qB,GAAUxB,KAC5BnM,KAAKw4B,eAAgB,GAErBgB,EAAsB,CACtB,IAAI+B,EACEC,EAAsB,WAAH,OAAU,EAAKjjB,KAAK2hB,uBAAwB,CAAK,EAC1EV,EAAqB7sB,GAAU,WAC3B,EAAK4L,KAAK2hB,uBAAwB,EAClCqB,GAAeA,IACfA,GAAc1jC,EAAAA,GAAAA,GAAM2jC,EAAqB,KACrC1wB,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/C,EAAK4vB,MAAM73B,QAAQ24B,IAE3B,GACJ,CACItvB,GACAnM,KAAKuY,KAAKmjB,mBAAmBvvB,EAAUnM,OAGd,IAAzBA,KAAK9K,QAAQmD,SACb8G,IACCgN,GAAYwB,IACb3N,KAAK+V,iBAAiB,aAAa,YAA+E,IAC1Gzd,EAAIC,EAAI2iB,EAAIC,EAAIwd,EADc5kC,EAAK,EAALA,MAAO80B,EAAgB,EAAhBA,iBAAkB8S,EAAwB,EAAxBA,yBAAkCC,EAAS,EAAjBjuB,OAErF,GAAI,EAAKkuB,yBAGL,OAFA,EAAKzxC,YAAS+D,OACd,EAAK2tC,oBAAiB3tC,GAI1B,IAAM4tC,EAAmI,QAA/GxjC,EAAwC,QAAlCD,EAAK,EAAKpD,QAAQkJ,kBAA+B,IAAP9F,EAAgBA,EAAK6G,EAAcpB,8BAA2C,IAAPxF,EAAgBA,EAAKyjC,GACtK,EAA+D78B,EAAcE,WAArE48B,EAAsB,EAAtBA,uBAAwBC,EAAyB,EAAzBA,0BAK1BC,GAAiB,EAAKC,eACvB3E,GAAU,EAAK2E,aAAcR,IAC9BD,EAMEU,GAAgCxT,GAAoB8S,EAC1D,GAAI,EAAKzmC,QAAQg7B,aACe,QAA1BhV,EAAK,EAAKid,kBAA+B,IAAPjd,OAAgB,EAASA,EAAGvO,WAChE0vB,GACCxT,IACIsT,IAAkB,EAAKhgC,kBAAoB,CAC5C,EAAKg8B,aACL,EAAKS,aAAe,EAAKT,WACzB,EAAKS,aAAaA,kBAAezqC,GAErC,EAAKmuC,mBAAmBvoC,EAAOsoC,GAC/B,IAAME,GAAmB,mBAClB39B,EAAAA,GAAAA,IAAmBm9B,EAAkB,WAAS,IACjD9iC,OAAQgjC,EACR9iC,WAAY+iC,KAEZ/8B,EAAcwuB,oBACd,EAAKz4B,QAAQg7B,cACbqM,EAAiB1kC,MAAQ,EACzB0kC,EAAiBlwC,MAAO,GAE5B,EAAKmQ,eAAe+/B,EACxB,MAOS1T,GAC0B,IAA3B,EAAKoS,mBACLQ,GAAgB,GAEpB,EAAK1G,WAA2D,QAA7C4D,GAAMxd,EAAK,EAAKjmB,SAASgN,sBAAmC,IAAPy2B,GAAyBA,EAAG/tC,KAAKuwB,IAE7G,EAAKihB,aAAeR,CACxB,GA5FM,CA8Fd,GAAC,qBACD,WACI,IAAItjC,EAAIC,EACRyH,KAAK9K,QAAQiX,UAAYnM,KAAK00B,aAC9B10B,KAAKuY,KAAKoiB,MAAMtL,OAAOrvB,MACI,QAA1B1H,EAAK0H,KAAK60B,kBAA+B,IAAPv8B,GAAyBA,EAAG+2B,OAAOrvB,MAC/C,QAAtBzH,EAAKyH,KAAKuI,cAA2B,IAAPhQ,GAAyBA,EAAGuI,SAAS+B,OAAO7C,MAC3EA,KAAK2M,cAAWxe,EAChBiK,GAAAA,GAAAA,UAAqB4H,KAAK06B,iBAC9B,GACA,yBACA,WACI16B,KAAKi6B,uBAAwB,CACjC,GAAC,2BACD,WACIj6B,KAAKi6B,uBAAwB,CACjC,GAAC,6BACD,WACI,OAAOj6B,KAAKi6B,uBAAyBj6B,KAAKk6B,qBAC9C,GAAC,oCACD,WACI,IAAI5hC,EACJ,OAAQ0H,KAAKqlB,qBACe,QAAtB/sB,EAAK0H,KAAKuI,cAA2B,IAAPjQ,OAAgB,EAASA,EAAGujC,4BAC5D,CACR,GACA,yBACA,WACI,IAAIvjC,EACA0H,KAAKw8B,oBAETx8B,KAAKu4B,YAAa,EACI,QAArBjgC,EAAK0H,KAAK26B,aAA0B,IAAPriC,GAAyBA,EAAGwK,QAAQ25B,IAClEz8B,KAAK85B,cACT,GAAC,kCACD,WACI,IAAIxhC,EACJ,OAA6C,QAArCA,EAAK0H,KAAK9K,QAAQiK,qBAAkC,IAAP7G,OAAgB,EAASA,EAAG+G,WAAWiP,iBAChG,GAAC,wBACD,WAAyC,IACjChW,EAAIC,EAAI2iB,EADLwhB,IAAwB,UAAH,+CAE5B,GAAI18B,KAAKuY,KAAKikB,kBACoC,QAA7CjkC,GAAMD,EAAK0H,KAAK9K,SAASgN,sBAAmC,IAAP3J,GAAyBA,EAAG3N,KAAK0N,QAI3F,IADC0H,KAAKuY,KAAKggB,YAAcv4B,KAAKuY,KAAKokB,eAC/B38B,KAAKw4B,cAAT,CAEAx4B,KAAKw4B,eAAgB,EACrB,IAAK,IAAIruC,EAAI,EAAGA,EAAI6V,KAAKm7B,KAAK3wC,OAAQL,IAAK,CACvC,IAAMipC,EAAOpzB,KAAKm7B,KAAKhxC,GACvBipC,EAAKiH,sBAAuB,EAC5BjH,EAAK/K,aAAa,YACd+K,EAAKl+B,QAAQg7B,YACbkD,EAAKsB,YAAW,EAExB,CACA,MAA6B10B,KAAK9K,QAA1BiX,EAAQ,EAARA,SAAUwB,EAAM,EAANA,aACDxf,IAAbge,GAA2BwB,KAE/B3N,KAAK48B,2BAAoE,QAAtC1hB,EAAKlb,KAAK68B,8BAA2C,IAAP3hB,OAAgB,EAASA,EAAGlb,KAAKqO,aAAc,IAChIrO,KAAK88B,iBACLJ,GAAyB18B,KAAK+8B,gBAAgB,cAfpC,CAgBd,GACA,uBACA,WAKI,GAJyB/8B,KAAKw8B,kBAQ1B,OAHAx8B,KAAKg9B,gBACLh9B,KAAKy6B,yBACLz6B,KAAK26B,MAAM73B,QAAQm6B,IAGlBj9B,KAAKu4B,aAEVv4B,KAAKu4B,YAAa,EAOdv4B,KAAKu6B,eAAen6B,OACpBJ,KAAKu6B,eAAez3B,QAAQo6B,IAC5Bl9B,KAAKu6B,eAAe71B,SAKxB1E,KAAK26B,MAAM73B,QAAQq6B,IAKnBn9B,KAAK26B,MAAM73B,QAAQwlB,IAKnBtoB,KAAK26B,MAAM73B,QAAQs6B,IACnBp9B,KAAKy6B,oBAELjzB,GAAAA,GAAAA,SACAA,GAAAA,GAAAA,YACAA,GAAAA,GAAAA,SACJ,GAAC,+BACD,WACIxH,KAAK26B,MAAM73B,QAAQu6B,IACnBr9B,KAAKk7B,YAAYp4B,QAAQw6B,GAC7B,GAAC,sCACD,WACIplC,GAAAA,GAAAA,UAAe8H,KAAK06B,kBAAkB,GAAO,EACjD,GAAC,uCACD,WAA4B,WAMxBxiC,GAAAA,GAAAA,YAAgB,WACR,EAAKsgC,cACL,EAAKjgB,KAAKic,YAGV,EAAKjc,KAAKiiB,mBAElB,GACJ,GACA,4BAGA,YACQx6B,KAAKq4B,UAAar4B,KAAK2M,WAE3B3M,KAAKq4B,SAAWr4B,KAAKu9B,UACzB,GAAC,0BACD,WACI,IAAIjlC,EACJ,GAAK0H,KAAK2M,WAGV3M,KAAKqoB,eACCroB,KAAK9K,QAAQk7B,qBAAuBpwB,KAAK+0B,UAC1C/0B,KAAKw4B,eADV,CAWA,GAAIx4B,KAAKm4B,aAAen4B,KAAKm4B,WAAWxrB,SACpC,IAAK,IAAIxiB,EAAI,EAAGA,EAAI6V,KAAKm7B,KAAK3wC,OAAQL,IAAK,CAC1B6V,KAAKm7B,KAAKhxC,GAClBk+B,cACT,CAEJ,IAAMmV,EAAax9B,KAAK2N,OACxB3N,KAAK2N,OAAS3N,KAAKu9B,SAAQ,GAC3Bv9B,KAAKy9B,gB5BhaQ,CACrB5sC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4Bka7BkU,KAAKw4B,eAAgB,EACrBx4B,KAAKwzB,qBAAkBrlC,EACvB6R,KAAK+8B,gBAAgB,UAAW/8B,KAAK2N,OAAO8X,WACN,QAArCntB,EAAK0H,KAAK9K,QAAQiK,qBAAkC,IAAP7G,GAAyBA,EAAG21B,OAAO,gBAAiBjuB,KAAK2N,OAAO8X,UAA0B,OAAf+X,QAAsC,IAAfA,OAAwB,EAASA,EAAW/X,UApB5L,CAqBJ,GAAC,0BACD,WAAgC,IAAnBiY,EAAQ,UAAH,6CAAG,UACbC,EAAmBnxC,QAAQwT,KAAK9K,QAAQ+6B,cAAgBjwB,KAAK2M,UAC7D3M,KAAKknB,QACLlnB,KAAKknB,OAAO4S,cAAgB95B,KAAKuY,KAAKuhB,aACtC95B,KAAKknB,OAAOwW,QAAUA,IACtBC,GAAmB,GAEnBA,IACA39B,KAAKknB,OAAS,CACV4S,YAAa95B,KAAKuY,KAAKuhB,YACvB4D,MAAAA,EACAE,OAAQjE,EAAkB35B,KAAK2M,UAC/Bja,OAAQgnC,EAAc15B,KAAK2M,WAGvC,GAAC,4BACD,WACI,IAAIrU,EACJ,GAAKshC,EAAL,CAEA,IAAMiE,EAAmB79B,KAAKw4B,eAAiBx4B,KAAKq6B,qBAC9CyD,EAAgB99B,KAAKwzB,kBAAoBgE,GAAYx3B,KAAKwzB,iBAC1DuK,EAAgE,QAAtCzlC,EAAK0H,KAAK68B,8BAA2C,IAAPvkC,OAAgB,EAASA,EAAG0H,KAAKqO,aAAc,IACvH2vB,EAA8BD,IAA2B/9B,KAAK48B,2BAChEiB,IACCC,GACGpvB,GAAa1O,KAAKqO,eAClB2vB,KACJpE,EAAe55B,KAAK2M,SAAUoxB,GAC9B/9B,KAAKq6B,sBAAuB,EAC5Br6B,KAAKouB,iBAXC,CAad,GAAC,qBACD,WAAgC,IAAxB6P,IAAkB,UAAH,+CACbC,EAAUl+B,KAAKmnB,iBACjB1B,EAAYzlB,KAAKm+B,oBAAoBD,GAUzC,OAJID,IACAxY,EAAYzlB,KAAKi+B,gBAAgBxY,IAErC2Y,GAAS3Y,GACF,CACHqU,YAAa95B,KAAKuY,KAAKuhB,YACvBuE,YAAaH,EACbzY,UAAAA,EACApX,aAAc,CAAC,EACfrkB,OAAQgW,KAAKiB,GAErB,GAAC,4BACD,WACI,IAAQ9B,EAAkBa,KAAK9K,QAAvBiK,cACR,IAAKA,EACD,M5B9dS,CACrBtO,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4Bge7B,IAAMw3B,EAAMnkB,EAAcglB,qBAElB+C,EAAWlnB,KAAKuY,KAAhB2O,OAKR,OAJIA,IACAxD,GAAcJ,EAAIzyB,EAAGq2B,EAAOx0B,OAAO7B,GACnC6yB,GAAcJ,EAAInmB,EAAG+pB,EAAOx0B,OAAOyK,IAEhCmmB,CACX,GAAC,iCACD,SAAoBA,GAChB,IAAMgb,E5BzeO,CACrBztC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4B2e7BirC,GAAYuH,EAAkBhb,GAK9B,IAAK,IAAIn5B,EAAI,EAAGA,EAAI6V,KAAKm7B,KAAK3wC,OAAQL,IAAK,CACvC,IAAMipC,EAAOpzB,KAAKm7B,KAAKhxC,GACf+8B,EAAoBkM,EAApBlM,OAAQhyB,EAAYk+B,EAAZl+B,QAChB,GAAIk+B,IAASpzB,KAAKuY,MAAQ2O,GAAUhyB,EAAQ+6B,aAAc,CAKtD,GAAI/I,EAAO0W,OAAQ,CACf7G,GAAYuH,EAAkBhb,GAC9B,IAAgBib,EAAev+B,KAAKuY,KAA5B2O,OAKJqX,IACA7a,GAAc4a,EAAiBztC,GAAI0tC,EAAW7rC,OAAO7B,GACrD6yB,GAAc4a,EAAiBnhC,GAAIohC,EAAW7rC,OAAOyK,GAE7D,CACAumB,GAAc4a,EAAiBztC,EAAGq2B,EAAOx0B,OAAO7B,GAChD6yB,GAAc4a,EAAiBnhC,EAAG+pB,EAAOx0B,OAAOyK,EACpD,CACJ,CACA,OAAOmhC,CACX,GAAC,4BACD,SAAehb,GAA4B,IAAvBkb,EAAgB,UAAH,8CACvBC,E5B1gBO,CACrB5tC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4B4gB7BirC,GAAY0H,EAAgBnb,GAC5B,IAAK,IAAIn5B,EAAI,EAAGA,EAAI6V,KAAKm7B,KAAK3wC,OAAQL,IAAK,CACvC,IAAMipC,EAAOpzB,KAAKm7B,KAAKhxC,IAClBq0C,GACDpL,EAAKl+B,QAAQ+6B,cACbmD,EAAKlM,QACLkM,IAASA,EAAK7a,MACd2L,GAAaua,EAAgB,CACzB5tC,GAAIuiC,EAAKlM,OAAOx0B,OAAO7B,EACvBsM,GAAIi2B,EAAKlM,OAAOx0B,OAAOyK,IAG1BuR,GAAa0kB,EAAK/kB,eAEvB6V,GAAaua,EAAgBrL,EAAK/kB,aACtC,CAIA,OAHIK,GAAa1O,KAAKqO,eAClB6V,GAAaua,EAAgBz+B,KAAKqO,cAE/BowB,CACX,GAAC,6BACD,SAAgBnb,GACZ,IAAIhrB,EACEomC,E5BliBO,CACrB7tC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4BoiB7BirC,GAAY2H,EAAqBpb,GACjC,IAAK,IAAIn5B,EAAI,EAAGA,EAAI6V,KAAKm7B,KAAK3wC,OAAQL,IAAK,CACvC,IAAMipC,EAAOpzB,KAAKm7B,KAAKhxC,GACvB,GAAKipC,EAAKzmB,UAEL+B,GAAa0kB,EAAK/kB,cAAvB,CAEAyU,GAASsQ,EAAK/kB,eAAiB+kB,EAAK0J,iBACpC,IAAMxF,E5B3iBG,CACrBzmC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4B8iBzBirC,GAAYO,EADIlE,EAAKjM,kBAErBkQ,GAAoBqH,EAAqBtL,EAAK/kB,aAAuC,QAAxB/V,EAAK86B,EAAKiF,gBAA6B,IAAP//B,OAAgB,EAASA,EAAGmtB,UAAW6R,EALxH,CAMhB,CAIA,OAHI5oB,GAAa1O,KAAKqO,eAClBgpB,GAAoBqH,EAAqB1+B,KAAKqO,cAE3CqwB,CACX,GACA,4BAGA,SAAe3qC,GACXiM,KAAK2+B,YAAc5qC,EACnBiM,KAAKg6B,mBAAoB,EACzBh6B,KAAKuY,KAAKqmB,0BACd,GAAC,wBACD,SAAW1pC,GACP8K,KAAK9K,SAAU,0BACR8K,KAAK9K,SACLA,GAAO,IACVujC,eAAiCtqC,IAAtB+G,EAAQujC,WAA0BvjC,EAAQujC,WAE7D,GAAC,+BACD,WACIz4B,KAAKknB,YAAS/4B,EACd6R,KAAK2N,YAASxf,EACd6R,KAAKq4B,cAAWlqC,EAChB6R,KAAK48B,gCAA6BzuC,EAClC6R,KAAK2+B,iBAAcxwC,EACnB6R,KAAK5V,YAAS+D,EACd6R,KAAKw4B,eAAgB,CACzB,GACA,gCAGA,WACI,IAAIlgC,EAME29B,EAAOj2B,KAAK6+B,UAOlB,GANA7+B,KAAKg6B,oBAAsBh6B,KAAKg6B,kBAAoB/D,EAAK+D,mBACzDh6B,KAAK0vB,mBAAqB1vB,KAAK0vB,iBAAmBuG,EAAKvG,kBAKlD1vB,KAAKg6B,mBAAsBh6B,KAAK8+B,+BAArC,CAEA,MAA6B9+B,KAAK9K,QAA1ByY,EAAM,EAANA,OAAQxB,EAAQ,EAARA,SAIhB,GAAKnM,KAAK2N,SAAYA,GAAUxB,GAAhC,CAQA,IAAKnM,KAAK2+B,cAAgB3+B,KAAK87B,eAAgB,CAE3C,IAAMiD,EAAiB/+B,KAAKg/B,6BACxBD,GAAkBA,EAAepxB,QACjC3N,KAAK++B,eAAiBA,EACtB/+B,KAAK87B,e5BjnBA,CACrBjrC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4BmnBrBkU,KAAKi/B,qB5BlnBA,CACrBpuC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4BonBrB+1B,GAAqB7hB,KAAKi/B,qBAAsBj/B,KAAK2N,OAAO8X,UAAWsZ,EAAepxB,OAAO8X,WAC7FsR,GAAY/2B,KAAK87B,eAAgB97B,KAAKi/B,uBAGtCj/B,KAAK++B,eAAiB/+B,KAAK87B,oBAAiB3tC,CAEpD,CpCzmBZ,IAAyB/D,EAAQu3B,EAAUpZ,EoC8mB/B,GAAKvI,KAAK87B,gBAAmB97B,KAAK2+B,YAuClC,GAlCK3+B,KAAK5V,SACN4V,KAAK5V,O5BpoBI,CACrByG,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4BsoBzBkU,KAAKk/B,qB5BroBI,CACrBruC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,K4B2oBzBkU,KAAK87B,gBACL97B,KAAKi/B,uBAC2B,QAA9B3mC,EAAK0H,KAAK++B,sBAAmC,IAAPzmC,OAAgB,EAASA,EAAGlO,SpC5nB3DA,EoC6nBO4V,KAAK5V,OpC7nBJu3B,EoC6nBY3hB,KAAK87B,epC7nBPvzB,EoC6nBuBvI,KAAK++B,eAAe30C,OpC5nBlFs3B,GAAiBt3B,EAAOyG,EAAG8wB,EAAS9wB,EAAG0X,EAAO1X,GAC9C6wB,GAAiBt3B,EAAO+S,EAAGwkB,EAASxkB,EAAGoL,EAAOpL,IoCgoB7B6C,KAAK2+B,aACNnyC,QAAQwT,KAAK44B,cAEb54B,KAAK5V,OAAS4V,KAAKm/B,eAAen/B,KAAK2N,OAAO8X,WAG9CsR,GAAY/2B,KAAK5V,OAAQ4V,KAAK2N,OAAO8X,WAEzCpC,GAAcrjB,KAAK5V,OAAQ4V,KAAK2+B,cAMhC5H,GAAY/2B,KAAK5V,OAAQ4V,KAAK2N,OAAO8X,WAKrCzlB,KAAK8+B,+BAAgC,CACrC9+B,KAAK8+B,gCAAiC,EACtC,IAAMC,EAAiB/+B,KAAKg/B,6BACxBD,GACAvyC,QAAQuyC,EAAenG,gBACnBpsC,QAAQwT,KAAK44B,gBAChBmG,EAAe7pC,QAAQ+6B,cACxB8O,EAAe30C,QACf4V,KAAK++B,eAAiBA,EACtB/+B,KAAK87B,e5B9qBA,CACrBjrC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4BgrBrBkU,KAAKi/B,qB5B/qBA,CACrBpuC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4BirBrB+1B,GAAqB7hB,KAAKi/B,qBAAsBj/B,KAAK5V,OAAQ20C,EAAe30C,QAC5E2sC,GAAY/2B,KAAK87B,eAAgB97B,KAAKi/B,uBAGtCj/B,KAAK++B,eAAiB/+B,KAAK87B,oBAAiB3tC,CAEpD,CAjFU,CANA,CAwFd,GAAC,wCACD,WACI,GAAK6R,KAAKuI,SACNua,GAAS9iB,KAAKuI,OAAO8F,gBACrB0U,GAAe/iB,KAAKuI,OAAO8F,cAG/B,OAAKrO,KAAKuI,OAAOuzB,gBACb97B,KAAKuI,OAAOo2B,aACZ3+B,KAAKuI,OAAOrT,QAAQg7B,aACpBlwB,KAAKuI,OAAOoF,OACL3N,KAAKuI,OAGLvI,KAAKuI,OAAOy2B,4BAE3B,GAAC,4BACD,WACI,IAAI1mC,EACI0hC,EAAwCh6B,KAAxCg6B,kBAAmBtK,EAAqB1vB,KAArB0vB,iBAC3B1vB,KAAKg6B,kBAAoBh6B,KAAK0vB,kBAAmB,EACjD,IAAMuG,EAAOj2B,KAAK6+B,UACZO,EAAW5yC,QAAQwT,KAAK44B,eAAiB54B,OAASi2B,EACpDoJ,GAAU,EAKd,GAJIrF,IACAqF,GAAU,GACVD,GAAY1P,IACZ2P,GAAU,IACVA,EAAJ,CAEA,MAA6Br/B,KAAK9K,QAA1ByY,EAAM,EAANA,OAAQxB,EAAQ,EAARA,SAWhB,GANAnM,KAAK+5B,gBAAkBvtC,SAAgC,QAAtB8L,EAAK0H,KAAKuI,cAA2B,IAAPjQ,OAAgB,EAASA,EAAGyhC,kBACvF/5B,KAAK7D,kBACL6D,KAAKs/B,kBACJt/B,KAAK+5B,kBACN/5B,KAAK2+B,YAAc3+B,KAAK87B,oBAAiB3tC,GAExC6R,KAAK2N,SAAYA,GAAUxB,GAAhC,CAMA4qB,GAAY/2B,KAAKy9B,gBAAiBz9B,KAAK2N,OAAO8X,W/BzsB1D,SAAyBnC,EAAKiQ,EAAWgM,GAAsC,IACvEjnC,EAAIC,EADuCinC,EAAqB,UAAH,8CAE3DC,EAAaF,EAAS/0C,OAC5B,GAAKi1C,EAAL,CAIA,IAAIrM,EACAr/B,EAFJw/B,EAAU1iC,EAAI0iC,EAAUp2B,EAAI,EAG5B,IAAK,IAAIhT,EAAI,EAAGA,EAAIs1C,EAAYt1C,IAE5B4J,GADAq/B,EAAOmM,EAASp1C,IACHqpC,gBACuH,cAAjD,QAA7Ej7B,EAA8B,QAAxBD,EAAK86B,EAAKzmB,gBAA6B,IAAPrU,OAAgB,EAASA,EAAGkJ,aAA0B,IAAPjJ,OAAgB,EAASA,EAAGwzB,WAEnHyT,GACApM,EAAKl+B,QAAQ+6B,cACbmD,EAAKlM,QACLkM,IAASA,EAAK7a,MACd2L,GAAaZ,EAAK,CACdzyB,GAAIuiC,EAAKlM,OAAOx0B,OAAO7B,EACvBsM,GAAIi2B,EAAKlM,OAAOx0B,OAAOyK,IAG3BpJ,IAEAw/B,EAAU1iC,GAAKkD,EAAMlD,EAAE8M,MACvB41B,EAAUp2B,GAAKpJ,EAAMoJ,EAAEQ,MAEvB0lB,GAAcC,EAAKvvB,IAEnByrC,GAAsB9wB,GAAa0kB,EAAK/kB,eACxC6V,GAAaZ,EAAK8P,EAAK/kB,eAO/BklB,EAAU1iC,EAAI0yB,GAAcgQ,EAAU1iC,GACtC0iC,EAAUp2B,EAAIomB,GAAcgQ,EAAUp2B,EAnC5B,CAoCd,C+BsqBYuiC,CAAgB1/B,KAAKy9B,gBAAiBz9B,KAAKuzB,UAAWvzB,KAAKm7B,KAAMiE,GACjE,IAAQh1C,EAAW6rC,EAAX7rC,OACR,GAAKA,EAAL,CAEK4V,KAAKwzB,kBACNxzB,KAAKwzB,gB5BrvBM,CACvB3iC,EAP2B,CAC3B2wB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,GAIbpkB,EAR2B,CAC3BqkB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,I4BwvBDvhB,KAAK2/B,6B5BtvBM,CACvB9uC,EAP2B,CAC3B2wB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,GAIbpkB,EAR2B,CAC3BqkB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,K4B0vBL,IAAMqe,EAAiB5/B,KAAKuzB,UAAU1iC,EAChCgvC,EAAiB7/B,KAAKuzB,UAAUp2B,EAChC2iC,EAA0B9/B,KAAK+/B,oBAUrCte,GAAazhB,KAAKwzB,gBAAiBxzB,KAAKy9B,gBAAiBrzC,EAAQ4V,KAAKqO,cACtErO,KAAK+/B,oBAAsBlH,GAAyB74B,KAAKwzB,gBAAiBxzB,KAAKuzB,WAC3EvzB,KAAK+/B,sBAAwBD,GAC7B9/B,KAAKuzB,UAAU1iC,IAAM+uC,GACrB5/B,KAAKuzB,UAAUp2B,IAAM0iC,IACrB7/B,KAAK+6B,cAAe,EACpB/6B,KAAKouB,iBACLpuB,KAAK+8B,gBAAgB,mBAAoB3yC,GAxBnC,CAbA,CAbA,CAoDd,GAAC,kBACD,WACI4V,KAAKg7B,WAAY,CAErB,GAAC,kBACD,WACIh7B,KAAKg7B,WAAY,CAErB,GAAC,4BACD,WAAiC,IACzB1iC,EAAIC,EAAI2iB,EADD8kB,IAAY,UAAH,+CAE0B,QAA7CznC,GAAMD,EAAK0H,KAAK9K,SAASk5B,sBAAmC,IAAP71B,GAAyBA,EAAG3N,KAAK0N,GACvF0nC,IAAyC,QAA1B9kB,EAAKlb,KAAK60B,kBAA+B,IAAP3Z,GAAyBA,EAAGkT,kBACzEpuB,KAAK44B,eAAiB54B,KAAK44B,aAAajsB,WACxC3M,KAAK44B,kBAAezqC,EAE5B,GAAC,gCACD,SAAmB4F,GAA6C,IACxDuE,EAAIC,EADoD,OAAtC8jC,EAA+B,UAAH,8CAE5ChE,EAAWr4B,KAAKq4B,SAChB4H,GAAqC,OAAb5H,QAAkC,IAAbA,OAAsB,EAASA,EAAShqB,eAAiB,CAAC,EACvG6xB,GAAc,UAAKlgC,KAAKqO,cACxBswB,E5BnyBS,CACvB9tC,EAP2B,CAC3B2wB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,GAIbpkB,EAR2B,CAC3BqkB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,I4BsyBAvhB,KAAK++B,gBACL/+B,KAAK++B,eAAe7pC,QAAQg7B,aAC7BlwB,KAAK87B,eAAiB97B,KAAKi/B,0BAAuB9wC,GAEtD6R,KAAK8+B,gCAAkCzC,EACvC,IAAM8D,E5BpyBO,CACrBtvC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4BsyBvBs0C,GAAwC,OAAb/H,QAAkC,IAAbA,OAAsB,EAASA,EAASruC,WAAoC,QAAtBsO,EAAK0H,KAAK2N,cAA2B,IAAPrV,OAAgB,EAASA,EAAGtO,QAChKmsC,IAA4C,QAA1B59B,EAAKyH,KAAK60B,kBAA+B,IAAPt8B,OAAgB,EAASA,EAAGu8B,QAAQtqC,SAAW,IAAM,EACzG0rC,EAAyB1pC,QAAQ4zC,IAClCjK,IAC0B,IAA3Bn2B,KAAK9K,QAAQujC,YACZz4B,KAAKm7B,KAAK/lC,KAAKirC,KACpBrgC,KAAKi7B,kBAAoB,EACzBj7B,KAAKsgC,eAAiB,SAACpY,GACnB,IAAI5vB,EACErI,EAAWi4B,EAAS,IAC1BqY,GAAa5B,EAAY9tC,EAAGkD,EAAMlD,EAAGZ,GACrCswC,GAAa5B,EAAYxhC,EAAGpJ,EAAMoJ,EAAGlN,GACrC,EAAKuwC,eAAe7B,GAChB,EAAK7C,gBACL,EAAKmD,sBACL,EAAKtxB,SAC2B,QAA9BrV,EAAK,EAAKymC,sBAAmC,IAAPzmC,OAAgB,EAASA,EAAGqV,UACpEkU,GAAqBse,EAAgB,EAAKxyB,OAAO8X,UAAW,EAAKsZ,eAAepxB,OAAO8X,WACvFgb,GAAO,EAAK3E,eAAgB,EAAKmD,qBAAsBkB,EAAgBlwC,IAEvEmwC,IACA,EAAK9H,gBAAkB4H,EACvBnK,GAAUmK,EAAaD,EAAsB,EAAK5xB,aAAcpe,EAAUimC,EAAwBC,IAEtG,EAAK5d,KAAKqmB,2BACV,EAAKxQ,iBACL,EAAK6M,kBAAoBhrC,CAC7B,EACA+P,KAAKsgC,eAAetgC,KAAK9K,QAAQg7B,WAAa,IAAO,EACzD,GAAC,4BACD,SAAeh7B,GAAS,IAChBoD,EAAIC,EADY,OAEpByH,KAAK+8B,gBAAgB,kBACY,QAAhCzkC,EAAK0H,KAAK7D,wBAAqC,IAAP7D,GAAyBA,EAAGH,OACjE6H,KAAK44B,eACyC,QAA7CrgC,EAAKyH,KAAK44B,aAAaz8B,wBAAqC,IAAP5D,GAAyBA,EAAGJ,QAElF6H,KAAKs/B,mBACLlnC,GAAAA,GAAAA,OAAkB4H,KAAKs/B,kBACvBt/B,KAAKs/B,sBAAmBnxC,GAO5B6R,KAAKs/B,iBAAmBpnC,GAAAA,GAAAA,QAAY,WAChC4S,EAAsBC,wBAAyB,EAC/C,EAAK5O,iBCj0BrB,SAAiB3Q,EAAMC,GAAqB,IAAjB2S,EAAa,UAAH,6CAAG,CAAC,EAC/B5L,GAAQod,EAAAA,EAAAA,GAAcpkB,GAAQA,GAAOs9B,EAAAA,GAAAA,GAAYt9B,GAEvD,OADAgH,EAAMyF,OAAMyG,EAAAA,GAAAA,GAA2B,GAAIlM,EAAO/G,EAAI2S,IAC/C,CACHjG,KAAM,kBAAM3F,EAAM2F,MAAM,EACxBuoC,YAAa,kBAAMluC,EAAMkuC,aAAa,EAE9C,CD0zBwCroC,CAAQ,EAr0BxB,KAq0B4C,kBAC7CnD,GAAO,IACVmE,SAAU,SAAC6uB,GACP,IAAI5vB,EACJ,EAAKgoC,eAAepY,GACQ,QAA3B5vB,EAAKpD,EAAQmE,gBAA6B,IAAPf,GAAyBA,EAAG1N,KAAKsK,EAASgzB,EAClF,EACA/uB,WAAY,WACR,IAAIb,EAC0B,QAA7BA,EAAKpD,EAAQiE,kBAA+B,IAAPb,GAAyBA,EAAG1N,KAAKsK,GACvE,EAAKyrC,mBACT,KAEA,EAAK/H,eACL,EAAKA,aAAaz8B,iBAAmB,EAAKA,kBAE9C,EAAKmjC,sBAAmBnxC,CAC5B,GACJ,GAAC,+BACD,WACI,IAAImK,EACA0H,KAAK44B,eACL54B,KAAK44B,aAAaz8B,sBAAmBhO,EACrC6R,KAAK44B,aAAaR,qBAAkBjqC,GAEb,QAA1BmK,EAAK0H,KAAK60B,kBAA+B,IAAPv8B,GAAyBA,EAAGsoC,wBAC/D5gC,KAAK44B,aACD54B,KAAK7D,iBACD6D,KAAKs4B,qBACDnqC,EACZ6R,KAAK+8B,gBAAgB,oBACzB,GAAC,6BACD,WACI,IAAIzkC,EACA0H,KAAK7D,mBAC0B,QAA9B7D,EAAK0H,KAAKsgC,sBAAmC,IAAPhoC,GAAyBA,EAAG1N,KAAKoV,KAx2BhE,KAy2BRA,KAAK7D,iBAAiBhE,QAE1B6H,KAAK2gC,mBACT,GAAC,qCACD,WACI,IAAM1K,EAAOj2B,KAAK6+B,UACZK,EAAuDjJ,EAAvDiJ,qBAAsB90C,EAAiC6rC,EAAjC7rC,OAAQujB,EAAyBsoB,EAAzBtoB,OAAQU,EAAiB4nB,EAAjB5nB,aAC5C,GAAK6wB,GAAyB90C,GAAWujB,EAAzC,CAOA,GAAI3N,OAASi2B,GACTj2B,KAAK2N,QACLA,GACAkzB,GAA0B7gC,KAAK9K,QAAQm7B,cAAerwB,KAAK2N,OAAO8X,UAAW9X,EAAO8X,WAAY,CAChGr7B,EAAS4V,KAAK5V,Q5B34BL,CACrByG,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4B64BzB,IAAMg1C,EAAU5f,GAAWlhB,KAAK2N,OAAO8X,UAAU50B,GACjDzG,EAAOyG,EAAE2F,IAAMy/B,EAAK7rC,OAAOyG,EAAE2F,IAC7BpM,EAAOyG,EAAE/E,IAAM1B,EAAOyG,EAAE2F,IAAMsqC,EAC9B,IAAMC,EAAU7f,GAAWlhB,KAAK2N,OAAO8X,UAAUtoB,GACjD/S,EAAO+S,EAAE3G,IAAMy/B,EAAK7rC,OAAO+S,EAAE3G,IAC7BpM,EAAO+S,EAAErR,IAAM1B,EAAO+S,EAAE3G,IAAMuqC,CAClC,CACAhK,GAAYmI,EAAsB90C,GAMlC85B,GAAagb,EAAsB7wB,GAOnCoT,GAAazhB,KAAK2/B,6BAA8B3/B,KAAKy9B,gBAAiByB,EAAsB7wB,EA/BlF,CAgCd,GAAC,gCACD,SAAmBlC,EAAUinB,GACzB,IAAI96B,EAAIC,EAAI2iB,EACPlb,KAAKk7B,YAAYjgC,IAAIkR,IACtBnM,KAAKk7B,YAAYt/B,IAAIuQ,EAAU,IAAIwrB,IAEzB33B,KAAKk7B,YAAY58B,IAAI6N,GAC7BrH,IAAIsuB,GACVA,EAAKuB,QAAQ,CACTv2B,WAA2D,QAA9C9F,EAAK86B,EAAKl+B,QAAQo7B,8BAA2C,IAAPh4B,OAAgB,EAASA,EAAG8F,WAC/F65B,sBAAiJ,QAAzH/c,EAAoD,QAA9C3iB,EAAK66B,EAAKl+B,QAAQo7B,8BAA2C,IAAP/3B,OAAgB,EAASA,EAAGyoC,mCAAgD,IAAP9lB,OAAgB,EAASA,EAAGtwB,KAAK2N,EAAI66B,IAEtM,GAAC,oBACD,WACI,IAAM6N,EAAQjhC,KAAK60B,WACnB,OAAOoM,GAAQA,EAAMhL,OAASj2B,IAClC,GAAC,qBACD,WACI,IAAI1H,EAEJ,OADqB0H,KAAK9K,QAAlBiX,WACsC,QAA1B7T,EAAK0H,KAAK60B,kBAA+B,IAAPv8B,OAAgB,EAASA,EAAG29B,OAAgBj2B,IACtG,GAAC,yBACD,WACI,IAAI1H,EAEJ,OADqB0H,KAAK9K,QAAlBiX,SACqC,QAA1B7T,EAAK0H,KAAK60B,kBAA+B,IAAPv8B,OAAgB,EAASA,EAAGw/B,cAAW3pC,CAChG,GAAC,sBACD,WACI,IAAQge,EAAanM,KAAK9K,QAAlBiX,SACR,GAAIA,EACA,OAAOnM,KAAKuY,KAAK2iB,YAAY58B,IAAI6N,EACzC,GAAC,qBACD,WAAiE,6DAAJ,CAAC,EAApDiuB,EAAU,EAAVA,WAAYh8B,EAAU,EAAVA,WAAY65B,EAAqB,EAArBA,sBACxBgJ,EAAQjhC,KAAK60B,WACfoM,GACAA,EAAMtM,QAAQ30B,KAAMi4B,GACpBmC,IACAp6B,KAAKwzB,qBAAkBrlC,EACvB6R,KAAKo6B,YAAa,GAElBh8B,GACA4B,KAAKmwB,WAAW,CAAE/xB,WAAAA,GAC1B,GAAC,sBACD,WACI,IAAM6iC,EAAQjhC,KAAK60B,WACnB,QAAIoM,GACOA,EAAMrM,SAAS50B,KAK9B,GAAC,2BACD,WACI,IAAQb,EAAkBa,KAAK9K,QAAvBiK,cACR,GAAKA,EAAL,CAGA,IAAI+hC,GAAY,EAKR7yB,EAAiBlP,EAAjBkP,aAQR,IAPIA,EAAahR,QACbgR,EAAa/Q,SACb+Q,EAAa9Q,SACb8Q,EAAa7Q,WACb0jC,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZh3C,EAAI,EAAGA,EAAImvC,GAAc9uC,OAAQL,IAAK,CAC3C,IAAMD,EAAM,SAAWovC,GAAcnvC,GAEjCkkB,EAAankB,KACbi3C,EAAYj3C,GAAOmkB,EAAankB,GAChCiV,EAAc6sB,eAAe9hC,EAAK,GAE1C,CAKA,IAAK,IAAMA,KAFO,OAAlBiV,QAA4C,IAAlBA,GAAoCA,EAAc4J,SAE1Do4B,EACdhiC,EAAc6sB,eAAe9hC,EAAKi3C,EAAYj3C,IAIlDiV,EAAcivB,gBApBJ,CAhBA,CAqCd,GAAC,iCACD,WAAoC,IAC5B91B,EAAIC,EADQ2a,EAAY,UAAH,6CAAG,CAAC,EAGvBkuB,EAAS,CAAC,EAChB,IAAKphC,KAAK2M,UAAY3M,KAAKm6B,MACvB,OAAOiH,EACX,IAAKphC,KAAKg7B,UACN,MAAO,CAAEqG,WAAY,UAGrBD,EAAOC,WAAa,GAExB,IAAM/yB,EAAoBtO,KAAK68B,uBAC/B,GAAI78B,KAAKo6B,WAQL,OAPAp6B,KAAKo6B,YAAa,EAClBgH,EAAOxjC,QAAU,GACjBwjC,EAAOE,cACHttB,GAAmBd,EAAUouB,gBAAkB,GACnDF,EAAOjzB,UAAYG,EACbA,EAAkBtO,KAAKqO,aAAc,IACrC,OACC+yB,EAEX,IAAMnL,EAAOj2B,KAAK6+B,UAClB,IAAK7+B,KAAKwzB,kBAAoBxzB,KAAK2N,SAAWsoB,EAAK7rC,OAAQ,CACvD,IAAMm3C,EAAc,CAAC,EAerB,OAdIvhC,KAAK9K,QAAQiX,WACbo1B,EAAY3jC,aACsBzP,IAA9B6R,KAAKqO,aAAazQ,QACZoC,KAAKqO,aAAazQ,QAClB,EACV2jC,EAAYD,cACRttB,GAAmBd,EAAUouB,gBAAkB,IAEnDthC,KAAK+6B,eAAiBrsB,GAAa1O,KAAKqO,gBACxCkzB,EAAYpzB,UAAYG,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNtO,KAAK+6B,cAAe,GAEjBwG,CACX,CACA,IAAMC,EAAiBvL,EAAKqC,iBAAmBrC,EAAK5nB,aACpDrO,KAAKyhC,0BACLL,EAAOjzB,UAAY0qB,GAAyB74B,KAAK2/B,6BAA8B3/B,KAAKuzB,UAAWiO,GAC3FlzB,IACA8yB,EAAOjzB,UAAYG,EAAkBkzB,EAAgBJ,EAAOjzB,YAEhE,MAAiBnO,KAAKwzB,gBAAd3iC,EAAC,EAADA,EAAGsM,EAAC,EAADA,EA+BX,IAAK,IAAMjT,KA9BXk3C,EAAO3yB,gBAAkB,GAAH,OAAiB,IAAX5d,EAAEnD,OAAY,aAAgB,IAAXyP,EAAEzP,OAAY,OACzDuoC,EAAKqC,gBAKL8I,EAAOxjC,QACHq4B,IAASj2B,KACiG,QAAnGzH,EAAuC,QAAjCD,EAAKkpC,EAAe5jC,eAA4B,IAAPtF,EAAgBA,EAAK0H,KAAKqO,aAAazQ,eAA4B,IAAPrF,EAAgBA,EAAK,EACjIyH,KAAKo4B,gBACDp4B,KAAKqO,aAAazQ,QAClB4jC,EAAenL,YAO7B+K,EAAOxjC,QACHq4B,IAASj2B,UACwB7R,IAA3BqzC,EAAe5jC,QACX4jC,EAAe5jC,QACf,QAC2BzP,IAA/BqzC,EAAenL,YACXmL,EAAenL,YACf,EAKA5oB,EACd,QAA4Btf,IAAxBqzC,EAAet3C,GAAnB,CAEA,MAA6BujB,EAAgBvjB,GAArCipC,EAAO,EAAPA,QAASiC,EAAO,EAAPA,QAOXsM,EAAiC,SAArBN,EAAOjzB,UACnBqzB,EAAet3C,GACfipC,EAAQqO,EAAet3C,GAAM+rC,GACnC,GAAIb,EAEA,IADA,IAAMuM,EAAMvM,EAAQ5qC,OACXL,EAAI,EAAGA,EAAIw3C,EAAKx3C,IACrBi3C,EAAOhM,EAAQjrC,IAAMu3C,OAIzBN,EAAOl3C,GAAOw3C,CAlBN,CAgChB,OANI1hC,KAAK9K,QAAQiX,WACbi1B,EAAOE,cACHrL,IAASj2B,KACHgU,GAAmBd,EAAUouB,gBAAkB,GAC/C,QAEPF,CACX,GAAC,2BACD,WACIphC,KAAKm4B,WAAan4B,KAAKq4B,cAAWlqC,CACtC,GACA,uBACA,WACI6R,KAAKuY,KAAKoiB,MAAM73B,SAAQ,SAACswB,GAAW,IAAI96B,EAAI,OAAwC,QAAhCA,EAAK86B,EAAKj3B,wBAAqC,IAAP7D,OAAgB,EAASA,EAAGH,MAAQ,IAChI6H,KAAKuY,KAAKoiB,MAAM73B,QAAQm6B,IACxBj9B,KAAKuY,KAAK2iB,YAAYx2B,OAC1B,KAAC,EAtmCL,EAwmCJ,CACA,SAAS4jB,GAAa8K,GAClBA,EAAK9K,cACT,CACA,SAAS8U,GAAmBhK,GACxB,IAAI96B,EAAIC,EAAI2iB,EACNmd,GAAuC,QAA1B//B,EAAK86B,EAAK+E,kBAA+B,IAAP7/B,OAAgB,EAASA,EAAG+/B,WAAajF,EAAKiF,SACnG,GAAIjF,EAAK2B,UACL3B,EAAKzlB,QACL0qB,GACAjF,EAAKwO,aAAa,aAAc,CAChC,MAA2DxO,EAAKzlB,OAA7CA,EAAM,EAAjB8X,UAAgCoc,EAAc,EAA3BxD,YACnBhO,EAAkB+C,EAAKl+B,QAAvBm7B,cACF+O,EAAW/G,EAASruC,SAAWopC,EAAKzlB,OAAO3jB,OAG3B,SAAlBqmC,EACA5N,IAAS,SAACtB,GACN,IAAM2gB,EAAe1C,EACf/G,EAASgG,YAAYld,GACrBkX,EAAS5S,UAAUtE,GACnB32B,EAAS02B,GAAW4gB,GAC1BA,EAAatrC,IAAMmX,EAAOwT,GAAM3qB,IAChCsrC,EAAah2C,IAAMg2C,EAAatrC,IAAMhM,CAC1C,IAEKq2C,GAA0BxQ,EAAegI,EAAS5S,UAAW9X,IAClE8U,IAAS,SAACtB,GACN,IAAM2gB,EAAe1C,EACf/G,EAASgG,YAAYld,GACrBkX,EAAS5S,UAAUtE,GACnB32B,EAAS02B,GAAWvT,EAAOwT,IACjC2gB,EAAah2C,IAAMg2C,EAAatrC,IAAMhM,CAC1C,IAEJ,IAAMu3C,E5BnqCa,CACvBlxC,EAP2B,CAC3B2wB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,GAIbpkB,EAR2B,CAC3BqkB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,I4BsqCTE,GAAasgB,EAAap0B,EAAQ0qB,EAAS5S,WAC3C,IAAMuc,E5BrqCa,CACvBnxC,EAP2B,CAC3B2wB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,GAIbpkB,EAR2B,CAC3BqkB,UAAW,EACX7jB,MAAO,EACPjQ,OAAQ,EACR6zB,YAAa,I4BwqCL6d,EACA3d,GAAaugB,EAAa5O,EAAK+L,eAAe0C,GAAgB,GAAOxJ,EAASgG,aAG9E5c,GAAaugB,EAAar0B,EAAQ0qB,EAAS5S,WAE/C,IAAMoD,GAAoB2O,GAAYuK,GAClCpG,GAA2B,EAC/B,IAAKvI,EAAK+E,WAAY,CAClB,IAAM4G,EAAiB3L,EAAK4L,6BAK5B,GAAID,IAAmBA,EAAe5G,WAAY,CAC9C,IAAkB8J,EAAyClD,EAAnD1G,SAAkC6J,EAAiBnD,EAAzBpxB,OAClC,GAAIs0B,GAAkBC,EAAc,CAChC,IAAMC,E5BlrCD,CACrBtxC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4BorCrB+1B,GAAqBsgB,EAAkB9J,EAAS5S,UAAWwc,EAAexc,WAC1E,IAAM0a,E5BprCD,CACrBtvC,EAFsB,CAAE2F,IAAK,EAAG1K,IAAK,GAGrCqR,EAHsB,CAAE3G,IAAK,EAAG1K,IAAK,I4BsrCrB+1B,GAAqBse,EAAgBxyB,EAAQu0B,EAAazc,WACrDgS,GAAU0K,EAAkBhC,KAC7BxE,GAA2B,GAE3BoD,EAAe7pC,QAAQg7B,aACvBkD,EAAK0I,eAAiBqE,EACtB/M,EAAK6L,qBAAuBkD,EAC5B/O,EAAK2L,eAAiBA,EAE9B,CACJ,CACJ,CACA3L,EAAK2J,gBAAgB,YAAa,CAC9BpvB,OAAAA,EACA0qB,SAAAA,EACAtkC,MAAOiuC,EACPD,YAAAA,EACAlZ,iBAAAA,EACA8S,yBAAAA,GAER,MACSvI,EAAK2B,WACoC,QAA7C7Z,GAAM3iB,EAAK66B,EAAKl+B,SAASgN,sBAAmC,IAAPgZ,GAAyBA,EAAGtwB,KAAK2N,IAO3F66B,EAAKl+B,QAAQkJ,gBAAajQ,CAC9B,CACA,SAASysC,GAAoBxH,GAKzBA,EAAK4G,oBAAsB5G,EAAK4G,kBAAoBxtC,QAAQ4mC,EAAK7qB,QAAU6qB,EAAK7qB,OAAOyxB,oBAIvF5G,EAAK1D,mBAAqB0D,EAAK1D,iBAAmBljC,QAAQ4mC,EAAK7qB,QAAU6qB,EAAK7qB,OAAOmnB,kBACzF,CACA,SAAS2N,GAAcjK,GACnBA,EAAKiK,eACT,CACA,SAASJ,GAAkB7J,GACvBA,EAAK6J,mBACT,CACA,SAASE,GAAoB/J,GACzB,IAAQj0B,EAAkBi0B,EAAKl+B,QAAvBiK,eACc,OAAlBA,QAA4C,IAAlBA,OAA2B,EAASA,EAAcE,WAAW+iC,wBACvFjjC,EAAc8uB,OAAO,uBAEzBmF,EAAKwG,gBACT,CACA,SAAS6B,GAAgBrI,GACrBA,EAAKqI,kBACLrI,EAAKuL,YAAcvL,EAAK0I,eAAiB1I,EAAKhpC,YAAS+D,CAC3D,CACA,SAAS0sC,GAAmBzH,GACxBA,EAAKyH,oBACT,CACA,SAASC,GAAe1H,GACpBA,EAAK0H,gBACT,CACA,SAAS2B,GAAcrJ,GACnBA,EAAKqJ,eACT,CACA,SAASa,GAAoB2D,GACzBA,EAAMoB,oBACV,CACA,SAAS9B,GAAa1yC,EAAQkG,EAAOhJ,GACjC8C,EAAO2zB,WAAYh0B,EAAAA,GAAAA,GAAIuG,EAAMytB,UAAW,EAAGz2B,GAC3C8C,EAAO8P,OAAQnQ,EAAAA,GAAAA,GAAIuG,EAAM4J,MAAO,EAAG5S,GACnC8C,EAAOH,OAASqG,EAAMrG,OACtBG,EAAO0zB,YAAcxtB,EAAMwtB,WAC/B,CACA,SAAS+gB,GAAQz0C,EAAQrC,EAAMC,EAAIV,GAC/B8C,EAAO2I,KAAMhJ,EAAAA,GAAAA,GAAIhC,EAAKgL,IAAK/K,EAAG+K,IAAKzL,GACnC8C,EAAO/B,KAAM0B,EAAAA,GAAAA,GAAIhC,EAAKM,IAAKL,EAAGK,IAAKf,EACvC,CACA,SAAS01C,GAAO5yC,EAAQrC,EAAMC,EAAIV,GAC9Bu3C,GAAQz0C,EAAOgD,EAAGrF,EAAKqF,EAAGpF,EAAGoF,EAAG9F,GAChCu3C,GAAQz0C,EAAOsP,EAAG3R,EAAK2R,EAAG1R,EAAG0R,EAAGpS,EACpC,CACA,SAASs1C,GAAoBjN,GACzB,OAAQA,EAAKkF,sBAAwDnqC,IAArCilC,EAAKkF,gBAAgBjC,WACzD,CACA,IAAM2F,GAA0B,CAC5B7pC,SAAU,IACVpD,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAASmuC,GAAe9J,EAAMyG,GAM1B,IADA,IAAI0I,EAAanP,EAAK7a,KACbpuB,EAAIipC,EAAK+H,KAAK3wC,OAAS,EAAGL,GAAK,EAAGA,IACvC,GAAIqC,QAAQ4mC,EAAK+H,KAAKhxC,GAAGwiB,UAAW,CAChC41B,EAAanP,EAAK+H,KAAKhxC,GACvB,KACJ,CAEJ,IACMkR,GADgBknC,GAAcA,IAAenP,EAAK7a,KAAOgqB,EAAW51B,SAAWlL,UACvD+gC,cAAc,wBAAD,OAAyB3I,EAAS,OACzEx+B,GACA+3B,EAAKxmB,MAAMvR,GAAS,EAC5B,CACA,SAASonC,GAAUthB,GACfA,EAAK3qB,IAAM5K,KAAKsB,MAAMi0B,EAAK3qB,KAC3B2qB,EAAKr1B,IAAMF,KAAKsB,MAAMi0B,EAAKr1B,IAC/B,CACA,SAASsyC,GAAS9a,GACdmf,GAAUnf,EAAIzyB,GACd4xC,GAAUnf,EAAInmB,EAClB,CACA,SAAS0jC,GAA0BxQ,EAAegI,EAAU1qB,GACxD,MAA0B,aAAlB0iB,GACe,oBAAlBA,IACIjP,GAAOsW,GAAYW,GAAWX,GAAY/pB,GAAS,GAChE,CEtzCA,IAAM+0B,GAAyBnJ,GAAqB,CAChDC,qBAAsB,SAACr4B,EAAK8sB,GAAM,OAAKtY,GAAYxU,EAAK,SAAU8sB,EAAO,EACzEyL,cAAe,iBAAO,CAClB7oC,EAAG4Q,SAASkhC,gBAAgBC,YAAcnhC,SAASohC,KAAKD,WACxDzlC,EAAGsE,SAASkhC,gBAAgBG,WAAarhC,SAASohC,KAAKC,UAC1D,EACDnJ,kBAAmB,kBAAM,CAAI,ICN3B3S,GAAqB,CACvBrwB,aAASxI,GAEP40C,GAAqBxJ,GAAqB,CAC5CG,cAAe,SAAC/sB,GAAQ,MAAM,CAC1B9b,EAAG8b,EAASi2B,WACZzlC,EAAGwP,EAASm2B,UACf,EACDrJ,cAAe,WACX,IAAKzS,GAAmBrwB,QAAS,CAC7B,IAAMqsC,EAAe,IAAIN,GAAuB,EAAG,CAAC,GACpDM,EAAap2B,MAAM/G,QACnBm9B,EAAa7S,WAAW,CAAEF,cAAc,IACxCjJ,GAAmBrwB,QAAUqsC,CACjC,CACA,OAAOhc,GAAmBrwB,OAC9B,EACAijC,eAAgB,SAACjtB,EAAUna,GACvBma,EAASnL,MAAM2M,eAAsBhgB,IAAVqE,EAAsBA,EAAQ,MAC7D,EACAmnC,kBAAmB,SAAChtB,GAAQ,OAAKngB,QAAuD,UAA/CqZ,OAAOmkB,iBAAiBrd,GAAUs2B,SAAqB,ICb9FC,IAAgB,kCACf1mB,IACArC,IACA3P,IACAkrB,IAQDyN,GAAuBn2B,GAAkB,SAAC5E,EAAWiM,GAAM,OCjBjE,SAA+BjM,EAAW,EAAgCqD,EAAmBnD,EAAqBoD,GAA2B,QAAjGsF,mBAAAA,OAAkB,IAAG,GAAK,EAC5DoyB,EAAa71B,EAAenF,GAC5BkN,GACAI,GACN,OAAO,kBACA0tB,GAAU,IACb33B,kBAAAA,EACAE,UAAWmH,GAAgB9B,GAC3B1I,oBAAAA,EACAoD,0BAAAA,EACAtD,UAAAA,GAER,CDKsEi7B,CAAsBj7B,EAAWiM,EAAQ6uB,GAAenQ,GAAwBgQ,GAAmB,G,uDEnBzK,IAAMpvB,EAAc,SAAC2vB,GAAG,OAAKA,EAAI1P,QAAQ,kBAAmB,SAASnhB,aAAa,C,yFCClF,SAASlU,EAAkBrU,EAAKsI,GAC5B,IAAI8F,EACAirC,GAAmB/Q,EAAAA,EAAAA,GAAoBtoC,GAI3C,OAHIq5C,IAAqBjX,EAAAA,IACrBiX,EAAmBl1C,EAAAA,GAE8B,QAA7CiK,EAAKirC,EAAiBhlC,yBAAsC,IAAPjG,OAAgB,EAASA,EAAG1N,KAAK24C,EAAkB/wC,EACpH,C,mGCJMgxC,GAAoB,kBACnB10B,EAAAA,GAAgB,IAEnB1iB,MAAAA,EAAAA,EACAyR,gBAAiBzR,EAAAA,EACjBq3C,aAAcr3C,EAAAA,EACdkP,KAAMlP,EAAAA,EACNs3C,OAAQt3C,EAAAA,EAERu3C,YAAav3C,EAAAA,EACbw3C,eAAgBx3C,EAAAA,EAChBy3C,iBAAkBz3C,EAAAA,EAClB03C,kBAAmB13C,EAAAA,EACnB23C,gBAAiB33C,EAAAA,EACjBkgC,OAAAA,EAAAA,EACA0X,aAAc1X,EAAAA,IAKZkG,EAAsB,SAACtoC,GAAG,OAAKs5C,EAAkBt5C,EAAI,C,gHCnBrD+5C,EAAsB,CAACxZ,EAAAA,GAAQtZ,EAAAA,GAAIoU,EAAAA,GAAS2e,EAAAA,GAASC,EAAAA,GAAIC,EAAAA,GCLlD,CACT73C,KAAM,SAACb,GAAC,MAAW,SAANA,CAAY,EACzBgB,MAAO,SAAChB,GAAC,OAAKA,CAAC,IDObmhC,EAAyB,SAACnhC,GAAC,OAAKu4C,EAAoB33C,MAAK+3C,EAAAA,EAAAA,GAAc34C,GAAG,C,yFEV1E44C,GAAM,kBACL7Z,EAAAA,IAAM,IACTtc,UAAWviB,KAAKsB,QCAd4hB,EAAmB,CAErBy1B,YAAapzB,EAAAA,GACbqzB,eAAgBrzB,EAAAA,GAChBszB,iBAAkBtzB,EAAAA,GAClBuzB,kBAAmBvzB,EAAAA,GACnBwzB,gBAAiBxzB,EAAAA,GACjBgkB,aAAchkB,EAAAA,GACdyzB,OAAQzzB,EAAAA,GACRkkB,oBAAqBlkB,EAAAA,GACrBmkB,qBAAsBnkB,EAAAA,GACtBqkB,wBAAyBrkB,EAAAA,GACzBokB,uBAAwBpkB,EAAAA,GAExB3Q,MAAO2Q,EAAAA,GACP0zB,SAAU1zB,EAAAA,GACV7Q,OAAQ6Q,EAAAA,GACR2zB,UAAW3zB,EAAAA,GACX/Q,KAAM+Q,EAAAA,GACNzQ,IAAKyQ,EAAAA,GACLwR,MAAOxR,EAAAA,GACPyR,OAAQzR,EAAAA,GACRvQ,KAAMuQ,EAAAA,GAEN4zB,QAAS5zB,EAAAA,GACTsa,WAAYta,EAAAA,GACZqa,aAAcra,EAAAA,GACdua,cAAeva,EAAAA,GACfoa,YAAapa,EAAAA,GACbkI,OAAQlI,EAAAA,GACR6zB,UAAW7zB,EAAAA,GACX8zB,YAAa9zB,EAAAA,GACb+zB,aAAc/zB,EAAAA,GACdg0B,WAAYh0B,EAAAA,GAEZ9T,OAAQ6mC,EAAAA,GACR5mC,QAAS4mC,EAAAA,GACT3mC,QAAS2mC,EAAAA,GACT1mC,QAAS0mC,EAAAA,GACTvmC,MAAAA,EAAAA,GACAF,OAAQE,EAAAA,GACRD,OAAQC,EAAAA,GACRynC,OAAQznC,EAAAA,GACR0nC,KAAMnB,EAAAA,GACNoB,MAAOpB,EAAAA,GACPqB,MAAOrB,EAAAA,GACPjlB,SAAU9N,EAAAA,GACVq0B,WAAYr0B,EAAAA,GACZs0B,WAAYt0B,EAAAA,GACZu0B,WAAYv0B,EAAAA,GACZtgB,EAAGsgB,EAAAA,GACHhU,EAAGgU,EAAAA,GACH/T,EAAG+T,EAAAA,GACHw0B,YAAax0B,EAAAA,GACbrD,qBAAsBqD,EAAAA,GACtBvT,QAAS9Q,EAAAA,GACTyiB,QAASq2B,EAAAA,GACTp2B,QAASo2B,EAAAA,GACTn2B,QAAS0B,EAAAA,GAET00B,OAAQvB,EAERwB,YAAah5C,EAAAA,GACbi5C,cAAej5C,EAAAA,GACfk5C,WAAY1B,E,uDCjEhB,IAAMD,EAAgB,SAAC34C,GAAC,OAAK,SAACW,GAAI,OAAKA,EAAKE,KAAKb,EAAE,E,8ECAnD,IAAMsiB,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEJ,EAAiB,IAAI9S,IAAIkT,E,0JCtBzBi4B,EAA+B,SAAUtyB,E,QAAAA,GADjB,kB,qDCM9B,SAAS+I,EAAqBvd,EAAepN,GAA0B,IAE/D6H,EAFiD1E,EAAU,UAAH,6CAAG,CAAC,EAGhE,GAFAiK,EAAc8uB,OAAO,iBAAkBl8B,GAEnC5C,MAAMC,QAAQ2C,GAAa,CAC3B,IAAMyqB,EAAazqB,EAAW/D,KAAI,SAACk4C,GAAO,OAAKC,EAAehnC,EAAe+mC,EAAShxC,EAAQ,IAC9F0E,EAAY6iB,QAAQxD,IAAIuD,EAC5B,MACK,GAA0B,kBAAfzqB,EACZ6H,EAAYusC,EAAehnC,EAAepN,EAAYmD,OAErD,CACD,IAAMkxC,EAA2C,oBAAfr0C,GAC5BgrB,EAAAA,EAAAA,GAAe5d,EAAepN,EAAYmD,EAAQiN,QAClDpQ,EACN6H,EAAYysC,EAAclnC,EAAeinC,EAAoBlxC,EACjE,CACA,OAAO0E,EAAUolB,MAAK,kBAAM7f,EAAc8uB,OAAO,oBAAqBl8B,EAAW,GACrF,CACA,SAASo0C,EAAehnC,EAAe+mC,GAAuB,IACtD5tC,EADwCpD,EAAU,UAAH,6CAAG,CAAC,EAEjD+f,GAAW8H,EAAAA,EAAAA,GAAe5d,EAAe+mC,EAAShxC,EAAQiN,QAChE,EAAkE8S,GAAY,CAAC,EAAC,IAA1E7W,WAAAA,OAAU,IAAG,EAAAe,EAAcpB,wBAA0B,CAAC,EAAC,EACzD7I,EAAQoxC,qBACRloC,EAAalJ,EAAQoxC,oBAMzB,IAAMC,EAAetxB,EACf,kBAAMoxB,EAAclnC,EAAe8V,EAAU/f,EAAQ,EACrD,kBAAMunB,QAAQgC,SAAS,EAKvB+nB,GAA+D,QAAxCluC,EAAK6G,EAAcuf,uBAAoC,IAAPpmB,OAAgB,EAASA,EAAG8H,MACnG,WAAsB,IAArBqmC,EAAe,UAAH,6CAAG,EACd,EAAkEroC,EAAU,IAApEqB,cAAAA,OAAa,IAAG,IAAC,EAAEC,EAAe,EAAfA,gBAAiBC,EAAgB,EAAhBA,iBAC5C,OAAO+mC,EAAgBvnC,EAAe+mC,EAASzmC,EAAgBgnC,EAAc/mC,EAAiBC,EAAkBzK,EACpH,EACE,kBAAMunB,QAAQgC,SAAS,EAK7B,EAAiBrgB,EAAToB,EAAI,EAAJA,KACR,GAAIA,EAAM,CACN,MAA+B,mBAATA,EAChB,CAAC+mC,EAAcC,GACf,CAACA,EAAoBD,GAAa,eAFjCI,EAAK,KAAEC,EAAI,KAGlB,OAAOD,IAAQ3nB,KAAK4nB,EACxB,CAEI,OAAOnqB,QAAQxD,IAAI,CAACstB,IAAgBC,EAAmBtxC,EAAQ2C,QAEvE,CAIA,SAASwuC,EAAclnC,EAAepN,GAA0D,IACxFuG,EADwF,yDAAJ,CAAC,EAAC,IAA1CT,MAAAA,OAAK,IAAG,IAAC,EAAEyuC,EAAkB,EAAlBA,mBAAoBj6C,EAAI,EAAJA,KAE/E,EAAsF8S,EAAc0nC,qBAAqB90C,GAAW,IAA9HqM,WAAAA,OAAU,IAAG,EAAAe,EAAcpB,uBAAsB,EAAEoX,EAAa,EAAbA,cAAkB/qB,GAAM,YAC3EmkC,EAAapvB,EAAc6oB,SAAS,cACtCse,IACAloC,EAAakoC,GACjB,IAAM9pB,EAAa,GACbsqB,EAAqBz6C,IAAiD,QAAvCiM,EAAK6G,EAAc+J,sBAAmC,IAAP5Q,OAAgB,EAASA,EAAGumB,WAAWxyB,IAAO,cAE9H,IAAMmG,EAAQ2M,EAAc6oB,SAAS99B,GAC/BkrB,EAAchrB,EAAOF,GAC3B,IAAKsI,QACerE,IAAhBinB,GACC0xB,GACGC,EAAqBD,EAAoB58C,GAAO,iBAGxD,IAAMyU,GAAkB,QAAE9G,MAAAA,EAAOD,QAAS,GAAMwG,GAKhD,GAAIyH,OAAOmD,0BAA4BxW,EAAMw+B,YAAa,CACtD,IAAMgW,EAAW7nC,EAAcE,WAAW4mC,GACtCe,IACAroC,EAAgB/G,QAAUiO,OAAOmD,wBAAwBg+B,EAAU98C,EAAKsI,EAAO0F,EAAAA,IAEvF,CACA,IAAI0B,EAAYpH,EAAMyF,OAAMyG,EAAAA,EAAAA,GAA2BxU,EAAKsI,EAAO4iB,EAAajW,EAAcwuB,oBAAsB/f,EAAAA,EAAAA,IAAmB1jB,GACjI,CAAEmC,MAAM,GACRsS,KACF8vB,EAAAA,EAAAA,GAAwBF,KACxBA,EAAWzpB,IAAI5a,GACf0P,EAAYA,EAAUolB,MAAK,kBAAMuP,EAAWc,OAAOnlC,EAAI,KAE3DsyB,EAAWhtB,KAAKoK,EACpB,EA5BA,IAAK,IAAM1P,KAAOE,EAAM,KA6BxB,OAAOqyB,QAAQxD,IAAIuD,GAAYwC,MAAK,WAChC7J,IAAiB8xB,EAAAA,EAAAA,IAAU9nC,EAAegW,EAC9C,GACJ,CACA,SAASuxB,EAAgBvnC,EAAe+mC,GAAgF,IAAvEzmC,EAAgB,UAAH,6CAAG,EAAGC,EAAkB,UAAH,6CAAG,EAAGC,EAAmB,UAAH,6CAAG,EAAGzK,EAAO,uCAC5GsnB,EAAa,GACb0qB,GAAsB/nC,EAAcuf,gBAAgBte,KAAO,GAAKV,EAChEynC,EAA+C,IAArBxnC,EAC1B,eAACxV,EAAI,UAAH,6CAAG,EAAC,OAAKA,EAAIuV,CAAe,EAC9B,eAACvV,EAAI,UAAH,6CAAG,EAAC,OAAK+8C,EAAqB/8C,EAAIuV,CAAe,EAUzD,OATAvQ,MAAM3D,KAAK2T,EAAcuf,iBACpBtP,KAAKg4B,GACLtkC,SAAQ,SAACK,EAAOhZ,GACjBgZ,EAAM8qB,OAAO,iBAAkBiY,GAC/B1pB,EAAWhtB,KAAK22C,EAAehjC,EAAO+iC,GAAS,kBACxChxC,GAAO,IACV2C,MAAO4H,EAAgB0nC,EAAwBh9C,MAChD60B,MAAK,kBAAM7b,EAAM8qB,OAAO,oBAAqBiY,EAAQ,IAC5D,IACOzpB,QAAQxD,IAAIuD,EACvB,CACA,SAASyI,EAAc9lB,GACnBA,EAAcvQ,OAAOkU,SAAQ,SAACtQ,GAAK,OAAKA,EAAM2F,MAAM,GACxD,CACA,SAASivC,EAAgBpzC,EAAGC,GACxB,OAAOD,EAAEqzC,iBAAiBpzC,EAC9B,CAOA,SAAS8yC,EAAqB,EAAmC78C,GAAK,IAAtCwzB,EAAa,EAAbA,cAAeU,EAAc,EAAdA,eACrCkpB,EAAc5pB,EAAcjjB,eAAevQ,KAAgC,IAAxBk0B,EAAel0B,GAExE,OADAk0B,EAAel0B,IAAO,EACfo9C,CACX,C,qEC5HA,SAASvqB,EAAe5d,EAAepN,EAAYoQ,GAC/C,IAAMlC,EAAQd,EAAcE,WAC5B,OAAO6V,EAAAA,EAAAA,GAAwBjV,EAAOlO,OAAuB5D,IAAXgU,EAAuBA,EAASlC,EAAMkC,OAf5F,SAAoBhD,GAChB,IAAMxI,EAAU,CAAC,EAEjB,OADAwI,EAAcvQ,OAAOkU,SAAQ,SAACtQ,EAAOtI,GAAG,OAAMyM,EAAQzM,GAAOsI,EAAM8L,KAAK,IACjE3H,CACX,CAWoG4wC,CAAWpoC,GAP/G,SAAqBA,GACjB,IAAM1L,EAAW,CAAC,EAElB,OADA0L,EAAcvQ,OAAOkU,SAAQ,SAACtQ,EAAOtI,GAAG,OAAMuJ,EAASvJ,GAAOsI,EAAMyM,aAAa,IAC1ExL,CACX,CAG+HwL,CAAYE,GAC3I,C,uBCrBA,SAAS+V,EAAwBjV,EAAOlO,EAAYoQ,GAAkD,IAA1CqlC,EAAgB,UAAH,6CAAG,CAAC,EAAG5wC,EAAkB,UAAH,6CAAG,CAAC,EAsB/F,MAlB0B,oBAAf7E,IACPA,EAAaA,OAAsB5D,IAAXgU,EAAuBA,EAASlC,EAAMkC,OAAQqlC,EAAe5wC,IAM/D,kBAAf7E,IACPA,EAAakO,EAAM0J,UAAY1J,EAAM0J,SAAS5X,IAOxB,oBAAfA,IACPA,EAAaA,OAAsB5D,IAAXgU,EAAuBA,EAASlC,EAAMkC,OAAQqlC,EAAe5wC,IAElF7E,CACX,C,iMCpBM01C,EAAoB,SAAC/7C,GAAC,MAAK,aAAaa,KAAKb,EAAE,E,qECK/Cg8C,EAAa,GAAH,eAAOzD,EAAAA,GAAmB,CAAE73C,EAAAA,EAAOiC,EAAAA,IAI7Cs5C,EAAgB,SAACj8C,GAAC,OAAKg8C,EAAWp7C,MAAK+3C,EAAAA,EAAAA,GAAc34C,GAAG,E,2CCC9D,SAASk8C,EAAezoC,EAAejV,EAAKsI,GACpC2M,EAAcutB,SAASxiC,GACvBiV,EAAc6oB,SAAS99B,GAAK0R,IAAIpJ,GAGhC2M,EAAc2xB,SAAS5mC,GAAK4+B,EAAAA,EAAAA,GAAYt2B,GAEhD,CACA,SAASy0C,EAAU9nC,EAAepN,GAC9B,IAAMkjB,GAAW8H,EAAAA,EAAAA,GAAe5d,EAAepN,GAC/C,EAAyDkjB,EAAW9V,EAAc0nC,qBAAqB5xB,GAAU,GAAS,CAAC,EAAC,IAAtHE,cAAAA,OAAa,IAAG,GAAC,EAAC,EAAsB/qB,GAAtB,EAAEgU,YAA0B,aAEpD,IAAK,IAAMlU,KADXE,GAAS,kBAAKA,GAAW+qB,GACC,CAEtByyB,EAAezoC,EAAejV,GADhB29C,EAAAA,EAAAA,GAA6Bz9C,EAAOF,IAEtD,CACJ,CACA,SAAS49C,EAAY3oC,EAAe4oC,IACT,OAAIA,GAAej4C,UAC3BgT,SAAQ,SAAC5Y,GACpB,IAAIoO,EACE4tC,EAAU/mC,EAAc6oC,WAAW99C,GACzCg8C,GAAWe,EAAU9nC,EAAe+mC,GACK,QAAxC5tC,EAAK6G,EAAcuf,uBAAoC,IAAPpmB,GAAyBA,EAAGwK,SAAQ,SAACK,GAClF2kC,EAAY3kC,EAAO4kC,EACvB,GACJ,GACJ,CACA,SAASE,EAAU9oC,EAAepN,GAC9B,OAAI5C,MAAMC,QAAQ2C,GACP+1C,EAAY3oC,EAAepN,GAEP,kBAAfA,EACL+1C,EAAY3oC,EAAe,CAACpN,SAGnCk1C,EAAU9nC,EAAepN,EAEjC,CACA,SAASogC,EAAwBhzB,EAAe/U,EAAQsD,GACpD,IAAI4K,EAAIC,EACF2vC,EAAe79C,OAAO8K,KAAK/K,GAAQkiC,QAAO,SAACpiC,GAAG,OAAMiV,EAAcutB,SAASxiC,EAAI,IAC/Ei+C,EAAeD,EAAa19C,OAClC,GAAK29C,EAEL,IAAK,IAAIh+C,EAAI,EAAGA,EAAIg+C,EAAch+C,IAAK,CACnC,IAAMD,EAAMg+C,EAAa/9C,GACnBi+C,EAAch+C,EAAOF,GACvBsI,EAAQ,KAKRrD,MAAMC,QAAQg5C,KACd51C,EAAQ41C,EAAY,IAOV,OAAV51C,IACAA,EAAoG,QAA3F+F,EAA4B,QAAtBD,EAAK5K,EAAOxD,UAAyB,IAAPoO,EAAgBA,EAAK6G,EAAckpC,UAAUn+C,UAAyB,IAAPqO,EAAgBA,EAAKnO,EAAOF,SAM9HiE,IAAVqE,GAAiC,OAAVA,IAEN,kBAAVA,IChFc,iBAAiBjG,KDiFnBiG,IAAUi1C,EAAkBj1C,IAE/CA,EAAQoN,WAAWpN,IAEbm1C,EAAcn1C,IAAUnE,EAAAA,EAAAA,KAAa+5C,KAC3C51C,GAAQ+L,EAAAA,EAAAA,GAAkBrU,EAAKk+C,IAEnCjpC,EAAc2xB,SAAS5mC,GAAK4+B,EAAAA,EAAAA,GAAYt2B,EAAO,CAAEkJ,MAAOyD,UACpChR,IAAhBT,EAAOxD,KACPwD,EAAOxD,GAAOsI,GAEJ,OAAVA,GACA2M,EAAcmpC,cAAcp+C,EAAKsI,GACzC,CACJ,CACA,SAAS+1C,EAAwBr+C,EAAKkU,GAClC,GAAKA,EAGL,OADwBA,EAAWlU,IAAQkU,EAAoB,SAAKA,GAC7C5S,IAC3B,CACA,SAAS0mC,EAAU9nC,EAAQgU,EAAYe,GACnC,IAAI7G,EACE5K,EAAS,CAAC,EAChB,IAAK,IAAMxD,KAAOE,EAAQ,CACtB,IAAMo+C,EAAmBD,EAAwBr+C,EAAKkU,GACtD1Q,EAAOxD,QACkBiE,IAArBq6C,EACMA,EACuC,QAAtClwC,EAAK6G,EAAc6oB,SAAS99B,UAAyB,IAAPoO,OAAgB,EAASA,EAAGgG,KACzF,CACA,OAAO5Q,CACX,C,uBEpHA,SAASkqC,EAAc6Q,EAAKC,IACG,IAAvBD,EAAIh+C,QAAQi+C,IACZD,EAAIj5C,KAAKk5C,EACjB,CACA,SAAS7Q,EAAW4Q,EAAKC,GACrB,IAAMxhC,EAAQuhC,EAAIh+C,QAAQi+C,GACtBxhC,GAAS,GACTuhC,EAAIx1C,OAAOiU,EAAO,EAC1B,C,+GCRA,IAAMvX,EAAQ,SAAC6G,EAAK1K,EAAKJ,GAAC,OAAKE,KAAK4K,IAAI5K,KAAKE,IAAIJ,EAAG8K,GAAM1K,EAAI,C,qECK9D,SAAS+L,EAAMiO,EAAU6iC,GACrB,IAAM1wC,EAAQwN,YAAYC,MACpBkjC,EAAe,SAAfA,EAAY,GAAsB,IAC9BhxC,EADuB,EAAT0N,UACQrN,EACxBL,GAAW+wC,IACXvwC,EAAAA,GAAAA,KAAgBwwC,GAChB9iC,EAASlO,EAAU+wC,GAE3B,EAEA,OADAzwC,EAAAA,GAAAA,KAAU0wC,GAAc,GACjB,kBAAMxwC,EAAAA,GAAAA,KAAgBwwC,EAAa,CAC9C,C,uDChBA,IAAMt8B,EAAgC,qBAAb7K,Q,uDCqBzB,IAAMjU,EAAM,SAAChC,EAAMC,EAAIwE,GAAQ,OAAMA,EAAWzE,EAAOyE,EAAWxE,EAAKD,CAAI,C,uDCrB3E,IAAMkF,EAAO,SAACm4C,GAAG,OAAKA,CAAG,C,uDCOzB,IAAMC,EAAmB,SAAC90C,EAAGC,GAAC,OAAK,SAACvI,GAAC,OAAKuI,EAAED,EAAEtI,GAAG,GAC3CiD,EAAO,WAAH,2BAAOo6C,EAAY,yBAAZA,EAAY,uBAAKA,EAAaziC,OAAOwiC,EAAiB,C,uDCIvE,IAAM74C,EAAW,SAACzE,EAAMC,EAAI+G,GACxB,IAAMw2C,EAAmBv9C,EAAKD,EAC9B,OAA4B,IAArBw9C,EAAyB,GAAKx2C,EAAQhH,GAAQw9C,CACzD,C,4FCbM90B,EAAgB,SAACxoB,GACnB,OAAOc,QAAQd,GAAkB,kBAANA,GAAkBA,EAAE8B,KAAO9B,EAAEyoB,QAC5D,EACM0zB,EAA+B,SAACn8C,GAElC,OAAO6T,EAAAA,EAAAA,GAAkB7T,GAAKA,EAAEA,EAAElB,OAAS,IAAM,EAAIkB,CACzD,C,wFCNMomC,EAAmB,WACrB,cAAc,eACV9xB,KAAKipC,cAAgB,EACzB,CA+BC,OA/BA,2BACD,SAAIpzB,GAAS,WAET,OADA+hB,EAAAA,EAAAA,IAAc53B,KAAKipC,cAAepzB,GAC3B,kBAAMgiB,EAAAA,EAAAA,IAAW,EAAKoR,cAAepzB,EAAQ,CACxD,GAAC,oBACD,SAAO7hB,EAAGC,EAAGE,GACT,IAAM+0C,EAAmBlpC,KAAKipC,cAAcz+C,OAC5C,GAAK0+C,EAEL,GAAyB,IAArBA,EAIAlpC,KAAKipC,cAAc,GAAGj1C,EAAGC,EAAGE,QAG5B,IAAK,IAAIhK,EAAI,EAAGA,EAAI++C,EAAkB/+C,IAAK,CAKvC,IAAM0rB,EAAU7V,KAAKipC,cAAc9+C,GACnC0rB,GAAWA,EAAQ7hB,EAAGC,EAAGE,EAC7B,CAER,GAAC,qBACD,WACI,OAAO6L,KAAKipC,cAAcz+C,MAC9B,GAAC,mBACD,WACIwV,KAAKipC,cAAcz+C,OAAS,CAChC,KAAC,EAlCoB,E,uDCIzB,IAAMqU,EAAwB,SAACsqC,GAAO,OAAe,IAAVA,CAAc,C,qECGzD,SAAS5mC,EAAY6mC,GACjB,IAAMjoC,GAAMC,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBD,EAAIxK,UACJwK,EAAIxK,QAAUyyC,KAEXjoC,EAAIxK,OACf,C,mGCXA,SAAS2M,IACL,IAAMK,GAAYC,EAAAA,EAAAA,KAClB,GAAkDylC,EAAAA,EAAAA,UAAS,GAAE,eAAtDC,EAAiB,KAAEC,EAAoB,KACxChmC,GAAcmJ,EAAAA,EAAAA,cAAY,WAC5B/I,EAAUhN,SAAW4yC,EAAqBD,EAAoB,EAClE,GAAG,CAACA,IAMJ,MAAO,EADqB58B,EAAAA,EAAAA,cAAY,kBAAMxU,EAAAA,GAAAA,WAAgBqL,EAAY,GAAE,CAACA,IAChD+lC,EACjC,C,+ECbA,SAAS1lC,IACL,IAAMD,GAAYvC,EAAAA,EAAAA,SAAO,GAOzB,OANAmD,EAAAA,EAAAA,IAA0B,WAEtB,OADAZ,EAAUhN,SAAU,EACb,WACHgN,EAAUhN,SAAU,CACxB,CACJ,GAAG,IACIgN,CACX,C,qECTMY,E,QAA4B+H,EAAYk9B,EAAAA,gBAAkBvgC,EAAAA,S,qECDhE,SAASxE,EAAiBqB,GACtB,OAAOmD,EAAAA,EAAAA,YAAU,kBAAM,kBAAMnD,GAAU,IAAE,GAC7C,C,sBCEA,SAAShP,EAAkBrD,EAAUg2C,GACjC,OAAOA,EAAgBh2C,GAAY,IAAOg2C,GAAiB,CAC/D,C,mJCHMC,EAAU,SAACl3C,GACb,OAAQoC,MAAMgL,WAAWpN,GAC7B,EAMMm3C,EAAW,WASb,WAAYP,GAAoB,WAAdl0C,EAAU,UAAH,6CAAG,CAAC,GAAC,eAK1B8K,KAAK4pC,QAAU,QAMf5pC,KAAK8gB,UAAY,EAMjB9gB,KAAK6pC,YAAc,EAQnB7pC,KAAK8pC,kBAAmB,EAIxB9pC,KAAK8tB,OAAS,CAAC,EACf9tB,KAAK+pC,gBAAkB,SAACr+C,GAAqB,IAAlBqd,IAAS,UAAH,+CAC7B,EAAKrM,KAAO,EAAK/F,QACjB,EAAKA,QAAUjL,EAEf,IAAQqI,EAAqB8I,EAAAA,EAAAA,MAAdyI,EAAczI,EAAAA,EAAAA,UACzB,EAAKgtC,cAAgBvkC,IACrB,EAAKwb,UAAY/sB,EACjB,EAAK81C,YAAcvkC,EACnBpN,EAAAA,GAAAA,WAAgB,EAAK8xC,wBAGrB,EAAKttC,OAAS,EAAK/F,SAAW,EAAKm3B,OAAOmc,QAC1C,EAAKnc,OAAOmc,OAAOhc,OAAO,EAAKt3B,SAG/B,EAAKm3B,OAAOoc,gBACZ,EAAKpc,OAAOoc,eAAejc,OAAO,EAAKhvB,eAGvC8J,GAAU,EAAK+kB,OAAOqc,eACtB,EAAKrc,OAAOqc,cAAclc,OAAO,EAAKt3B,QAE9C,EASAqJ,KAAKgqC,sBAAwB,kBAAM9xC,EAAAA,GAAAA,WAAgB,EAAKkyC,cAAc,EAUtEpqC,KAAKoqC,cAAgB,YAAY,EAAT9kC,YACF,EAAKukC,cACnB,EAAKntC,KAAO,EAAK/F,QACb,EAAKm3B,OAAOoc,gBACZ,EAAKpc,OAAOoc,eAAejc,OAAO,EAAKhvB,eAGnD,EACAe,KAAKgxB,aAAc,EACnBhxB,KAAKtD,KAAOsD,KAAKrJ,QAAUyyC,EAC3BppC,KAAK8pC,iBAAmBJ,EAAQ1pC,KAAKrJ,SACrCqJ,KAAKtE,MAAQxG,EAAQwG,KACzB,CAwNC,OAvND,gCAwCA,SAAS2uC,GACL,OAAOrqC,KAAKwvB,GAAG,SAAU6a,EAC7B,GAAC,gBACD,SAAGz0B,EAAW9P,GAAU,WACf9F,KAAK8tB,OAAOlY,KACb5V,KAAK8tB,OAAOlY,GAAa,IAAIkc,EAAAA,GAEjC,IAAMwY,EAActqC,KAAK8tB,OAAOlY,GAAW9Q,IAAIgB,GAC/C,MAAkB,WAAd8P,EACO,WACH00B,IAKApyC,EAAAA,GAAAA,MAAU,WACD,EAAK41B,OAAOmc,OAAOM,WACpB,EAAKpyC,MAEb,GACJ,EAEGmyC,CACX,GAAC,4BACD,WACI,IAAK,IAAME,KAAiBxqC,KAAK8tB,OAC7B9tB,KAAK8tB,OAAO0c,GAAe9lC,OAEnC,GACA,oBAKA,SAAO+lC,EAAeC,GAClB1qC,KAAKyqC,cAAgBA,EACrBzqC,KAAK0qC,kBAAoBA,CAC7B,GACA,iBAeA,SAAIh/C,GAAkB,IAAfqd,IAAS,UAAH,+CACJA,GAAW/I,KAAKyqC,cAIjBzqC,KAAKyqC,cAAc/+C,EAAGsU,KAAK+pC,iBAH3B/pC,KAAK+pC,gBAAgBr+C,EAAGqd,EAKhC,GAAC,6BACD,SAAgBrM,EAAM/F,EAAS5C,GAC3BiM,KAAKpE,IAAIjF,GACTqJ,KAAKtD,KAAOA,EACZsD,KAAK8gB,UAAY/sB,CACrB,GACA,kBAIA,SAAKrI,GACDsU,KAAK+pC,gBAAgBr+C,GACrBsU,KAAKtD,KAAOhR,EACZsU,KAAK7H,OACD6H,KAAK0qC,mBACL1qC,KAAK0qC,mBACb,GACA,iBAOA,WACI,OAAO1qC,KAAKrJ,OAChB,GACA,yBAGA,WACI,OAAOqJ,KAAKtD,IAChB,GACA,yBAOA,WAEI,OAAOsD,KAAK8pC,kBAEJhzC,EAAAA,EAAAA,GAAkB8I,WAAWI,KAAKrJ,SAC9BiJ,WAAWI,KAAKtD,MAAOsD,KAAK8gB,WAClC,CACV,GACA,mBAYA,SAAMtkB,GAAgB,WAElB,OADAwD,KAAK7H,OACE,IAAIskB,SAAQ,SAACgC,GAChB,EAAKuS,aAAc,EACnB,EAAKp3B,UAAY4C,EAAeiiB,IAAY,KACxC,EAAKqP,OAAO6c,gBACZ,EAAK7c,OAAO6c,eAAe1c,QAEnC,IAAGjP,MAAK,WACA,EAAK8O,OAAO8c,mBACZ,EAAK9c,OAAO8c,kBAAkB3c,SAElC,EAAK4c,gBACT,GACJ,GACA,kBAKA,WACQ7qC,KAAKpG,YACLoG,KAAKpG,UAAUzB,OACX6H,KAAK8tB,OAAOgd,iBACZ9qC,KAAK8tB,OAAOgd,gBAAgB7c,UAGpCjuB,KAAK6qC,gBACT,GACA,yBAKA,WACI,QAAS7qC,KAAKpG,SAClB,GAAC,4BACD,WACIoG,KAAKpG,UAAY,IACrB,GACA,qBASA,WACIoG,KAAK+qC,iBACL/qC,KAAK7H,OACD6H,KAAK0qC,mBACL1qC,KAAK0qC,mBAEb,KAAC,EApTY,GAsTjB,SAAS5hB,EAAYsgB,EAAMl0C,GACvB,OAAO,IAAIy0C,EAAYP,EAAMl0C,EACjC,C,qECpSA,IAAMlJ,EAAM,CACRO,MAAMy+C,E,QAAAA,GAAc,KACpBt+C,MAhCJ,SAAkBhB,GACd,IAAIu/C,EAAI,GACJz2C,EAAI,GACJP,EAAI,GACJD,EAAI,GAmBR,OAjBItI,EAAElB,OAAS,GACXygD,EAAIv/C,EAAEw/C,UAAU,EAAG,GACnB12C,EAAI9I,EAAEw/C,UAAU,EAAG,GACnBj3C,EAAIvI,EAAEw/C,UAAU,EAAG,GACnBl3C,EAAItI,EAAEw/C,UAAU,EAAG,KAInBD,EAAIv/C,EAAEw/C,UAAU,EAAG,GACnB12C,EAAI9I,EAAEw/C,UAAU,EAAG,GACnBj3C,EAAIvI,EAAEw/C,UAAU,EAAG,GACnBl3C,EAAItI,EAAEw/C,UAAU,EAAG,GACnBD,GAAKA,EACLz2C,GAAKA,EACLP,GAAKA,EACLD,GAAKA,GAEF,CACHjH,IAAKo+C,SAASF,EAAG,IACjBj+C,MAAOm+C,SAAS32C,EAAG,IACnBvH,KAAMk+C,SAASl3C,EAAG,IAClBnH,MAAOkH,EAAIm3C,SAASn3C,EAAG,IAAM,IAAM,EAE3C,EAIIma,UAAWliB,EAAAA,EAAAA,U,mGC/BTC,EAAO,CACTK,MAAMy+C,EAAAA,EAAAA,GAAc,MAAO,OAC3Bt+C,OAAO0+C,EAAAA,EAAAA,GAAW,MAAO,aAAc,aACvCj9B,UAAW,YAAwD,IAArDxhB,EAAG,EAAHA,IAAKC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAS,IAAEC,MAAOu+C,OAAO,IAAG,IAAC,EACxD,MAAQ,QACJz/C,KAAKsB,MAAMP,GACX,KACA44B,EAAAA,GAAAA,WAAkB+lB,EAAAA,EAAAA,IAAS1+C,IAC3B,KACA24B,EAAAA,GAAAA,WAAkB+lB,EAAAA,EAAAA,IAASz+C,IAC3B,MACAy+C,EAAAA,EAAAA,IAASx+C,EAAAA,GAAAA,UAAgBu+C,IACzB,GACR,E,mGCbEj/C,EAAQ,CACVG,KAAM,SAACb,GAAC,OAAKO,EAAAA,EAAAA,KAAUP,IAAMM,EAAAA,EAAAA,KAASN,IAAMQ,EAAAA,EAAAA,KAAUR,EAAE,EACxDgB,MAAO,SAAChB,GACJ,OAAIO,EAAAA,EAAAA,KAAUP,GACHO,EAAAA,EAAAA,MAAWP,GAEbQ,EAAAA,EAAAA,KAAUR,GACRQ,EAAAA,EAAAA,MAAWR,GAGXM,EAAAA,EAAAA,MAAUN,EAEzB,EACAyiB,UAAW,SAACziB,GACR,OAAO6/C,EAAAA,EAAAA,IAAS7/C,GACVA,EACAA,EAAE+O,eAAe,OACbxO,EAAAA,EAAAA,UAAeP,GACfQ,EAAAA,EAAAA,UAAeR,EAC7B,E,6GClBE8/C,GAAU,kBACT/gB,EAAAA,IAAM,IACTtc,UAAW,SAACziB,GAAC,OAAKE,KAAKsB,MAHN,SAACxB,GAAC,OAAKiE,EAAAA,EAAAA,GAAM,EAAG,IAAKjE,EAAE,CAGX+/C,CAAa//C,GAAG,IAE3CO,EAAO,CACTM,MAAMy+C,EAAAA,EAAAA,GAAc,MAAO,OAC3Bt+C,OAAO0+C,EAAAA,EAAAA,GAAW,MAAO,QAAS,QAClCj9B,UAAW,gBAAGphB,EAAG,EAAHA,IAAKC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAI,IAAEH,MAAOu+C,OAAO,IAAG,IAAC,QAAO,QACrDG,EAAQr9B,UAAUphB,GAClB,KACAy+C,EAAQr9B,UAAUnhB,GAClB,KACAw+C,EAAQr9B,UAAUlhB,GAClB,MACAq+C,EAAAA,EAAAA,IAASx+C,EAAAA,GAAAA,UAAgBu+C,IACzB,GAAG,E,gHCfLL,EAAgB,SAAC3+C,EAAMq/C,GAAQ,OAAK,SAAChgD,GACvC,OAAOc,SAAS++C,EAAAA,EAAAA,IAAS7/C,IAAMigD,EAAAA,GAAAA,KAAsBjgD,IAAMA,EAAEwS,WAAW7R,IACnEq/C,GAAYrhD,OAAOK,UAAU+P,eAAe7P,KAAKc,EAAGggD,GAC7D,CAAC,EACKN,EAAa,SAACQ,EAAOC,EAAOC,GAAK,OAAK,SAACpgD,GAAM,MAC/C,KAAK6/C,EAAAA,EAAAA,IAAS7/C,GACV,OAAOA,EACX,MAAyBA,EAAEi+B,MAAMoiB,EAAAA,IAAW,eAArC/3C,EAAC,KAAEC,EAAC,KAAEE,EAAC,KAAErH,EAAK,KACrB,OAAO,EAAP,aACK8+C,EAAQhsC,WAAW5L,KAAE,SACrB63C,EAAQjsC,WAAW3L,KAAE,SACrB63C,EAAQlsC,WAAWzL,KAAE,sBACLhG,IAAVrB,EAAsB8S,WAAW9S,GAAS,GAAC,CAE1D,CAAC,C,mGCdKk/C,EAAc,IAAIlxC,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASmxC,EAAmBvgD,GACxB,MAAsBA,EAAEwgD,MAAM,GAAI,GAAGrhB,MAAM,KAAI,eAAxCphB,EAAI,KAAEjX,EAAK,KAClB,GAAa,gBAATiX,EACA,OAAO/d,EACX,MAAiB8G,EAAMm3B,MAAMoiB,EAAAA,KAAe,GAArCthB,GAAuC,YAAjC,GACb,IAAKA,EACD,OAAO/+B,EACX,IAAMygD,EAAO35C,EAAMohC,QAAQnJ,EAAQ,IAC/BiH,EAAesa,EAAY/wC,IAAIwO,GAAQ,EAAI,EAG/C,OAFIghB,IAAWj4B,IACXk/B,GAAgB,KACbjoB,EAAO,IAAMioB,EAAeya,EAAO,GAC9C,CACA,IAAMC,EAAgB,oBAChB9f,GAAS,kBACRj+B,EAAAA,GAAO,IACVkQ,kBAAmB,SAAC7S,GAChB,IAAM2gD,EAAY3gD,EAAEi+B,MAAMyiB,GAC1B,OAAOC,EAAYA,EAAUr+C,IAAIi+C,GAAoBhiC,KAAK,KAAOve,CACrE,G,0HCtBE4gD,EAAa,OACbC,EAAc,OASpB,SAASh+C,EAAoB7C,GACR,kBAANA,IACPA,EAAI,GAAH,OAAMA,IACX,IAAMkD,EAAS,GACXH,EAAY,EACZC,EAAa,EACX89C,EAAS9gD,EAAEi+B,MAAM8iB,EAAAA,IACnBD,IACA/9C,EAAY+9C,EAAOhiD,OAGnBkB,EAAIA,EAAEkoC,QAAQ6Y,EAAAA,GAAYH,GAC1B19C,EAAOY,KAAI,MAAXZ,GAAM,OAAS49C,EAAOx+C,IAAI5B,EAAAA,EAAAA,UAE9B,IAAMsgD,EAAUhhD,EAAEi+B,MAAMoiB,EAAAA,IAMxB,OALIW,IACAh+C,EAAag+C,EAAQliD,OACrBkB,EAAIA,EAAEkoC,QAAQmY,EAAAA,GAAYQ,GAC1B39C,EAAOY,KAAI,MAAXZ,GAAM,OAAS89C,EAAQ1+C,IAAIy8B,EAAAA,GAAAA,UAExB,CAAE77B,OAAAA,EAAQH,UAAAA,EAAWC,WAAAA,EAAYi+C,UAAWjhD,EACvD,CACA,SAASgB,EAAMhB,GACX,OAAO6C,EAAoB7C,GAAGkD,MAClC,CACA,SAASg+C,EAAkB5iD,GACvB,MAAyCuE,EAAoBvE,GAArD4E,EAAM,EAANA,OAAQH,EAAS,EAATA,UAAWk+C,EAAS,EAATA,UACrB7+C,EAAYc,EAAOpE,OACzB,OAAO,SAACkB,GAEJ,IADA,IAAImC,EAAS8+C,EACJxiD,EAAI,EAAGA,EAAI2D,EAAW3D,IAC3B0D,EAASA,EAAO+lC,QAAQzpC,EAAIsE,EAAY69C,EAAaC,EAAapiD,EAAIsE,EAChErC,EAAAA,EAAAA,UAAgBV,EAAEvB,KAClBmhD,EAAAA,EAAAA,IAAS5/C,EAAEvB,KAErB,OAAO0D,CACX,CACJ,CACA,IAAMg/C,EAAuB,SAACnhD,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAM2C,EAAU,CAAE9B,KApDlB,SAAcb,GACV,IAAI4M,EAAIC,EACR,OAAQ3D,MAAMlJ,KACV6/C,EAAAA,EAAAA,IAAS7/C,MACwB,QAA9B4M,EAAK5M,EAAEi+B,MAAMoiB,EAAAA,WAAgC,IAAPzzC,OAAgB,EAASA,EAAG9N,SAAW,KAC3C,QAA9B+N,EAAK7M,EAAEi+B,MAAM8iB,EAAAA,WAAgC,IAAPl0C,OAAgB,EAASA,EAAG/N,SAAW,GAChF,CACZ,EA6CwBkC,MAAAA,EAAOkgD,kBAAAA,EAAmBruC,kBALlD,SAA2B7S,GACvB,IAAM0mC,EAAS1lC,EAAMhB,GAErB,OADoBkhD,EAAkBlhD,EAC/BohD,CAAY1a,EAAOpkC,IAAI6+C,GAClC,E,gICvDMpiB,EAAS,CACXl+B,KAAM,SAACb,GAAC,MAAkB,kBAANA,CAAc,EAClCgB,MAAOkT,WACPuO,UAAW,SAACziB,GAAC,OAAKA,CAAC,GAEjBoB,GAAQ,kBACP29B,GAAM,IACTtc,UAAW,SAACziB,GAAC,OAAKiE,EAAAA,EAAAA,GAAM,EAAG,EAAGjE,EAAE,IAE9BiS,GAAQ,kBACP8sB,GAAM,IACT3sB,QAAS,G,wMCXPivC,EAAiB,SAACZ,GAAI,MAAM,CAC9B5/C,KAAM,SAACb,GAAC,OAAK6/C,EAAAA,EAAAA,IAAS7/C,IAAMA,EAAEshD,SAASb,IAAiC,IAAxBzgD,EAAEm/B,MAAM,KAAKrgC,MAAY,EACzEkC,MAAOkT,WACPuO,UAAW,SAACziB,GAAC,gBAAQA,GAAC,OAAGygD,EAAI,EAChC,EACKjI,EAAU6I,EAAe,OACzBxnB,EAAUwnB,EAAe,KACzB57B,EAAK47B,EAAe,MACpB3I,EAAK2I,EAAe,MACpB5I,EAAK4I,EAAe,MACpBnH,GAAqB,kBACpBrgB,GAAO,IACV74B,MAAO,SAAChB,GAAC,OAAK65B,EAAQ74B,MAAMhB,GAAK,GAAG,EACpCyiB,UAAW,SAACziB,GAAC,OAAK65B,EAAQpX,UAAc,IAAJziB,EAAQ,G,wJCThD,IAAM4/C,EAAW,SAAC5/C,GAAC,OAAKE,KAAKsB,MAAU,IAAJxB,GAAc,GAAM,EACjDqgD,EAAa,uBACbU,EAAa,8FACbd,EAAmB,+FACzB,SAASJ,EAAS7/C,GACd,MAAoB,kBAANA,CAClB,C,qECVA,SAAS+iC,EAAwBj8B,GAC7B,OAAOhG,SAAQojB,EAAAA,EAAAA,GAAcpd,IAAUA,EAAMsS,IACjD,C,uDCJA,IAAM8K,EAAgB,SAACpd,GAAK,SAAkB,OAAVA,QAA4B,IAAVA,OAAmB,EAASA,EAAMyM,YAAY,C","sources":["../node_modules/hey-listen/dist/hey-listen.es.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n        }\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.5.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.5.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.5.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["warning","invariant","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","instantAnimationState","easeIn","p","easeOut","reverseEasing","easeInOut","mirrorEasing","hueToRgb","q","t","mixLinearColor","from","to","v","fromExpo","Math","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","getMixer","origin","mixComplex","mixArray","output","numValues","blendValue","map","fromThis","mixObject","undefined","template","complex","originStats","analyseComplexValue","targetStats","numColors","numNumbers","pipe","values","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","Array","isArray","numMixers","mixer","easingFunction","push","interpolate","input","clamp","isClamp","inputLength","reverse","interpolator","progressInRange","progress","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","backOut","backIn","backInOut","easingLookup","linear","circIn","circInOut","circOut","anticipate","pow","easingDefinitionToFunction","definition","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","state","done","value","absoluteTimes","offset","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","easing","splice","next","flipTarget","safeMin","findSpring","envelope","derivative","bounce","velocity","mass","maxDuration","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","current","currentVelocity","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","start","sync","stop","cancelSync","animate","_a","_b","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","animation","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","hasOwnProperty","Element","results","supports","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","Infinity","sampleAnimation","pregeneratedKeyframes","element","fill","iterations","direction","animateStyle","owner","onfinish","set","getFinalKeyframe","cancel","setWithVelocity","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","prev","boundary","heading","frameData","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","default","getDefaultTransition","valueKey","isAnimatable","startsWith","getKeyframes","transition","isTargetAnimatable","get","getAnimatableNone","isZero","getZeroUnit","createMotionValueAnimation","valueTransition","getValueTransition","secondsToMilliseconds","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","isTransitionDefined","visualElement","HTMLElement","getProps","acceleratedAnimation","isKeyframesTarget","when","delayChildren","staggerChildren","staggerDirection","parseFloat","potentialUnitType","PopChildMeasure","prevProps","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useRef","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","register","delete","forEach","_","PresenceContext","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","useForceUpdate","forceRender","forceRenderLayoutGroup","useContext","LayoutGroupContext","isMounted","useIsMounted","filteredChildren","filtered","Children","isValidElement","onlyElements","childrenToRender","exiting","presentChildren","allChildren","isInitialRender","useIsomorphicLayoutEffect","updateChildLookup","useUnmountEffect","clear","presentKeys","targetKeys","numPresent","add","insertionIndex","removeIndex","findIndex","presentChild","cloneElement","createContext","acos","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","index","process","createRenderStep","keepAlive","immediate","startLoop","flushSync","processStep","stepId","processFrame","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","presenceId","blockInitialAnimation","render","HandoffAppearAnimations","useEffect","animationState","animateChanges","isRefObject","isVariantLabel","isAnimationControls","variantProps","isControllingVariants","name","isVariantNode","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","setProps","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","lazyStrictMode","initialLayoutGroupConfig","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","layout","transformProps","translateAlias","transformPerspective","sortTransformProps","transformPropOrder","isCSSVariable","getValueAsType","transform","buildHTMLStyles","latestValues","transformTemplate","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","numberValueTypes","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","isMotionValue","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","camelToDash","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","resolveVariantFromProps","transitionEnd","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","info","setActive","Hover","isNodeOrChild","parentElement","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","margin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_c","_d","onPointerCancel","startPress","latestProps","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","shallowCompare","prevLength","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animations","Promise","animateVisualElement","animateList","createTypeState","createState","buildResolvedTypeValues","resolveVariant","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","needsAnimating","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","resolve","variantChildren","setAnimateFunction","makeAnimator","getState","subscribe","safeToRemove","then","distance","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","right","bottom","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","getValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","match","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","number","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","filter","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","toType","fromType","findDimensionValueType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","willChange","initialMotionValues","isWillChangeMotionValue","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","remove","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","addValue","existingValue","hasAnimated","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","defaultValue","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","SubscriptionManager","args","DOMVisualElement","compareDocumentPosition","getOrigin","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","replace","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","removeItem","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig","str","defaultValueType","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","dimensionValueTypes","degrees","vw","vh","testValueType","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateX","translateY","translateZ","perspective","progressPercentage","zIndex","fillOpacity","strokeOpacity","numOctaves","optimizedAppearDataAttribute","variant","animateVariant","resolvedDefinition","animateTarget","transitionOverride","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","makeTargetAnimatable","animationTypeState","shouldBlockAnimation","appearId","setTarget","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","shouldBlock","getCurrent","currentValues","isZeroValueString","valueTypes","findValueType","setMotionValue","resolveFinalValueInKeyframes","setVariants","variantLabels","getVariant","setValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","getOriginFromTransition","transitionOrigin","arr","item","timeout","checkElapsed","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","init","useState","forcedRenderCount","setForcedRenderCount","useLayoutEffect","frameDuration","isFloat","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","substring","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorToken","numberToken","colors","colorRegex","numbers","tokenised","createTransformer","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}