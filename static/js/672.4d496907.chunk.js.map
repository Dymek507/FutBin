{"version":3,"file":"static/js/672.4d496907.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/Box/Box.js","components/CardLine.tsx","../node_modules/@mui/icons-material/esm/ViewList.js","../node_modules/@mui/icons-material/esm/ViewModule.js","../node_modules/@mui/icons-material/esm/ArrowUpward.js","../node_modules/@mui/icons-material/esm/ArrowDownward.js","pages/MyPlayers/helpers/CustomSelect.tsx","pages/MyPlayers/MyPlayersPage.tsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useFetchImages } from \"../hooks/useFetchImages\";\r\nimport generateStats from \"../utils/generateStats/generateStats\";\r\nimport { Player } from \"../types/modelTypes\";\r\n\r\ninterface CardLineProps {\r\n  playerData: Player;\r\n  sendPlayer: (playerData: Player, playerPrice?: number) => void;\r\n  pickedArray: Player[]\r\n}\r\n\r\nconst CardLine = ({ playerData, sendPlayer, pickedArray }: CardLineProps) => {\r\n  const [highlightPlayer, setHighlightPlayer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const ifPicked = pickedArray.filter(\r\n      (player) => player.id === playerData.id\r\n    ).length > 0;\r\n    setHighlightPlayer(ifPicked);\r\n\r\n  }, [pickedArray, playerData]);\r\n\r\n  //Add default photo if player has no photo\r\n  //Adding photos to Card\r\n  const { playerPhoto, playerClub, playerNation } = useFetchImages(\r\n    playerData.id,\r\n    playerData.club,\r\n    playerData.nation\r\n  );\r\n\r\n  const { cardBackground,\r\n    commonName,\r\n    rating,\r\n    position,\r\n    defending,\r\n    pace,\r\n    dribbling,\r\n    shooting,\r\n    passing,\r\n    physicality,\r\n    playerPrice,\r\n  } = useMemo(() => generateStats(playerData, \"line\"), [playerData])\r\n\r\n  const addPlayer = () => {\r\n    setHighlightPlayer((prevState) => !prevState);\r\n    sendPlayer({ ...playerData, playerPrice });\r\n  };\r\n\r\n  return (\r\n    //Main bar container\r\n    <div\r\n      onClick={addPlayer}\r\n      className=\r\n      \"flex text-[1.3rem] h-[3.2em] w-full shadow-2xl gap-[0.2em] text-black course-pointer\"\r\n      style={{\r\n        background: cardBackground,\r\n        filter: `${highlightPlayer ? 'brightness(40%)' : \"\"}`,\r\n      }\r\n      }\r\n    >\r\n      {/*Player nation and photo*/}\r\n      < div\r\n        style={{\r\n          backgroundImage: `url(${playerNation})`,\r\n        }}\r\n        className=\"flex w-[3.2em] bg-center bg-cover bg-no-repeat\"\r\n      >\r\n        <img\r\n          src={playerPhoto}\r\n          alt=\"Player_photo\"\r\n          style={{ filter: \"drop-shadow(0px 0px 0.5em #000)\" }}\r\n        />\r\n      </div >\r\n      {/*Player rating*/}\r\n      < div className=\"flex items-center justify-center mr-1\" >\r\n        <p className=\"text-[1.5em] px-[0.2em] border-r border-black\">\r\n          {rating}\r\n        </p>\r\n      </div >\r\n      {/*Player info*/}\r\n      < div className=\" flex flex-col items-start w-[6em] truncate\" >\r\n        <div className=\"flex items-center gap-2 h-[1.6em] mt-1\">\r\n          <div className=\"items-center\">\r\n            <img src={playerClub} className=\"w-[1.7em]\" alt=\"ClubLogo\"></img>\r\n          </div>\r\n          <p className=\"text-[1em] \">{position}</p>\r\n        </div>\r\n        <div className=\"flex items-center h-[1.6em] truncate\">\r\n          <p className=\"text-[1em]\">{commonName}</p>\r\n        </div>\r\n      </div >\r\n      {/*Statistics in detail*/}\r\n      < div className=\"ml-auto flex w-[3.6em] xs:w-min mr-1 items-center gap-0.5 flex-wrap xs:flex-nowrap  \" >\r\n        {\r\n          [pace, shooting, passing, dribbling, defending, physicality].map(\r\n            (stat, index) => (\r\n              <p\r\n                key={index}\r\n                className=\" text-[0.8em] xs:text-[1em] h-[1.6em] border border-black px-[0.1em] \"\r\n              >\r\n                {stat}\r\n              </p>\r\n            )\r\n          )\r\n        }\r\n      </div >\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default CardLine;\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 14h4v-4H3v4zm0 5h4v-4H3v4zM3 9h4V5H3v4zm5 5h13v-4H8v4zm0 5h13v-4H8v4zM8 5v4h13V5H8z\"\n}), 'ViewList');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14.67 5v6.5H9.33V5h5.34zm1 6.5H21V5h-5.33v6.5zm-1 7.5v-6.5H9.33V19h5.34zm1-6.5V19H21v-6.5h-5.33zm-7.34 0H3V19h5.33v-6.5zm0-1V5H3v6.5h5.33z\"\n}), 'ViewModule');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import { styled } from \"@mui/material\";\r\nimport { Select } from \"@mui/material\";\r\n\r\n\r\nexport const CustomSelect = styled(Select)(({ theme }) => ({\r\n  width: '20vw',\r\n  maxWidth: '200px',\r\n  height: '3rem',\r\n  color: theme.palette.primary.contrastText,\r\n  '& .MuiSvgIcon-root': {\r\n    color: theme.palette.primary.contrastText\r\n  },\r\n  \"&.MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    \"&:hover fieldset\": {\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      borderColor: theme.palette.primary.contrastText\r\n    }\r\n  }\r\n}));","import React, { useState, useEffect, useMemo, Suspense } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/app/hooks\";\r\nimport { fetchPlayersData, deletePlayer } from \"../../store/players-actions\";\r\nimport manageMoney from \"../../store/app/manageMoney\"\r\n\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\nimport { Box } from \"@mui/system\";\r\nimport CardLine from \"../../components/CardLine\";\r\nimport {\r\n  ArrowDownward,\r\n  ArrowUpward,\r\n  ViewList,\r\n  ViewModule,\r\n} from \"@mui/icons-material\";\r\nimport sortPlayers, { SortingVariants } from \"../../utils/sortPlayers\";\r\nimport { Player } from \"../../types/modelTypes\";\r\nimport InfoScreen from \"../../components/InfoScreen\";\r\nimport GridView from \"../../components/GridView\";\r\nimport { CustomSelect } from \"./helpers/CustomSelect\";\r\n\r\nconst sortOptions: { label: string, type: SortingVariants }[] = [\r\n  { label: \"Overall\", type: SortingVariants.rat },\r\n  { label: \"Pace\", type: SortingVariants.pac },\r\n  { label: \"Shooting\", type: SortingVariants.sho },\r\n  { label: \"Passing\", type: SortingVariants.pas },\r\n  { label: \"Dribbling\", type: SortingVariants.dri },\r\n  { label: \"Defending\", type: SortingVariants.def },\r\n  { label: \"Physicality\", type: SortingVariants.phy },\r\n];\r\n\r\nconst MyPlayers = () => {\r\n  const dispatch = useAppDispatch();\r\n  const myPlayers = useAppSelector((state) => state.players.myPlayers);\r\n  const uId = useAppSelector((state) => state.ui.userData?.uId);\r\n  const [playersGridView, setPlayersGridView] = useState<boolean>(true);\r\n  const [pickedPlayers, setPickedPlayers] = useState<Player[]>([]);\r\n  const [sortingAtr, setSortingAtr] = useState<SortingVariants>(SortingVariants.rat);\r\n  const [sortingDir, setSortingDir] = useState<boolean>(true);\r\n  const playersArray = useMemo(\r\n    () => sortPlayers(myPlayers, sortingAtr, sortingDir),\r\n    [myPlayers, sortingAtr, sortingDir]\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPlayersData());\r\n  }, [dispatch, uId]);\r\n\r\n  const pickPlayer = (playerData: Player) => {\r\n    const playerExists = pickedPlayers.find(\r\n      (player) => player.id === playerData.id\r\n    );\r\n\r\n    if (!playerExists) {\r\n      setPickedPlayers((prev) => [...prev, playerData]);\r\n    } else {\r\n      let newPickedPlayers = [...pickedPlayers];\r\n      newPickedPlayers = newPickedPlayers.filter(\r\n        (player) => player.id !== playerExists.id\r\n      );\r\n      setPickedPlayers(newPickedPlayers);\r\n    }\r\n  };\r\n\r\n  const deletePlayers = () => {\r\n    pickedPlayers.forEach((player) => {\r\n      if (uId !== null && player.playerPrice !== undefined) {\r\n        manageMoney(uId, player.playerPrice);\r\n        dispatch(deletePlayer(player.id));\r\n      }\r\n    });\r\n  };\r\n\r\n  const sortingHandler = (event: SelectChangeEvent<unknown>) => {\r\n    setSortingAtr(event.target.value as SortingVariants);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {myPlayers.length !== 0 ? <Box\r\n        bgcolor=\"primary.main\"\r\n        sx={{\r\n          mx: \"6rem\",\r\n          mt: \"2rem\",\r\n        }}\r\n      >\r\n        {/* Buttons with wrapper */}\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            height: \"5rem\",\r\n            marginX: \"1rem\",\r\n            marginBottom: '1rem',\r\n            color: 'white',\r\n            borderBottom: '2px solid white'\r\n          }}\r\n        >\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"large\">\r\n            Send\r\n          </Button>\r\n          {/* Change view style */}\r\n          <div>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                setPlayersGridView((prev) => !prev);\r\n              }}\r\n            >\r\n              {playersGridView ? <ViewList /> : <ViewModule />}\r\n            </IconButton>\r\n\r\n            {/* Change sorting direction */}\r\n            <IconButton\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                setSortingDir((prev) => !prev);\r\n              }}\r\n            >\r\n              {sortingDir ? <ArrowUpward /> : <ArrowDownward />}\r\n            </IconButton>\r\n\r\n            {/* Sorting by attribute */}\r\n            <FormControl\r\n            >\r\n              <CustomSelect\r\n                id=\"sorting-players\"\r\n                value={sortingAtr}\r\n                onChange={sortingHandler}\r\n              >\r\n                {sortOptions.map((option) => {\r\n                  return (\r\n                    <MenuItem key={option.label} value={option.type}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </CustomSelect>\r\n            </FormControl>\r\n          </div>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"large\" onClick={deletePlayers}>\r\n            Sell\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* >>>>>>>>> List view <<<<<<<<<<<<< */}\r\n        <Suspense fallback={<div className=\"w-[100vw] sm:w-[80vw] \">\r\n          <LinearProgress />\r\n        </div>}>\r\n          {!playersGridView && (\r\n            <Grid\r\n              sx={{ width: { xxs: \"100vw\", sm: \"80vw\", md: \"60vw\" } }}\r\n              container\r\n              rowSpacing={1}\r\n            >\r\n              {playersArray?.map((player) => (\r\n                <Grid key={player.id} item xxs={12} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                  <CardLine\r\n                    playerData={player}\r\n                    sendPlayer={pickPlayer}\r\n                    pickedArray={pickedPlayers}\r\n                  />\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          )}\r\n          {/* >>>>>>>>> Grid view <<<<<<<<<<<<<<< */}\r\n          {playersGridView && (\r\n            <GridView playersArray={playersArray} pickPlayer={pickPlayer} cardSize=\"14px\" pickedPlayers={pickedPlayers} xxs={12}\r\n              xs={12}\r\n              sm={6}\r\n              md={4}\r\n              lg={3}\r\n              xl={2} />\r\n          )}\r\n        </Suspense>\r\n      </Box> : <div className=\"w-full\"><InfoScreen text1=\"No Players\" text2=\"Open packs\" /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPlayers;\r\n"],"names":["createBox","playerData","sendPlayer","pickedArray","useState","highlightPlayer","setHighlightPlayer","useEffect","ifPicked","filter","player","id","length","useFetchImages","club","nation","playerPhoto","playerClub","playerNation","useMemo","generateStats","cardBackground","commonName","rating","position","defending","pace","dribbling","shooting","passing","physicality","playerPrice","onClick","prevState","className","style","background","backgroundImage","src","alt","map","stat","index","createSvgIcon","_jsx","d","CustomSelect","styled","Select","theme","width","maxWidth","height","color","palette","primary","contrastText","borderColor","sortOptions","label","type","SortingVariants","dispatch","useAppDispatch","myPlayers","useAppSelector","state","players","uId","ui","userData","playersGridView","setPlayersGridView","pickedPlayers","setPickedPlayers","sortingAtr","setSortingAtr","sortingDir","setSortingDir","playersArray","sortPlayers","fetchPlayersData","pickPlayer","playerExists","find","newPickedPlayers","prev","bgcolor","sx","mx","mt","display","justifyContent","alignItems","marginX","marginBottom","borderBottom","Button","variant","size","IconButton","ViewList","ViewModule","ArrowUpward","ArrowDownward","FormControl","value","onChange","event","target","option","MenuItem","forEach","undefined","manageMoney","deletePlayer","Suspense","fallback","LinearProgress","Grid","xxs","sm","md","container","rowSpacing","item","xs","lg","xl","GridView","cardSize","InfoScreen","text1","text2"],"sourceRoot":""}